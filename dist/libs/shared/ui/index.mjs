import { jsx as w, jsxs as _ } from "react/jsx-runtime";
import * as A from "react";
import Ks, { createElement as ai, createContext as bt, useRef as Yt, useContext as U, useId as Gs, useEffect as Je, useCallback as li, useLayoutEffect as zs, useMemo as ae, useInsertionEffect as qs, forwardRef as Ys, Fragment as ci, Component as Xs } from "react";
const Js = ({
  children: t,
  ...e
}) => /* @__PURE__ */ w("div", { ...e, children: t });
/**
 * @remix-run/router v1.6.2
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function Ee() {
  return Ee = Object.assign ? Object.assign.bind() : function(t) {
    for (var e = 1; e < arguments.length; e++) {
      var n = arguments[e];
      for (var i in n)
        Object.prototype.hasOwnProperty.call(n, i) && (t[i] = n[i]);
    }
    return t;
  }, Ee.apply(this, arguments);
}
var kn;
(function(t) {
  t.Pop = "POP", t.Push = "PUSH", t.Replace = "REPLACE";
})(kn || (kn = {}));
function Z(t, e) {
  if (t === !1 || t === null || typeof t > "u")
    throw new Error(e);
}
function ui(t, e) {
  if (!t) {
    typeof console < "u" && console.warn(e);
    try {
      throw new Error(e);
    } catch {
    }
  }
}
function hi(t) {
  let e = {};
  if (t) {
    let n = t.indexOf("#");
    n >= 0 && (e.hash = t.substr(n), t = t.substr(0, n));
    let i = t.indexOf("?");
    i >= 0 && (e.search = t.substr(i), t = t.substr(0, i)), t && (e.pathname = t);
  }
  return e;
}
var Bn;
(function(t) {
  t.data = "data", t.deferred = "deferred", t.redirect = "redirect", t.error = "error";
})(Bn || (Bn = {}));
function Qs(t, e) {
  e === void 0 && (e = "/");
  let {
    pathname: n,
    search: i = "",
    hash: s = ""
  } = typeof t == "string" ? hi(t) : t;
  return {
    pathname: n ? n.startsWith("/") ? n : t0(n, e) : e,
    search: s0(i),
    hash: r0(s)
  };
}
function t0(t, e) {
  let n = e.replace(/\/+$/, "").split("/");
  return t.split("/").forEach((s) => {
    s === ".." ? n.length > 1 && n.pop() : s !== "." && n.push(s);
  }), n.length > 1 ? n.join("/") : "/";
}
function ve(t, e, n, i) {
  return "Cannot include a '" + t + "' character in a manually specified " + ("`to." + e + "` field [" + JSON.stringify(i) + "].  Please separate it out to the ") + ("`to." + n + "` field. Alternatively you may provide the full path as ") + 'a string in <Link to="..."> and the router will parse it for you.';
}
function e0(t) {
  return t.filter((e, n) => n === 0 || e.route.path && e.route.path.length > 0);
}
function n0(t, e, n, i) {
  i === void 0 && (i = !1);
  let s;
  typeof t == "string" ? s = hi(t) : (s = Ee({}, t), Z(!s.pathname || !s.pathname.includes("?"), ve("?", "pathname", "search", s)), Z(!s.pathname || !s.pathname.includes("#"), ve("#", "pathname", "hash", s)), Z(!s.search || !s.search.includes("#"), ve("#", "search", "hash", s)));
  let o = t === "" || s.pathname === "", r = o ? "/" : s.pathname, a;
  if (i || r == null)
    a = n;
  else {
    let h = e.length - 1;
    if (r.startsWith("..")) {
      let d = r.split("/");
      for (; d[0] === ".."; )
        d.shift(), h -= 1;
      s.pathname = d.join("/");
    }
    a = h >= 0 ? e[h] : "/";
  }
  let l = Qs(s, a), c = r && r !== "/" && r.endsWith("/"), u = (o || r === ".") && n.endsWith("/");
  return !l.pathname.endsWith("/") && (c || u) && (l.pathname += "/"), l;
}
const i0 = (t) => t.join("/").replace(/\/\/+/g, "/"), s0 = (t) => !t || t === "?" ? "" : t.startsWith("?") ? t : "?" + t, r0 = (t) => !t || t === "#" ? "" : t.startsWith("#") ? t : "#" + t, di = ["post", "put", "patch", "delete"];
new Set(di);
const o0 = ["get", ...di];
new Set(o0);
/**
 * React Router v6.11.2
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function Re() {
  return Re = Object.assign ? Object.assign.bind() : function(t) {
    for (var e = 1; e < arguments.length; e++) {
      var n = arguments[e];
      for (var i in n)
        Object.prototype.hasOwnProperty.call(n, i) && (t[i] = n[i]);
    }
    return t;
  }, Re.apply(this, arguments);
}
const Qe = /* @__PURE__ */ A.createContext(null);
process.env.NODE_ENV !== "production" && (Qe.displayName = "DataRouter");
const a0 = /* @__PURE__ */ A.createContext(null);
process.env.NODE_ENV !== "production" && (a0.displayName = "DataRouterState");
const l0 = /* @__PURE__ */ A.createContext(null);
process.env.NODE_ENV !== "production" && (l0.displayName = "Await");
const tn = /* @__PURE__ */ A.createContext(null);
process.env.NODE_ENV !== "production" && (tn.displayName = "Navigation");
const en = /* @__PURE__ */ A.createContext(null);
process.env.NODE_ENV !== "production" && (en.displayName = "Location");
const Ht = /* @__PURE__ */ A.createContext({
  outlet: null,
  matches: [],
  isDataRoute: !1
});
process.env.NODE_ENV !== "production" && (Ht.displayName = "Route");
const c0 = /* @__PURE__ */ A.createContext(null);
process.env.NODE_ENV !== "production" && (c0.displayName = "RouteError");
function fi() {
  return A.useContext(en) != null;
}
function le() {
  return fi() || (process.env.NODE_ENV !== "production" ? Z(
    !1,
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    "useLocation() may be used only in the context of a <Router> component."
  ) : Z(!1)), A.useContext(en).location;
}
const pi = "You should call navigate() in a React.useEffect(), not when your component is first rendered.";
function mi(t) {
  A.useContext(tn).static || A.useLayoutEffect(t);
}
function nn() {
  let {
    isDataRoute: t
  } = A.useContext(Ht);
  return t ? g0() : u0();
}
function u0() {
  fi() || (process.env.NODE_ENV !== "production" ? Z(
    !1,
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    "useNavigate() may be used only in the context of a <Router> component."
  ) : Z(!1));
  let t = A.useContext(Qe), {
    basename: e,
    navigator: n
  } = A.useContext(tn), {
    matches: i
  } = A.useContext(Ht), {
    pathname: s
  } = le(), o = JSON.stringify(e0(i).map((l) => l.pathnameBase)), r = A.useRef(!1);
  return mi(() => {
    r.current = !0;
  }), A.useCallback(function(l, c) {
    if (c === void 0 && (c = {}), process.env.NODE_ENV !== "production" && ui(r.current, pi), !r.current) return;
    if (typeof l == "number") {
      n.go(l);
      return;
    }
    let u = n0(l, JSON.parse(o), s, c.relative === "path");
    t == null && e !== "/" && (u.pathname = u.pathname === "/" ? e : i0([e, u.pathname])), (c.replace ? n.replace : n.push)(u, c.state, c);
  }, [e, n, o, s, t]);
}
const h0 = /* @__PURE__ */ A.createContext(null);
function d0(t) {
  let e = A.useContext(Ht).outlet;
  return e && /* @__PURE__ */ A.createElement(h0.Provider, {
    value: t
  }, e);
}
var Fe;
(function(t) {
  t.UseBlocker = "useBlocker", t.UseRevalidator = "useRevalidator", t.UseNavigateStable = "useNavigate";
})(Fe || (Fe = {}));
var Oe;
(function(t) {
  t.UseBlocker = "useBlocker", t.UseLoaderData = "useLoaderData", t.UseActionData = "useActionData", t.UseRouteError = "useRouteError", t.UseNavigation = "useNavigation", t.UseRouteLoaderData = "useRouteLoaderData", t.UseMatches = "useMatches", t.UseRevalidator = "useRevalidator", t.UseNavigateStable = "useNavigate", t.UseRouteId = "useRouteId";
})(Oe || (Oe = {}));
function gi(t) {
  return t + " must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.";
}
function f0(t) {
  let e = A.useContext(Qe);
  return e || (process.env.NODE_ENV !== "production" ? Z(!1, gi(t)) : Z(!1)), e;
}
function p0(t) {
  let e = A.useContext(Ht);
  return e || (process.env.NODE_ENV !== "production" ? Z(!1, gi(t)) : Z(!1)), e;
}
function m0(t) {
  let e = p0(t), n = e.matches[e.matches.length - 1];
  return n.route.id || (process.env.NODE_ENV !== "production" ? Z(!1, t + ' can only be used on routes that contain a unique "id"') : Z(!1)), n.route.id;
}
function g0() {
  let {
    router: t
  } = f0(Fe.UseNavigateStable), e = m0(Oe.UseNavigateStable), n = A.useRef(!1);
  return mi(() => {
    n.current = !0;
  }), A.useCallback(function(s, o) {
    o === void 0 && (o = {}), process.env.NODE_ENV !== "production" && ui(n.current, pi), n.current && (typeof s == "number" ? t.navigate(s) : t.navigate(s, Re({
      fromRouteId: e
    }, o)));
  }, [t, e]);
}
function y0(t) {
  return d0(t.context);
}
var In;
(function(t) {
  t[t.pending = 0] = "pending", t[t.success = 1] = "success", t[t.error = 2] = "error";
})(In || (In = {}));
new Promise(() => {
});
const dl = () => {
  const t = le(), e = t.pathname.includes("surveys/new") || t.pathname.includes("surveys/edit");
  return /* @__PURE__ */ _("div", { className: "flex flex-row h-screen w-screen justify-between items-center", children: [
    /* @__PURE__ */ w(P0, { className: "w-[5%] bg-primary-50" }),
    /* @__PURE__ */ _(Js, { className: "w-full h-screen", children: [
      !e && /* @__PURE__ */ w(A0, { className: "h-[10vh]" }),
      /* @__PURE__ */ w(
        "div",
        {
          className: `w-full mx-auto ${e ? "h-[100vh] " : "h-[88vh]"} overflow-y-auto`,
          children: /* @__PURE__ */ w(y0, {})
        }
      )
    ] })
  ] });
}, v0 = "data:image/svg+xml,%3csvg%20width='43'%20height='38'%20viewBox='0%200%2043%2038'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cg%20clip-path='url(%23clip0_99_1346)'%3e%3cpath%20d='M35.7585%2023.6178C35.7585%2023.3603%2035.7481%2023.1001%2035.7275%2022.8477C35.7275%2022.8451%2035.7275%2022.8451%2035.7275%2022.8399C35.6809%2022.1775%2035.5905%2021.5257%2035.4587%2020.8897C35.4251%2020.7162%2035.3863%2020.5427%2035.3424%2020.3719C35.1873%2019.7332%2034.9831%2019.1077%2034.7402%2018.5032C34.6833%2018.356%2034.6265%2018.214%2034.5619%2018.0721C34.2957%2017.4676%2033.9907%2016.8841%2033.6496%2016.3296C33.5772%2016.2139%2033.5048%2016.0983%2033.4299%2015.9852C33.0732%2015.4386%2032.6804%2014.9182%2032.2462%2014.4293C32.1713%2014.3399%2032.0937%2014.2532%2032.0162%2014.1665C31.5768%2013.6855%2031.1039%2013.2387%2030.6025%2012.826C30.5276%2012.7603%2030.4474%2012.6999%2030.3673%2012.6368C29.8633%2012.2347%2029.3258%2011.8693%2028.7675%2011.5434C28.6926%2011.5014%2028.6151%2011.4541%2028.5401%2011.4173C27.9819%2011.1019%2027.4004%2010.8285%2026.7956%2010.592C26.7232%2010.5657%2026.6561%2010.5368%2026.5837%2010.5157C25.9841%2010.2923%2025.3716%2010.111%2024.7384%209.97694C24.6738%209.96117%2024.6092%209.95066%2024.5446%209.93752C23.9243%209.81136%2023.2859%209.72988%2022.6372%209.69572C22.5778%209.68783%2022.5209%209.6852%2022.4589%209.6852C22.2496%209.67469%2022.0428%209.66943%2021.8309%209.66943C21.3941%209.66943%2020.9677%209.68783%2020.5413%209.72988C20.4844%209.73251%2020.4275%209.73777%2020.3707%209.74565C19.7272%209.81399%2019.0966%209.92701%2018.484%2010.0821C18.4272%2010.0978%2018.3729%2010.1084%2018.3161%2010.1241C17.6958%2010.2897%2017.0884%2010.4973%2016.5018%2010.7444C16.4449%2010.7681%2016.3906%2010.7917%2016.3338%2010.818C15.7419%2011.0756%2015.1708%2011.3726%2014.6255%2011.709C14.5686%2011.7484%2014.5117%2011.7826%2014.4575%2011.8168C13.9122%2012.1637%2013.3927%2012.5448%2012.9042%2012.9653C12.8448%2013.0153%2012.7879%2013.0652%2012.7311%2013.1151C12.2426%2013.5383%2011.7877%2014.0009%2011.3665%2014.4924C11.307%2014.5581%2011.2502%2014.6264%2011.1959%2014.6974C10.7798%2015.1941%2010.3973%2015.7198%2010.051%2016.2744C9.99672%2016.3585%209.94503%2016.4478%209.89076%2016.5372C9.55995%2017.097%209.26532%2017.6831%209.01205%2018.2876C8.96553%2018.4007%208.92159%2018.5084%208.88024%2018.6188C8.64247%2019.2233%208.44347%2019.8515%208.29357%2020.4954C8.26256%2020.6268%208.23413%2020.7609%208.2057%2020.8975C8.07389%2021.5336%207.98085%2022.1854%207.93692%2022.8477C7.93692%2022.8504%207.93692%2022.8504%207.93692%2022.8556C7.91883%2023.1106%207.9059%2023.3681%207.9059%2023.6257C7.90332%2023.6993%207.90332%2023.7676%207.90332%2023.8412C7.90332%2031.6657%2014.1422%2038.0052%2021.8309%2038.0052C29.5248%2038.0052%2035.7636%2031.6657%2035.7636%2023.8412C35.7611%2023.7624%2035.7611%2023.6914%2035.7585%2023.6178ZM21.8309%2032.9877C20.1588%2032.9877%2018.7993%2031.6079%2018.7993%2029.9047C18.7993%2028.2016%2020.1588%2026.8217%2021.8309%2026.8217C23.5056%2026.8217%2024.8624%2028.2016%2024.8624%2029.9047C24.8624%2031.6079%2023.5056%2032.9877%2021.8309%2032.9877Z'%20fill='%236D29CE'/%3e%3cpath%20d='M2.04688%2022.8477H40.9531C40.9531%2011.9218%2032.2435%203.06445%2021.5%203.06445C10.7565%203.06445%202.04688%2011.9218%202.04688%2022.8477Z'%20fill='%238557CE'/%3e%3cpath%20d='M22.2784%2020.7373C22.3714%2021.2682%2022.0226%2021.7729%2021.5005%2021.8649C20.981%2021.9595%2020.4822%2021.6047%2020.3918%2021.0738L17.1224%202.22094C17.0294%201.69265%2017.3783%201.18539%2017.9004%201.09077C18.4224%200.998779%2018.9186%201.35097%2019.0117%201.88189L22.2784%2020.7373Z'%20fill='%23D3ADF7'/%3e%3cpath%20d='M21.852%2020.5352C22.1157%2021.0004%2021.9606%2021.597%2021.5006%2021.8678C21.0431%2022.1358%2020.4564%2021.9781%2020.1928%2021.5103L10.7777%204.92834C10.5141%204.46313%2010.6691%203.86651%2011.1292%203.59842C11.5866%203.32771%2012.1733%203.48803%2012.4395%203.95587L21.852%2020.5352Z'%20fill='%23D3ADF7'/%3e%3cpath%20d='M21.3813%2020.4933C21.7871%2020.8402%2021.8388%2021.4552%2021.5002%2021.8679C21.1616%2022.2805%2020.5569%2022.3331%2020.1511%2021.9888L5.72992%209.68308C5.32416%209.33614%205.27247%208.72112%205.61103%208.30848C5.94959%207.89583%206.55694%207.84327%206.96011%208.18757L21.3813%2020.4933Z'%20fill='%23D3ADF7'/%3e%3cpath%20d='M20.9293%2020.6166C21.4255%2020.8006%2021.684%2021.3604%2021.5005%2021.865C21.3196%2022.3697%2020.7691%2022.6299%2020.2729%2022.4459L2.57976%2015.9014C2.08354%2015.7174%201.8251%2015.1576%202.00601%2014.653C2.18692%2014.1483%202.73741%2013.8855%203.23362%2014.0695L20.9293%2020.6166Z'%20fill='%23D3ADF7'/%3e%3cpath%20d='M20.5414%2020.8901C21.0712%2020.8901%2021.5002%2021.3264%2021.5002%2021.8652C21.5002%2022.4014%2021.0712%2022.8403%2020.5414%2022.8403H1.71371C1.1839%2022.8403%200.754883%2022.404%200.754883%2021.8652C0.754883%2021.3264%201.1839%2020.8901%201.71371%2020.8901H20.5414Z'%20fill='%23D3ADF7'/%3e%3cpath%20d='M22.4563%2022.8403C21.9264%2022.8403%2021.4974%2022.404%2021.5%2021.8652C21.5%2021.3264%2021.929%2020.8901%2022.4588%2020.8901H41.2865C41.8163%2020.8901%2042.2454%2021.3264%2042.2454%2021.8652C42.2454%2022.404%2041.8163%2022.8403%2041.2865%2022.8403H22.4563Z'%20fill='%23D3ADF7'/%3e%3cpath%20d='M22.728%2022.4483C22.2292%2022.6323%2021.6788%2022.3721%2021.5004%2021.8648C21.3195%2021.3602%2021.5754%2020.8004%2022.0742%2020.6164L39.7647%2014.0693C40.2609%2013.8853%2040.814%2014.1455%2040.9949%2014.6528C41.1758%2015.1574%2040.92%2015.7172%2040.4212%2015.9012L22.728%2022.4483Z'%20fill='%23D3ADF7'/%3e%3cpath%20d='M22.8489%2021.9858C22.4431%2022.3301%2021.8384%2022.2775%2021.4998%2021.8649C21.1586%2021.4522%2021.2129%2020.8372%2021.6187%2020.4929L36.0399%208.18719C36.4456%207.84026%2037.0504%207.89545%2037.3915%208.3081C37.7327%208.72074%2037.6784%209.33576%2037.2727%209.68007L22.8489%2021.9858Z'%20fill='%23D3ADF7'/%3e%3cpath%20d='M22.8081%2021.5103C22.5419%2021.9755%2021.9578%2022.1358%2021.4978%2021.8651C21.0403%2021.597%2020.8827%2021.0004%2021.1463%2020.5326L30.5588%203.95324C30.8224%203.4854%2031.4091%203.3277%2031.8691%203.59579C32.3266%203.86388%2032.4842%204.4605%2032.2206%204.92834L22.8081%2021.5103Z'%20fill='%23D3ADF7'/%3e%3cpath%20d='M22.6115%2021.0766C22.5185%2021.6075%2022.0223%2021.9597%2021.5002%2021.8677C20.9807%2021.7731%2020.6318%2021.2684%2020.7223%2020.7402L23.9916%201.88208C24.0821%201.35116%2024.5809%200.99634%2025.1029%201.09096C25.625%201.18558%2025.9713%201.69021%2025.8808%202.22113L22.6115%2021.0766Z'%20fill='%23D3ADF7'/%3e%3cpath%20d='M41.9272%2018.2036C41.8342%2017.6726%2041.3379%2017.3178%2040.8159%2017.4124L26.6867%2019.9461L39.1127%2012.6499C39.5702%2012.3792%2039.7278%2011.7826%2039.4616%2011.3174C39.198%2010.8522%2038.6114%2010.6919%2038.1539%2010.9599L25.7279%2018.2587L34.9518%207.08057C35.2903%206.66793%2035.2387%206.05291%2034.8329%205.70597C34.4271%205.35904%2033.8224%205.41423%2033.4812%205.82687L24.2599%2017.005L29.1678%203.29319C29.3487%202.78856%2029.0928%202.22873%2028.594%202.04212C28.0978%201.85814%2027.5448%202.11834%2027.3664%202.6256L22.4586%2016.3401V1.74512C22.4586%201.20632%2022.0296%200.77002%2021.4997%200.77002C20.9699%200.77002%2020.5409%201.20632%2020.5409%201.74512V16.3375L15.6331%202.6256C15.4521%202.12097%2014.9017%201.86077%2014.4054%202.04212C13.9092%202.2261%2013.6508%202.78593%2013.8317%203.29056L18.7396%2017.005L9.51567%205.82687C9.17711%205.41423%208.57235%205.36166%208.16401%205.70597C7.75825%206.05028%207.70656%206.6653%208.04513%207.07795L17.269%2018.2561L4.84558%2010.9626C4.38814%2010.6919%203.80147%2010.8522%203.53527%2011.32C3.26907%2011.7852%203.42672%2012.3819%203.88675%2012.6526L16.3128%2019.9487L2.18102%2017.4124C1.65896%2017.3204%201.16275%2017.6726%201.06971%2018.2036C0.976668%2018.7345%201.32557%2019.2391%201.84763%2019.3337L20.391%2022.6559C20.9131%2022.7505%2021.4093%2022.3957%2021.4997%2021.8648C21.5902%2022.3931%2022.089%2022.7479%2022.6085%2022.6559L41.1493%2019.3311C41.6713%2019.2391%2042.0202%2018.7318%2041.9272%2018.2036Z'%20fill='%23EFDBFF'/%3e%3cpath%20d='M41.5346%2020.1381C41.532%2020.1039%2041.5269%2020.0697%2041.5191%2020.0329C42.0825%2019.8437%2042.5193%2019.3653%2042.6563%2018.7608C42.7105%2018.5322%2042.7131%2018.3009%2042.6744%2018.067C42.6563%2017.9539%2042.6201%2017.8383%2042.5787%2017.7279C42.3203%2017.0656%2041.6793%2016.6214%2040.979%2016.6214C40.9066%2016.6214%2040.8342%2016.624%2040.767%2016.6319C40.7645%2016.6214%2040.7593%2016.6056%2040.7515%2016.5925C41.5941%2016.235%2042.0179%2015.2626%2041.7026%2014.3847C41.4571%2013.6987%2040.8084%2013.2361%2040.0873%2013.2361C39.8857%2013.2361%2039.6893%2013.2703%2039.5007%2013.3413L39.4335%2013.3675C39.4335%2013.3649%2039.4309%2013.3597%2039.4309%2013.357C39.4541%2013.3465%2039.4774%2013.3308%2039.4981%2013.3176C39.9865%2013.0285%2040.3044%2012.5081%2040.3432%2011.922C40.3458%2011.8826%2040.3458%2011.8405%2040.3458%2011.7985C40.3458%2011.7406%2040.3458%2011.6723%2040.3354%2011.5856C40.3096%2011.3543%2040.2321%2011.1335%2040.1183%2010.9311C40.0615%2010.826%2039.9943%2010.7314%2039.9142%2010.642C39.5911%2010.2688%2039.1233%2010.0559%2038.6297%2010.0559C38.3273%2010.0559%2038.0275%2010.1374%2037.7665%2010.2898C37.7407%2010.3056%2037.7122%2010.3213%2037.6864%2010.3397L37.6295%2010.3739L37.7587%2010.2662C38.4824%209.64587%2038.578%208.54198%2037.9707%207.80606C37.6399%207.40918%2037.1643%207.18052%2036.6552%207.18052C36.2494%207.18052%2035.8592%207.32245%2035.5516%207.58791L35.4302%207.69304L35.4793%207.63259C35.4948%207.61682%2035.5129%207.59842%2035.5284%207.5774C36.0556%206.94135%2036.0659%206.0083%2035.5594%205.36174C35.4922%205.26975%2035.4069%205.18564%2035.3216%205.10679C35.0115%204.84396%2034.6161%204.6994%2034.2155%204.6994C33.7038%204.6994%2033.223%204.92807%2032.8922%205.32757C32.8741%205.35122%2032.8535%205.37751%2032.8354%205.40379L32.7966%205.45373L32.8767%205.30654C33.3497%204.47074%2033.0706%203.40365%2032.2513%202.92004C31.9903%202.76497%2031.6905%202.68613%2031.3907%202.68613C30.7807%202.68613%2030.207%203.02255%2029.9046%203.56135L29.8219%203.70328L29.8478%203.62969C29.8633%203.6034%2029.8736%203.57449%2029.8814%203.54821C30.1165%202.89639%2029.9408%202.16046%2029.442%201.68211C29.2714%201.51653%2029.075%201.39037%2028.8502%201.30889C28.6822%201.24844%2028.5116%201.2169%2028.3204%201.20902H28.2635C27.5398%201.20902%2026.8912%201.6716%2026.6456%202.35759C26.6353%202.38913%2026.6275%202.41804%2026.6198%202.44958L26.5965%202.5074L26.6275%202.34445C26.7904%201.39563%2026.1649%200.491493%2025.2319%200.320653C25.1337%200.304883%2025.0355%200.29437%2024.9321%200.29437C24.0974%200.29437%2023.3866%200.904136%2023.2419%201.73994L23.2161%201.91078V1.85295C23.2187%201.81879%2023.2187%201.78462%2023.2187%201.74782C23.2187%200.919906%2022.6397%200.197123%2021.8437%200.0315396L21.792%200.026283L21.7688%200.0236547C21.6706%200.00788491%2021.5827%200%2021.5%200C21.3837%200%2021.2648%200.0105132%2021.1511%200.0341679C20.3551%200.199751%2019.7788%200.919906%2019.7788%201.75045C19.7788%201.78462%2019.7788%201.8109%2019.7813%201.84244V1.91603L19.7503%201.75045C19.6056%200.914649%2018.8975%200.304883%2018.0601%200.304883C17.9619%200.304883%2017.8637%200.315396%2017.7655%200.331166C16.8325%200.502006%2016.2071%201.40614%2016.3699%202.35496L16.4009%202.52054L16.3776%202.46009C16.3699%202.42592%2016.3621%202.39964%2016.3518%202.3681C16.1063%201.67949%2015.4524%201.2169%2014.7339%201.2169C14.5323%201.2169%2014.3359%201.25107%2014.1473%201.32204C13.253%201.6532%2012.7904%202.65984%2013.1161%203.56923C13.1264%203.60077%2013.1393%203.62969%2013.1548%203.6586L13.1781%203.71905L13.0954%203.57186C12.7878%203.03306%2012.2193%202.69664%2011.6093%202.69664C11.3069%202.69664%2011.0097%202.77812%2010.7487%202.93056C9.92944%203.41154%209.65032%204.48126%2010.1207%205.31706L10.2086%205.46424L10.162%205.40905C10.1465%205.38539%2010.1284%205.35911%2010.1078%205.33545C9.77696%204.93332%209.29625%204.70729%208.78453%204.70729C8.50024%204.70729%208.21595%204.78088%207.96526%204.92018C7.86188%204.978%207.76367%205.04371%207.67839%205.1173C7.50006%205.27237%207.35533%205.45373%207.25454%205.66399C6.93924%206.28953%207.02452%207.04385%207.46646%207.58265C7.48972%207.60894%207.51298%207.63259%207.53107%207.65099L7.57759%207.70618L7.44837%207.59842C7.14082%207.33296%206.74799%207.19104%206.34481%207.19104C5.83826%207.19104%205.35497%207.4197%205.02933%207.81132C4.7347%208.16876%204.59256%208.62083%204.63391%209.08604C4.67268%209.54862%204.88719%209.97178%205.24125%2010.2688L5.36531%2010.3818L5.31103%2010.3503C5.28519%2010.3266%205.25676%2010.3108%205.22833%2010.2924C4.9673%2010.1374%204.67009%2010.0585%204.36771%2010.0585C3.75261%2010.0585%203.18404%2010.3949%202.87907%2010.9364C2.82221%2011.0362%202.77311%2011.144%202.73434%2011.257C2.4759%2012.0429%202.80154%2012.9155%203.50709%2013.3255C3.53035%2013.336%203.54844%2013.3491%203.56653%2013.3597C3.56653%2013.3623%203.56395%2013.3675%203.56395%2013.3702L3.49159%2013.3439C3.30551%2013.2756%203.10392%2013.2388%202.90492%2013.2388C2.18902%2013.2388%201.54033%2013.7013%201.29481%2014.3873C1.13716%2014.8236%201.16042%2015.2967%201.35425%2015.7225C1.53516%2016.1194%201.85046%2016.4269%202.24588%2016.5925C2.2433%2016.6082%202.23813%2016.624%202.23554%2016.6345C2.16835%2016.6266%202.09598%2016.624%202.02362%2016.624C1.43695%2016.624%200.896802%2016.921%200.578916%2017.4256C0.454862%2017.6175%200.366991%2017.8383%200.328225%2018.0696C0.286873%2018.3009%200.294627%2018.5348%200.346316%2018.7635C0.478122%2019.368%200.914894%2019.8463%201.48347%2020.0356C1.47572%2020.0697%201.47313%2020.1039%201.46796%2020.1407C0.635773%2020.2616%200%2020.9896%200%2021.8648C0%2022.677%200.550487%2023.363%201.28964%2023.5575V23.6179H18.5253V24.0621C18.5253%2024.8664%2019.174%2025.5261%2019.9648%2025.5261C20.7608%2025.5261%2021.4044%2024.8664%2021.4044%2024.0621V23.6179H21.5155V24.0621C21.5155%2024.8664%2022.159%2025.5261%2022.9525%2025.5261C23.7485%2025.5261%2024.392%2024.8664%2024.392%2024.0621V23.6179H41.7129V23.5575C42.4521%2023.3656%2043.0026%2022.6796%2043.0026%2021.8648C43%2020.9896%2042.3642%2020.2616%2041.5346%2020.1381ZM41.2839%2022.84H40.9531C40.9531%2022.8426%2040.9531%2022.8426%2040.9531%2022.8478H23.6348V24.0621C23.6348%2024.4432%2023.3324%2024.756%2022.9525%2024.756C22.5777%2024.756%2022.2753%2024.4432%2022.2753%2024.0621V22.8478H20.6497V24.0621C20.6497%2024.4432%2020.3473%2024.756%2019.9674%2024.756C19.5927%2024.756%2019.2851%2024.4432%2019.2851%2024.0621V22.8478H2.04688C2.04688%2022.8452%202.04688%2022.84%202.04688%2022.84H1.71607C1.71349%2022.84%201.71349%2022.84%201.71349%2022.84C1.18626%2022.84%200.757242%2022.4037%200.757242%2021.8648C0.757242%2021.326%201.18626%2020.8897%201.71607%2020.8897H2.13992C2.16577%2020.6401%202.19419%2020.393%202.22779%2020.1486C2.26139%2019.9068%202.30016%2019.6597%202.34151%2019.4205H2.33892L2.28465%2019.41L1.90474%2019.3417H1.88406C1.87631%2019.3417%201.86597%2019.3417%201.85305%2019.3391C1.82979%2019.3364%201.80653%2019.3312%201.78844%2019.3233C1.72124%2019.3075%201.65921%2019.2839%201.59977%2019.2549C1.58168%2019.2471%201.561%2019.2365%201.54291%2019.2234C1.48606%2019.1919%201.43178%2019.1551%201.38268%2019.1078C1.36459%2019.092%201.34908%2019.0762%201.33357%2019.0604C1.32582%2019.0578%201.32324%2019.0499%201.32324%2019.0447C1.29739%2019.021%201.27672%2018.9974%201.25862%2018.9711C1.23278%2018.9369%201.20435%2018.9028%201.18626%2018.8633C1.16042%2018.8213%201.13974%2018.774%201.12165%2018.724C1.11131%2018.6977%201.09839%2018.6662%201.09064%2018.632C1.08805%2018.6215%201.08288%2018.6058%201.0803%2018.59C1.07771%2018.5742%201.07254%2018.5637%201.07254%2018.5479C1.06996%2018.5216%201.06479%2018.4901%201.06221%2018.4638C1.05445%2018.3797%201.05962%2018.2904%201.07254%2018.2063C1.08288%2018.1327%201.10614%2018.0643%201.13199%2017.9986C1.13974%2017.975%201.15008%2017.9513%201.163%2017.9303C1.17851%2017.8987%201.1966%2017.8725%201.2121%2017.8462C1.25862%2017.7726%201.31548%2017.7069%201.37492%2017.6543C1.40077%2017.628%201.4292%2017.6044%201.45763%2017.586C1.49639%2017.5597%201.53258%2017.5308%201.57393%2017.5124C1.60494%2017.4966%201.63078%2017.4808%201.66438%2017.4703C1.70573%2017.4519%201.75225%2017.4388%201.79619%2017.4283C1.8272%2017.4204%201.85563%2017.4125%201.88665%2017.4099C1.928%2017.4072%201.96935%2017.402%202.01587%2017.402C2.07273%2017.402%202.127%2017.4046%202.18644%2017.4178C2.19419%2017.4178%202.20195%2017.4204%202.2097%2017.4204C2.21229%2017.423%202.21745%2017.4283%202.22521%2017.4283L2.76019%2017.5255H2.76277V17.5229C2.82738%2017.289%202.89458%2017.0577%202.96694%2016.8264C3.03931%2016.5951%203.11426%2016.3664%203.19437%2016.1404H3.19179L2.57669%2015.9091C2.08048%2015.7251%201.82203%2015.1653%202.00553%2014.6607C2.02362%2014.6107%202.0443%2014.5634%202.07014%2014.5214C2.11925%2014.4294%202.18127%2014.3479%202.25105%2014.2875C2.42421%2014.1166%202.65939%2014.022%202.90233%2014.022C3.01346%2014.022%203.12201%2014.0404%203.23314%2014.0798L3.93353%2014.3426V14.34C3.94386%2014.3216%203.95162%2014.3059%203.95937%2014.2848C4.15579%2013.8722%204.36771%2013.4727%204.58739%2013.0784L4.58481%2013.0758L3.93353%2012.6947C3.91802%2012.6868%203.89993%2012.6789%203.88442%2012.671C3.69059%2012.558%203.55103%2012.3846%203.47608%2012.1901C3.40888%2012.0192%203.38562%2011.8326%203.41922%2011.646C3.42697%2011.604%203.43731%2011.5619%203.45023%2011.5225C3.45023%2011.5198%203.45282%2011.5146%203.45282%2011.512C3.47091%2011.4515%203.49934%2011.3937%203.53294%2011.3359C3.57946%2011.2596%203.62856%2011.1887%203.69317%2011.1282C3.78104%2011.0362%203.88701%2010.9653%204.00331%2010.9206C4.04207%2010.9022%204.07825%2010.8891%204.11961%2010.8785C4.19972%2010.8549%204.28243%2010.8444%204.36513%2010.8444C4.53312%2010.8444%204.69594%2010.8864%204.84583%2010.9758C4.86393%2010.9863%204.87685%2010.9994%204.89235%2011.01L5.616%2011.4331L5.61858%2011.4357C5.75039%2011.2439%205.88737%2011.0573%206.02434%2010.868C6.1639%2010.684%206.30863%2010.4974%206.45336%2010.3161L5.72196%209.69055C5.3162%209.34624%205.26451%208.73122%205.60566%208.31858C5.79433%208.08729%206.06828%207.97164%206.33964%207.97164C6.55674%207.97164%206.77642%208.04523%206.95474%208.2003L7.74041%208.87052H7.743C8.06088%208.54724%208.39945%208.23447%208.74059%207.93485L8.73284%207.92696L8.08156%207.13584C8.07122%207.12533%208.0583%207.11219%208.04796%207.10167C8.0092%207.05436%207.9756%207.00443%207.94975%206.95449C7.94975%206.95449%207.94717%206.95449%207.94975%206.95186C7.84379%206.77051%207.80502%206.56287%207.82828%206.36312C7.82828%206.36049%207.82828%206.36049%207.82828%206.35524C7.83604%206.28953%207.85154%206.22119%207.8748%206.15811C7.88256%206.12395%207.89806%206.09241%207.91357%206.06087C7.91616%206.0451%207.92132%206.03458%207.92908%206.02144C7.93683%206.01093%207.93942%205.99779%207.94717%205.98727C8.00403%205.8874%208.07639%205.79804%208.16685%205.71656C8.21337%205.67713%208.26506%205.64297%208.31416%205.61143C8.31674%205.6088%208.32191%205.6088%208.3245%205.60354C8.3581%205.58514%208.39686%205.56937%208.43563%205.5536C8.45114%205.55097%208.46147%205.54309%208.47698%205.54309C8.51575%205.52732%208.54934%205.51681%208.58811%205.51155C8.6062%205.50367%208.62171%205.50367%208.63722%205.50367C8.68373%205.49315%208.72767%205.4879%208.77419%205.4879H8.78453C8.88791%205.4879%208.98612%205.50367%209.08432%205.53783C9.25231%205.59303%209.40221%205.6929%209.52368%205.83746C9.53402%205.84797%209.54177%205.86374%209.55469%205.87951L10.2447%206.72057L10.2473%206.7232C10.6066%206.46037%2010.9787%206.21068%2011.3535%205.9715C11.3561%205.9715%2011.3561%205.96887%2011.3612%205.96887L10.7771%204.93858C10.5109%204.47337%2010.666%203.87412%2011.126%203.60603C11.2785%203.51667%2011.4439%203.47462%2011.6042%203.47462C11.9376%203.47462%2012.2606%203.65071%2012.4389%203.96348L13.0463%205.03583C13.054%205.0332%2013.0618%205.02794%2013.0695%205.02531C13.2634%204.93332%2013.4572%204.84133%2013.6485%204.7546C13.85%204.66524%2014.0542%204.5785%2014.2636%204.49703L14.261%204.4944L13.8552%203.3616C13.8475%203.34583%2013.8397%203.33006%2013.832%203.31166C13.757%203.09877%2013.757%202.88062%2013.8242%202.68087C13.8475%202.58888%2013.8914%202.49952%2013.9483%202.41804C13.9741%202.37599%2014.0051%202.33656%2014.0387%202.30502C14.1369%202.192%2014.2636%202.1079%2014.4057%202.05533C14.5168%202.01591%2014.6254%201.99751%2014.7365%201.99751C14.9329%201.99751%2015.1242%202.05796%2015.2818%202.17098C15.4421%202.28399%2015.5687%202.44432%2015.6411%202.64144C15.6436%202.65721%2015.6488%202.67298%2015.6514%202.68875V2.69138L16.0675%203.85835H16.0701V3.86098C16.4862%203.73745%2016.9074%203.62706%2017.339%203.52981H17.3416V3.52718L17.1142%202.23143C17.0237%201.70314%2017.3726%201.19588%2017.8921%201.10126C17.949%201.09075%2018.0058%201.08549%2018.0601%201.08549C18.2875%201.08549%2018.5072%201.16959%2018.6752%201.31415C18.7166%201.34832%2018.7553%201.38774%2018.7915%201.4298C18.8251%201.47185%2018.8561%201.51916%2018.8871%201.5691C18.913%201.61903%2018.9414%201.66897%2018.9595%201.72417C18.9776%201.77936%2018.9931%201.83718%2019.006%201.89501L19.236%203.20916V3.21704C19.4531%203.19339%2019.6676%203.16973%2019.8847%203.14871C20.0527%203.13294%2020.2181%203.12242%2020.3887%203.11454C20.4275%203.11191%2020.4611%203.10665%2020.4998%203.10665C20.5153%203.10403%2020.5257%203.10403%2020.5412%203.10403V1.81616C20.5412%201.80039%2020.5386%201.78462%2020.5386%201.76622C20.5386%201.73205%2020.5386%201.69788%2020.5463%201.66109C20.5463%201.62955%2020.5541%201.59538%2020.5618%201.56384C20.5644%201.5323%2020.5722%201.50339%2020.5851%201.47185C20.5929%201.44031%2020.6032%201.4114%2020.6187%201.38249C20.629%201.34832%2020.6497%201.30889%2020.6678%201.27473C20.6937%201.22742%2020.7247%201.18274%2020.7634%201.14068C20.7738%201.12491%2020.7815%201.1144%2020.7944%201.10652C20.8125%201.08023%2020.8358%201.05658%2020.8591%201.04081C20.9056%200.993498%2020.9547%200.95933%2021.0064%200.927791C21.0529%200.896251%2021.102%200.872596%2021.1511%200.854198C21.2002%200.830544%2021.2571%200.814774%2021.3113%200.804261C21.3708%200.793747%2021.4354%200.785862%2021.5052%200.785862C21.5388%200.785862%2021.5724%200.788491%2021.6034%200.788491C21.6292%200.796376%2021.6577%200.799004%2021.6835%200.804261H21.699C21.7533%200.814774%2021.8101%200.830544%2021.8592%200.854198C21.9083%200.872596%2021.9574%200.896251%2022.004%200.927791C22.0582%200.95933%2022.1073%200.993498%2022.1513%201.04081C22.1745%201.05658%2022.1978%201.08023%2022.2159%201.10652C22.2262%201.1144%2022.234%201.12491%2022.2469%201.14068C22.2857%201.18274%2022.3141%201.23005%2022.3425%201.27473C22.3606%201.30889%2022.3813%201.34832%2022.3916%201.38249C22.4071%201.40877%2022.4175%201.44031%2022.4252%201.47185C22.4356%201.50339%2022.4433%201.5323%2022.4485%201.56384C22.4562%201.59538%2022.464%201.62955%2022.464%201.66109C22.4718%201.69526%2022.4718%201.72942%2022.4718%201.76622C22.4718%201.78987%2022.4692%201.80827%2022.4692%201.82667V3.1014C22.4847%203.1014%2022.495%203.1014%2022.5105%203.10403C22.5493%203.10403%2022.5829%203.10665%2022.6216%203.11191C22.7922%203.1198%2022.9602%203.13031%2023.1256%203.14608L23.7743%203.21441V3.20653L24.0017%201.89238C24.0121%201.83456%2024.0276%201.77673%2024.0483%201.72154C24.0664%201.66634%2024.0948%201.61641%2024.1206%201.56647C24.1775%201.46922%2024.2498%201.38512%2024.3326%201.31152C24.5005%201.16959%2024.7202%201.08286%2024.9476%201.08286C25.0045%201.08286%2025.0614%201.08549%2025.1156%201.09863C25.6377%201.19062%2025.9866%201.70051%2025.8961%202.2288L25.6687%203.52455V3.53244C26.1003%203.62443%2026.5242%203.73745%2026.9428%203.86098V3.85835H26.9454L27.3615%202.69138C27.3641%202.67561%2027.3641%202.65984%2027.3719%202.64144C27.4778%202.34445%2027.713%202.13155%2027.9895%202.04482C27.9999%202.04482%2028.0128%202.04219%2028.0231%202.03693C28.1058%202.01328%2028.186%202.00277%2028.2712%202.00277C28.2842%202.00277%2028.2971%202.00014%2028.31%202.00277C28.3591%202.00539%2028.4082%202.01065%2028.4573%202.01854C28.5064%202.02642%2028.5555%202.03693%2028.6046%202.05796C28.6537%202.07636%2028.7003%202.09739%2028.7416%202.12367C28.783%202.14732%2028.8243%202.17361%2028.8631%202.20515L28.8657%202.20777C28.8889%202.22354%2028.9122%202.2472%2028.9329%202.2656C28.9484%202.27611%2028.9587%202.29188%2028.9716%202.30765C29.0052%202.34182%2029.0362%202.37599%2029.0621%202.41541C29.0621%202.41804%2029.0621%202.41804%2029.0621%202.41804C29.0931%202.46009%2029.1164%202.50214%2029.1345%202.5442C29.2508%202.77549%2029.274%203.05409%2029.181%203.31166C29.1784%203.31955%2029.1732%203.32217%2029.1706%203.33006C29.168%203.33794%2029.1629%203.34057%2029.1629%203.34846L28.7545%204.4944L28.752%204.49703C28.9613%204.5785%2029.1655%204.66787%2029.3671%204.7546C29.5609%204.83871%2029.7547%204.9307%2029.946%205.02531C29.9537%205.02794%2029.9615%205.0332%2029.9692%205.03583L30.5766%203.96348C30.6231%203.88726%2030.6748%203.8163%2030.7368%203.75584C30.9177%203.57449%2031.1607%203.47462%2031.4088%203.47462C31.5302%203.47462%2031.6543%203.49827%2031.7732%203.54821C31.8145%203.56398%2031.8533%203.58238%2031.8895%203.60603C32.3443%203.87675%2032.5046%204.47337%2032.2384%204.93858L31.6543%205.96887V5.9715C32.0342%206.20542%2032.4038%206.46037%2032.7682%206.7232L32.7708%206.72057L33.4608%205.88477C33.4711%205.869%2033.4789%205.85323%2033.4918%205.83746C33.6805%205.60617%2033.9544%205.4879%2034.231%205.4879C34.3421%205.4879%2034.4507%205.50629%2034.5566%205.54835C34.66%205.58251%2034.7582%205.64034%2034.8487%205.71919C34.8874%205.75073%2034.921%205.78489%2034.952%205.82432C34.9624%205.8322%2034.9753%205.84797%2034.9856%205.85849C34.9882%205.86637%2034.9934%205.869%2034.996%205.87688C35.0218%205.90842%2035.0425%205.93734%2035.0606%205.97413C35.0761%206.00041%2035.0916%206.02933%2035.1019%206.05824V6.06087C35.12%206.09241%2035.1329%206.12132%2035.1407%206.15286C35.1562%206.18702%2035.164%206.22119%2035.1665%206.25799C35.1769%206.28164%2035.1821%206.30793%2035.1821%206.33158C35.1846%206.35524%2035.1898%206.37889%2035.1846%206.39992C35.2001%206.58915%2035.1614%206.77839%2035.0632%206.9466C35.0658%206.94923%2035.0632%206.94923%2035.0632%206.94923C35.0373%206.99917%2035.0037%207.04911%2034.965%207.09642C34.9572%207.1043%2034.9469%207.11219%2034.9391%207.1227L34.2801%207.9217L34.2723%207.92959C34.6135%208.22922%2034.9495%208.54198%2035.2699%208.86526H35.2725L36.053%208.19505C36.2339%208.03998%2036.451%207.96638%2036.6707%207.96638C36.7741%207.96638%2036.8749%207.98215%2036.9731%208.01632C37.0713%208.04786%2037.1617%208.0978%2037.2496%208.16351C37.3065%208.20556%2037.3607%208.2555%2037.4047%208.31332C37.7432%208.72596%2037.689%209.34362%2037.2832%209.68529L36.5544%2010.3108C36.8464%2010.6735%2037.1178%2011.0468%2037.3892%2011.4279L37.3918%2011.4252L38.1154%2011.0021C38.118%2010.9994%2038.1232%2010.9942%2038.1257%2010.9942C38.1361%2010.9837%2038.1438%2010.9758%2038.1567%2010.9705C38.2369%2010.9232%2038.317%2010.8891%2038.3997%2010.8707C38.4798%2010.8523%2038.5599%2010.8391%2038.6375%2010.8391H38.6478C38.6814%2010.8391%2038.7202%2010.8417%2038.7538%2010.847C38.7796%2010.8496%2038.8106%2010.8549%2038.8365%2010.8628C38.8623%2010.8654%2038.8907%2010.8733%2038.9166%2010.8812C39.0639%2010.9285%2039.2009%2011.0047%2039.3146%2011.1203C39.3301%2011.1309%2039.3456%2011.1519%2039.3611%2011.1677C39.3637%2011.1755%2039.3714%2011.1782%2039.3714%2011.1861C39.4102%2011.2281%2039.4438%2011.278%2039.4748%2011.328C39.5084%2011.3858%2039.5317%2011.4463%2039.5549%2011.5093C39.5627%2011.5356%2039.573%2011.5672%2039.5808%2011.5987C39.5834%2011.6302%2039.5911%2011.6644%2039.5963%2011.6959C39.5989%2011.738%2039.5989%2011.7801%2039.5989%2011.8221V11.8773C39.5989%2011.8799%2039.5989%2011.8799%2039.5989%2011.8852C39.5989%2011.8904%2039.5989%2011.8878%2039.5989%2011.8931C39.5963%2011.9272%2039.5911%2011.9667%2039.5834%2012.0008C39.5808%2012.0271%2039.573%2012.0587%2039.5653%2012.0849C39.5575%2012.1165%2039.5472%2012.1506%2039.5317%2012.1822C39.5213%2012.2216%2039.5007%2012.2584%2039.4774%2012.2952C39.3973%2012.445%2039.2758%2012.5764%2039.1207%2012.6684C39.1052%2012.6763%2039.0949%2012.6789%2039.082%2012.6842L38.4178%2013.0732L38.4152%2013.0758C38.6452%2013.4884%2038.8675%2013.909%2039.0665%2014.34H39.0691V14.3374L39.7694%2014.0798C39.8754%2014.0404%2039.9865%2014.022%2040.0951%2014.022C40.3406%2014.022%2040.5732%2014.1192%2040.7515%2014.2875C40.8239%2014.3479%2040.8833%2014.4294%2040.9324%2014.5214C40.9583%2014.5634%2040.979%2014.6107%2040.9971%2014.6607C41.178%2015.1653%2040.9221%2015.7278%2040.4259%2015.9144L39.8108%2016.143H39.8082C39.8883%2016.3717%2039.9633%2016.5977%2040.0356%2016.829C40.108%2017.0603%2040.1752%2017.2942%2040.2398%2017.5308H40.2424L40.7645%2017.4335C40.78%2017.4309%2040.7955%2017.4256%2040.8136%2017.423C40.8704%2017.4125%2040.9273%2017.4072%2040.9841%2017.4072C41.0151%2017.4072%2041.0436%2017.4072%2041.0746%2017.4151C41.1056%2017.4151%2041.1314%2017.4178%2041.1573%2017.4256C41.1961%2017.4283%2041.2374%2017.4414%2041.271%2017.4572C41.302%2017.4598%2041.3304%2017.473%2041.3589%2017.4887C41.3899%2017.4992%2041.4235%2017.515%2041.4493%2017.536C41.563%2017.5939%2041.6587%2017.678%2041.7362%2017.7831C41.7621%2017.8173%2041.7905%2017.8514%2041.8112%2017.8909C41.8112%2017.8935%2041.8112%2017.8935%2041.8112%2017.8935C41.837%2017.9355%2041.8577%2017.9828%2041.8758%2018.0275C41.899%2018.0853%2041.9171%2018.1511%2041.93%2018.2168C41.9455%2018.3088%2041.9481%2018.406%2041.9378%2018.498C41.9352%2018.5322%2041.9275%2018.5716%2041.9197%2018.6058C41.8964%2018.6977%2041.8654%2018.7871%2041.8163%2018.8686C41.7698%2018.9527%2041.7104%2019.0315%2041.6432%2019.0999C41.6122%2019.1262%2041.5786%2019.1551%2041.545%2019.1814C41.4338%2019.2628%2041.302%2019.3233%2041.1547%2019.3469C41.1521%2019.3496%2041.1521%2019.3496%2041.147%2019.3496C41.1392%2019.3522%2041.1289%2019.3522%2041.1159%2019.3522H41.1056L40.6662%2019.4337H40.6585C40.7412%2019.9199%2040.8136%2020.4088%2040.8627%2020.9029H41.2865C41.5527%2020.9029%2041.7905%2021.0159%2041.9636%2021.1894C42.1368%2021.3655%2042.2453%2021.6099%2042.2453%2021.8806C42.2428%2022.4037%2041.8137%2022.84%2041.2839%2022.84Z'%20fill='%23530AC6'/%3e%3c/g%3e%3cdefs%3e%3cclipPath%20id='clip0_99_1346'%3e%3crect%20width='43'%20height='38'%20fill='white'/%3e%3c/clipPath%3e%3c/defs%3e%3c/svg%3e", C0 = "data:image/svg+xml,%3csvg%20width='24'%20height='24'%20viewBox='0%200%2024%2024'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M3.42871%203.42857C3.42871%201.53502%204.96376%200%206.85733%200C8.75091%200%2010.286%201.53502%2010.286%203.42857C10.286%204.53387%209.76292%205.51702%208.95085%206.144C8.92642%206.16202%208.90214%206.18026%208.87804%206.19869C8.31139%206.61274%207.6129%206.85714%206.85733%206.85714C4.96376%206.85714%203.42871%205.32212%203.42871%203.42857ZM6.85733%201.71429C5.91055%201.71429%205.14302%202.48181%205.14302%203.42857C5.14302%204.37534%205.91055%205.14286%206.85733%205.14286C7.80411%205.14286%208.57164%204.37534%208.57164%203.42857C8.57164%202.48181%207.80411%201.71429%206.85733%201.71429Z'%20fill='%23212121'/%3e%3cpath%20d='M15.0499%206.144C14.2379%205.51702%2013.7148%204.53387%2013.7148%203.42857C13.7148%201.53502%2015.2499%200%2017.1435%200C19.0371%200%2020.5721%201.53502%2020.5721%203.42857C20.5721%205.32212%2019.0371%206.85714%2017.1435%206.85714C16.388%206.85714%2015.6894%206.61275%2015.1228%206.1987C15.0987%206.18026%2015.0744%206.16202%2015.0499%206.144ZM17.1435%201.71429C16.1967%201.71429%2015.4292%202.48181%2015.4292%203.42857C15.4292%204.37534%2016.1967%205.14286%2017.1435%205.14286C18.0903%205.14286%2018.8578%204.37534%2018.8578%203.42857C18.8578%202.48181%2018.0903%201.71429%2017.1435%201.71429Z'%20fill='%23212121'/%3e%3cpath%20d='M2.57143%208.57129H7.14989C6.96036%209.10748%206.85724%209.68448%206.85724%2010.2856H2.57143C2.09809%2010.2856%201.71431%2010.6694%201.71431%2011.1427C1.71431%2012.5431%202.27065%2013.5817%203.15107%2014.2883C3.55589%2014.6133%204.0407%2014.8764%204.58873%2015.0677C4.19067%2015.4919%203.87796%2015.9971%203.678%2016.5557C3.0952%2016.3187%202.556%2016.0089%202.078%2015.6252C0.786817%2014.5889%200%2013.056%200%2011.1427C0%209.72262%201.15126%208.57129%202.57143%208.57129Z'%20fill='%23212121'/%3e%3cpath%20d='M9.02997%208.57171C8.73825%209.076%208.57129%209.6615%208.57129%2010.286C8.57129%2011.7321%209.46654%2012.969%2010.7331%2013.4729C11.125%2013.6288%2011.5524%2013.7146%2011.9999%2013.7146C12.4474%2013.7146%2012.8749%2013.6288%2013.2668%2013.4729C14.5333%2012.969%2015.4285%2011.7321%2015.4285%2010.286C15.4285%209.6615%2015.2616%209.076%2014.9698%208.57171C14.377%207.54691%2013.269%206.85742%2011.9999%206.85742C10.7308%206.85742%209.6228%207.54691%209.02997%208.57171ZM11.6153%208.61503C11.7389%208.58667%2011.8677%208.57171%2011.9999%208.57171C12.1322%208.57171%2012.2609%208.58667%2012.3845%208.61503C13.1461%208.78961%2013.7142%209.47147%2013.7142%2010.286C13.7142%2010.4182%2013.6993%2010.547%2013.6709%2010.6706C13.4963%2011.4322%2012.8144%2012.0003%2011.9999%2012.0003C11.1854%2012.0003%2010.5035%2011.4322%2010.3289%2010.6706C10.3006%2010.547%2010.2856%2010.4182%2010.2856%2010.286C10.2856%209.47147%2010.8537%208.78961%2011.6153%208.61503Z'%20fill='%23212121'/%3e%3cpath%20d='M20.8484%2014.2883C20.4437%2014.6133%2019.9589%2014.8764%2019.4108%2015.0677C19.8089%2015.4919%2020.1215%2015.9971%2020.3214%2016.5557C20.9043%2016.3187%2021.4434%2016.0089%2021.9216%2015.6252C23.2126%2014.5889%2023.9995%2013.056%2023.9995%2011.1427C23.9995%209.72255%2022.8482%208.57129%2021.428%208.57129H16.8496C17.039%209.10748%2017.1422%209.68448%2017.1422%2010.2856H21.428C21.9013%2010.2856%2022.2852%2010.6693%2022.2852%2011.1427C22.2852%2012.5431%2021.7289%2013.5817%2020.8484%2014.2883Z'%20fill='%23212121'/%3e%3cpath%20d='M16.2866%2015.4287C17.3596%2015.4287%2018.2789%2016.0858%2018.6645%2017.0196C18.7891%2017.3218%2018.858%2017.653%2018.858%2018.0001C18.858%2019.9135%2018.0712%2021.4464%2016.7801%2022.4827C15.5093%2023.5027%2013.8061%2024.0001%2012.0008%2024.0001C10.1955%2024.0001%208.49232%2023.5027%207.22156%2022.4827C5.93037%2021.4464%205.14355%2019.9135%205.14355%2018.0001C5.14355%2017.653%205.21238%2017.3218%205.33713%2017.0196C5.72261%2016.0858%206.64207%2015.4287%207.71499%2015.4287H16.2866ZM16.2866%2017.143H7.71499C7.24165%2017.143%206.85786%2017.5268%206.85786%2018.0001C6.85786%2019.4005%207.41421%2020.4391%208.29463%2021.1457C9.19546%2021.8688%2010.4923%2022.2859%2012.0008%2022.2859C13.5093%2022.2859%2014.8061%2021.8688%2015.707%2021.1457C16.5874%2020.4391%2017.1437%2019.4005%2017.1437%2018.0001C17.1437%2017.5268%2016.7599%2017.143%2016.2866%2017.143Z'%20fill='%23212121'/%3e%3c/svg%3e", x0 = "data:image/svg+xml,%3csvg%20width='20'%20height='23'%20viewBox='0%200%2020%2023'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cg%20clip-path='url(%23clip0_99_1394)'%3e%3cpath%20d='M16.1349%2010.5725H7.95501V9.07053H16.1349V10.5725ZM16.1349%2014.3976H7.95501V12.8956H16.1349V14.3976ZM16.1349%2018.2226H7.95501V16.7206H16.1349V18.2226ZM20%2022.9988H0V1.43049H5.91003V2.93249H1.606V21.4969H18.394V2.93247H14.0899V1.43053H19.9999L20%2022.9988ZM5.10706%200.469238H14.8929V3.13275C14.8809%204.59783%2013.6154%205.78275%2012.0506%205.79626H7.95508C6.38853%205.78504%205.12153%204.60148%205.10711%203.13803V3.13675L5.10706%200.469238ZM13.2869%201.97122H6.71307V3.13275C6.72088%203.77269%207.27471%204.28924%207.9588%204.29428H12.045C12.7292%204.28697%2013.2815%203.76901%2013.2869%203.12923V3.12874V1.97122ZM5.91003%2010.5725H3.86509V9.07053H5.91005L5.91003%2010.5725ZM5.91003%2014.3976H3.86509V12.8956H5.91005L5.91003%2014.3976ZM5.91003%2018.2226H3.86509V16.7206H5.91005L5.91003%2018.2226Z'%20fill='black'/%3e%3c/g%3e%3cdefs%3e%3cclipPath%20id='clip0_99_1394'%3e%3crect%20width='20'%20height='23'%20fill='white'/%3e%3c/clipPath%3e%3c/defs%3e%3c/svg%3e", b0 = "data:image/svg+xml,%3csvg%20width='23'%20height='23'%20viewBox='0%200%2023%2023'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cg%20clip-path='url(%23clip0_99_1396)'%3e%3cpath%20d='M21.5625%207.67625L20.125%203.36375C20.0749%203.21498%2019.9776%203.08667%2019.8478%202.99842C19.718%202.91017%2019.5629%202.86682%2019.4062%202.875H3.5937C3.43697%202.86682%203.28186%202.91017%203.15208%202.99842C3.02229%203.08667%202.92496%203.21498%202.87495%203.36375L1.43745%207.67625C1.4271%207.75257%201.4271%207.82993%201.43745%207.90625V12.2188C1.43745%2012.4094%201.51318%2012.5922%201.64797%2012.727C1.78276%2012.8618%201.96558%2012.9375%202.1562%2012.9375H2.87495V20.125H4.31245V12.9375H8.62495V20.125H20.125V12.9375H20.8437C21.0343%2012.9375%2021.2171%2012.8618%2021.3519%2012.727C21.4867%2012.5922%2021.5625%2012.4094%2021.5625%2012.2188V7.90625C21.5728%207.82993%2021.5728%207.75257%2021.5625%207.67625ZM18.6875%2018.6875H10.0625V12.9375H18.6875V18.6875ZM20.125%2011.5H17.25V8.625H15.8125V11.5H12.2187V8.625H10.7812V11.5H7.18745V8.625H5.74995V11.5H2.87495V8.02125L4.1112%204.3125H18.8887L20.125%208.02125V11.5Z'%20fill='black'/%3e%3c/g%3e%3cdefs%3e%3cclipPath%20id='clip0_99_1396'%3e%3crect%20width='23'%20height='23'%20fill='white'/%3e%3c/clipPath%3e%3c/defs%3e%3c/svg%3e", w0 = "data:image/svg+xml,%3csvg%20width='25'%20height='27'%20viewBox='0%200%2025%2027'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M11.2903%2010.8389C11.2903%2011.5167%2011.8319%2012.0662%2012.5%2012.0662C13.1681%2012.0662%2013.7097%2011.5167%2013.7097%2010.8389H11.2903ZM13.7097%201.22723C13.7097%200.549457%2013.1681%200%2012.5%200C11.8319%200%2011.2903%200.549457%2011.2903%201.22723H13.7097ZM8.16267%205.58238C8.77068%205.30151%209.03911%204.57374%208.76224%203.9569C8.48539%203.34006%207.76805%203.06773%207.16004%203.34862L8.16267%205.58238ZM1.20982%2014.5795L0%2014.5732L0.000242261%2014.5938L1.20982%2014.5795ZM12.5%2025.7719L12.5139%2024.5447C12.5047%2024.5447%2012.4953%2024.5447%2012.4861%2024.5447L12.5%2025.7719ZM23.7902%2014.5795L25%2014.5938L24.9998%2014.5732L23.7902%2014.5795ZM17.8399%203.34862C17.2319%203.06773%2016.5146%203.34006%2016.2377%203.9569C15.9609%204.57374%2016.2293%205.30151%2016.8374%205.58238L17.8399%203.34862ZM13.7097%2010.8389V1.22723H11.2903V10.8389H13.7097ZM7.16004%203.34862C2.82017%205.35354%200.0249835%209.73526%200%2014.5732L2.41947%2014.5859C2.43952%2010.7054%204.68149%207.19061%208.16267%205.58238L7.16004%203.34862ZM0.000242261%2014.5938C0.0797574%2021.525%205.68199%2027.0787%2012.5139%2026.9992L12.4861%2024.5447C6.99014%2024.6088%202.48337%2020.141%202.4194%2014.5653L0.000242261%2014.5938ZM12.4861%2026.9992C19.318%2027.0787%2024.9206%2021.525%2025%2014.5938L22.5807%2014.5653C22.5166%2020.141%2018.0099%2024.6088%2012.5139%2024.5447L12.4861%2026.9992ZM24.9998%2014.5732C24.9748%209.73526%2022.1799%205.35354%2017.8399%203.34862L16.8374%205.58238C20.3184%207.19061%2022.5605%2010.7054%2022.5805%2014.5859L24.9998%2014.5732Z'%20fill='%236D29CE'/%3e%3c/svg%3e", Ne = ({
  icon: t,
  width: e,
  additionalClass: n,
  ...i
}) => /* @__PURE__ */ w("div", { ...i, children: /* @__PURE__ */ w(
  "div",
  {
    className: `hover:bg-secondary-500 rounded-full p-3 cursor-pointer transition-all duration-300 ${n}`,
    children: /* @__PURE__ */ w("img", { src: t, alt: "", className: `${e ?? "w-5 h-5"} ` })
  }
) }), T0 = ({ icon: t, label: e, onClick: n }) => {
  let i = le(), s = nn();
  const o = i.pathname.toLowerCase().includes(e.toLowerCase());
  return /* @__PURE__ */ w(
    "div",
    {
      className: `flex items-center justify-center p-2  py-4 cursor-pointer hover:bg-gray-200 ${o ? "bg-secondary-500 text-white" : ""}`,
      onClick: () => s(e.toLowerCase()),
      children: /* @__PURE__ */ w(
        "img",
        {
          src: t,
          alt: e,
          className: `${o && "fill-white"} w-6 h-6`
        }
      )
    }
  );
}, P0 = (t) => {
  const e = [
    {
      icon: x0,
      label: "Home",
      onClick: () => {
      }
    },
    {
      icon: b0,
      label: "Surveys",
      onClick: () => {
      }
    },
    {
      icon: C0,
      label: "Audience",
      onClick: () => {
      }
    }
  ], n = nn();
  return /* @__PURE__ */ w("div", { ...t, children: /* @__PURE__ */ _("div", { className: "h-screen flex flex-col py-10 justify-between bg-purple-50", children: [
    /* @__PURE__ */ w(
      Ne,
      {
        icon: v0,
        width: 10,
        additionalClass: "rounded-sm cursor-pointer",
        onClick: () => n("/dashboard")
      }
    ),
    /* @__PURE__ */ w("div", { className: "mt-20 flex flex-col gap-y-5 grow", children: e.map((i) => /* @__PURE__ */ ai(T0, { ...i, key: i.label })) }),
    /* @__PURE__ */ w("div", { className: "flex items-center justify-center", children: /* @__PURE__ */ w("img", { src: w0, alt: "" }) })
  ] }) });
}, V0 = "data:image/svg+xml,%3csvg%20width='28'%20height='28'%20viewBox='0%200%2028%2028'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cg%20clip-path='url(%23clip0_824_546)'%3e%3cpath%20d='M27.4339%2014.3758H25.4249V9.20892C25.4249%209.18521%2025.4226%209.16211%2025.4214%209.13873V5.15993C25.4214%204.88936%2025.2021%204.67006%2024.9315%204.67006H19.7375L15.2471%200.17955C15.1552%200.0877303%2015.0306%200.0361328%2014.9007%200.0361328C14.7707%200.0361328%2014.6462%200.0877303%2014.5543%200.179578L11.1684%203.56552L9.57662%201.97371C9.38526%201.78241%209.07513%201.78241%208.88378%201.97371L6.18432%204.67313C6.16655%204.67116%206.14839%204.66998%206.13002%204.66998H0.566523C0.295957%204.66998%200.0766602%204.88928%200.0766602%205.15984V10.3734C0.0766602%2010.3894%200.0775352%2010.4052%200.0790664%2010.4207V26.6339C0.0790664%2027.3671%200.675543%2027.9635%201.40868%2027.9635H24.0952C24.8284%2027.9635%2025.4249%2027.3671%2025.4249%2026.6339V21.4671H27.4339C27.7044%2021.4671%2027.9237%2021.2478%2027.9237%2020.9773V14.8656C27.9237%2014.5951%2027.7044%2014.3758%2027.4339%2014.3758L27.4339%2014.3758ZM24.4416%205.64976V7.92667C24.3309%207.8967%2024.2152%207.87928%2024.0952%207.87928H22.9466L20.7171%205.64979H24.4416L24.4416%205.64976ZM14.9007%201.21877L21.5612%207.87925H20.0743L14.1573%201.96222L14.9007%201.2188L14.9007%201.21877ZM13.4645%202.65503L18.6887%207.87931H15.4822L11.8612%204.2583L13.4645%202.65503ZM9.2302%203.0129L14.0966%207.87925H12.7614L8.56266%203.68055L9.23023%203.01293L9.2302%203.0129ZM11.3757%207.87925H4.36383L7.86976%204.37339L11.3757%207.87925H11.3757ZM2.97821%207.87925H1.40868C1.28657%207.87925%201.16882%207.89719%201.05639%207.92814V5.64976H5.20772L2.97824%207.87925H2.97821ZM24.4452%2026.634C24.4452%2026.8269%2024.2882%2026.9839%2024.0952%2026.9839H1.40871C1.2158%2026.9839%201.05882%2026.8269%201.05882%2026.634V9.20889C1.05882%209.01598%201.21577%208.85898%201.40871%208.85898H24.0953C24.2762%208.85898%2024.4237%208.99753%2024.4416%209.1737V10.3734C24.4416%2010.3927%2024.4431%2010.4116%2024.4452%2010.4302V14.3758H19.9927C18.0376%2014.3758%2016.447%2015.9664%2016.447%2017.9214C16.447%2019.8766%2018.0376%2021.4672%2019.9927%2021.4672H24.4452L24.4452%2026.634ZM26.944%2020.4874H19.9927C18.5778%2020.4874%2017.4267%2019.3363%2017.4267%2017.9214C17.4267%2016.5066%2018.5778%2015.3555%2019.9927%2015.3555H26.9441V20.4874L26.944%2020.4874ZM20.0159%2016.2419C19.0899%2016.2419%2018.3364%2016.9953%2018.3364%2017.9214C18.3364%2018.8475%2019.0899%2019.601%2020.016%2019.601C20.942%2019.601%2021.6955%2018.8475%2021.6955%2017.9214C21.6955%2016.9953%2020.9421%2016.2419%2020.016%2016.2419L20.0159%2016.2419ZM20.0159%2018.6212C19.6301%2018.6212%2019.3161%2018.3073%2019.3161%2017.9214C19.3161%2017.5356%2019.6301%2017.2216%2020.016%2017.2216C20.4018%2017.2216%2020.7158%2017.5356%2020.7158%2017.9214C20.7158%2018.3073%2020.4018%2018.6212%2020.016%2018.6212H20.0159Z'%20fill='black'/%3e%3c/g%3e%3cdefs%3e%3cclipPath%20id='clip0_824_546'%3e%3crect%20width='28'%20height='28'%20fill='white'/%3e%3c/clipPath%3e%3c/defs%3e%3c/svg%3e", S0 = "data:image/svg+xml,%3csvg%20width='24'%20height='27'%20viewBox='0%200%2024%2027'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M23.3855%2019.118C22.6282%2017.8145%2021.7255%2015.3479%2021.7255%2011V10.1129C21.7255%204.71412%2017.3959%200.289795%2012.0741%200.25025C12.0492%200.250125%2012.0246%200.25%2011.9998%200.25C9.41732%200.253452%206.942%201.2826%205.11832%203.11107C3.29464%204.93953%202.27197%207.41754%202.27529%2010V11C2.27529%2015.3478%201.37209%2017.8141%200.614277%2019.1177C0.459117%2019.3834%200.376757%2019.6853%200.375503%2019.993C0.374248%2020.3007%200.454144%2020.6032%200.607132%2020.8702C0.76012%2021.1371%200.980792%2021.359%201.2469%2021.5135C1.513%2021.668%201.81513%2021.7496%202.12282%2021.75H7.24989V22C7.24989%2023.2598%207.75034%2024.468%208.64114%2025.3588C9.53193%2026.2496%2010.7401%2026.75%2011.9999%2026.75C13.2597%2026.75%2014.4679%2026.2496%2015.3586%2025.3588C16.2494%2024.468%2016.7499%2023.2598%2016.7499%2022V21.75H21.877C22.1846%2021.7496%2022.4867%2021.668%2022.7528%2021.5136C23.0189%2021.3592%2023.2396%2021.1373%2023.3926%2020.8704C23.5456%2020.6035%2023.6255%2020.3009%2023.6242%2019.9933C23.623%2019.6856%2023.5406%2019.3837%2023.3855%2019.118ZM15.2499%2022C15.2499%2022.862%2014.9075%2023.6886%2014.298%2024.2981C13.6885%2024.9076%2012.8618%2025.25%2011.9999%2025.25C11.1379%2025.25%2010.3113%2024.9076%209.7018%2024.2981C9.0923%2023.6886%208.74989%2022.862%208.74989%2022V21.75H15.2499V22ZM22.0897%2020.1267C22.0689%2020.1647%2022.038%2020.1963%2022.0005%2020.218C21.963%2020.2397%2021.9203%2020.2508%2021.877%2020.25H2.12282C2.07946%2020.2508%202.03672%2020.2397%201.9992%2020.218C1.96167%2020.1963%201.93081%2020.1647%201.90993%2020.1267C1.8868%2020.0881%201.87469%2020.0439%201.87491%2019.9989C1.87512%2019.9539%201.88766%2019.9098%201.91115%2019.8715C2.76149%2018.4086%203.77528%2015.6819%203.77528%2011V10C3.77198%207.81531%204.63667%205.71879%206.17912%204.17162C7.72157%202.62445%209.81545%201.75337%2012.0001%201.75C12.0209%201.75%2012.0421%201.75013%2012.0629%201.75025C16.5637%201.7837%2020.2255%205.53516%2020.2255%2010.1129V11C20.2255%2015.6819%2021.2387%2018.4086%2022.0886%2019.8716C22.1121%2019.91%2022.1246%2019.954%2022.1248%2019.999C22.125%2020.044%2022.1129%2020.0881%2022.0897%2020.1267Z'%20fill='black'/%3e%3c/svg%3e", A0 = (t) => {
  const n = le().pathname.split("/"), i = n[n.length - 1], s = i.charAt(0).toUpperCase() + i.slice(1);
  return /* @__PURE__ */ w("div", { ...t, className: "py-5 border-b border-gray-100", children: /* @__PURE__ */ _("div", { className: "flex w-[90%] mx-auto justify-between", children: [
    /* @__PURE__ */ w("h2", { className: "text-2xl font-medium", children: s }),
    /* @__PURE__ */ _("div", { className: "flex gap-4 items-center", children: [
      /* @__PURE__ */ w(Ne, { icon: V0 }),
      /* @__PURE__ */ w(j0, { label: "XAF123.45", onClick: () => {
      } }),
      /* @__PURE__ */ w(Ne, { icon: S0 })
    ] })
  ] }) });
};
function L0(t) {
  return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default") ? t.default : t;
}
var H = {}, Vt = {}, _n;
function M0() {
  if (_n) return Vt;
  _n = 1, Object.defineProperty(Vt, "__esModule", { value: !0 }), Vt.calculateRgba = void 0;
  var t;
  (function(i) {
    i.maroon = "#800000", i.red = "#FF0000", i.orange = "#FFA500", i.yellow = "#FFFF00", i.olive = "#808000", i.green = "#008000", i.purple = "#800080", i.fuchsia = "#FF00FF", i.lime = "#00FF00", i.teal = "#008080", i.aqua = "#00FFFF", i.blue = "#0000FF", i.navy = "#000080", i.black = "#000000", i.gray = "#808080", i.silver = "#C0C0C0", i.white = "#FFFFFF";
  })(t || (t = {}));
  var e = function(i, s) {
    if (i.includes("/"))
      return i.replace("rgb(", "rgba(");
    var o = i.substring(i.startsWith("rgba(") ? 5 : 4, i.length - 1).trim(), r = o.split(",");
    return r.length === 4 ? i.replace("rgb(", "rgba(") : r.length === 3 ? "rgba(".concat(o, ", ").concat(s, ")") : "rgba(".concat(o, " / ").concat(s, ")");
  }, n = function(i, s) {
    if (i.startsWith("rgb"))
      return e(i, s);
    if (Object.keys(t).includes(i) && (i = t[i]), i[0] === "#" && (i = i.slice(1)), i.length === 3) {
      var o = "";
      i.split("").forEach(function(a) {
        o += a, o += a;
      }), i = o;
    }
    var r = (i.match(/.{2}/g) || []).map(function(a) {
      return parseInt(a, 16);
    }).join(", ");
    return "rgba(".concat(r, ", ").concat(s, ")");
  };
  return Vt.calculateRgba = n, Vt;
}
var St = {}, Hn;
function D0() {
  if (Hn) return St;
  Hn = 1, Object.defineProperty(St, "__esModule", { value: !0 }), St.parseLengthAndUnit = e, St.cssValue = n;
  var t = {
    cm: !0,
    mm: !0,
    in: !0,
    px: !0,
    pt: !0,
    pc: !0,
    em: !0,
    ex: !0,
    ch: !0,
    rem: !0,
    vw: !0,
    vh: !0,
    vmin: !0,
    vmax: !0,
    "%": !0
  };
  function e(i) {
    if (typeof i == "number")
      return {
        value: i,
        unit: "px"
      };
    var s, o = (i.match(/^[0-9.]*/) || "").toString();
    o.includes(".") ? s = parseFloat(o) : s = parseInt(o, 10);
    var r = (i.match(/[^0-9]*$/) || "").toString();
    return t[r] ? {
      value: s,
      unit: r
    } : (console.warn("React Spinners: ".concat(i, " is not a valid css value. Defaulting to ").concat(s, "px.")), {
      value: s,
      unit: "px"
    });
  }
  function n(i) {
    var s = e(i);
    return "".concat(s.value).concat(s.unit);
  }
  return St;
}
var At = {}, Un;
function E0() {
  if (Un) return At;
  Un = 1, Object.defineProperty(At, "__esModule", { value: !0 }), At.createAnimation = void 0;
  var t = function(e, n, i) {
    var s = "react-spinners-".concat(e, "-").concat(i);
    if (typeof window > "u" || !window.document)
      return s;
    var o = document.createElement("style");
    document.head.appendChild(o);
    var r = o.sheet, a = `
    @keyframes `.concat(s, ` {
      `).concat(n, `
    }
  `);
    return r && r.insertRule(a, 0), s;
  };
  return At.createAnimation = t, At;
}
var $n;
function R0() {
  if ($n) return H;
  $n = 1;
  var t = H && H.__assign || function() {
    return t = Object.assign || function(u) {
      for (var h, d = 1, f = arguments.length; d < f; d++) {
        h = arguments[d];
        for (var p in h) Object.prototype.hasOwnProperty.call(h, p) && (u[p] = h[p]);
      }
      return u;
    }, t.apply(this, arguments);
  }, e = H && H.__createBinding || (Object.create ? function(u, h, d, f) {
    f === void 0 && (f = d);
    var p = Object.getOwnPropertyDescriptor(h, d);
    (!p || ("get" in p ? !h.__esModule : p.writable || p.configurable)) && (p = { enumerable: !0, get: function() {
      return h[d];
    } }), Object.defineProperty(u, f, p);
  } : function(u, h, d, f) {
    f === void 0 && (f = d), u[f] = h[d];
  }), n = H && H.__setModuleDefault || (Object.create ? function(u, h) {
    Object.defineProperty(u, "default", { enumerable: !0, value: h });
  } : function(u, h) {
    u.default = h;
  }), i = H && H.__importStar || /* @__PURE__ */ function() {
    var u = function(h) {
      return u = Object.getOwnPropertyNames || function(d) {
        var f = [];
        for (var p in d) Object.prototype.hasOwnProperty.call(d, p) && (f[f.length] = p);
        return f;
      }, u(h);
    };
    return function(h) {
      if (h && h.__esModule) return h;
      var d = {};
      if (h != null) for (var f = u(h), p = 0; p < f.length; p++) f[p] !== "default" && e(d, h, f[p]);
      return n(d, h), d;
    };
  }(), s = H && H.__rest || function(u, h) {
    var d = {};
    for (var f in u) Object.prototype.hasOwnProperty.call(u, f) && h.indexOf(f) < 0 && (d[f] = u[f]);
    if (u != null && typeof Object.getOwnPropertySymbols == "function")
      for (var p = 0, f = Object.getOwnPropertySymbols(u); p < f.length; p++)
        h.indexOf(f[p]) < 0 && Object.prototype.propertyIsEnumerable.call(u, f[p]) && (d[f[p]] = u[f[p]]);
    return d;
  };
  Object.defineProperty(H, "__esModule", { value: !0 });
  var o = i(Ks), r = /* @__PURE__ */ M0(), a = /* @__PURE__ */ D0(), l = /* @__PURE__ */ E0();
  function c(u) {
    var h = u.loading, d = h === void 0 ? !0 : h, f = u.color, p = f === void 0 ? "#000000" : f, m = u.speedMultiplier, y = m === void 0 ? 1 : m, g = u.cssOverride, v = g === void 0 ? {} : g, C = u.size, P = C === void 0 ? 50 : C, b = s(u, ["loading", "color", "speedMultiplier", "cssOverride", "size"]), V = (0, a.parseLengthAndUnit)(P), L = V.value, T = V.unit, k = t({ display: "inherit", position: "relative", width: (0, a.cssValue)(P), height: (0, a.cssValue)(P), transform: "rotate(165deg)" }, v), F = L / 5, R = (L - F) / 2, O = R - F, q = (0, r.calculateRgba)(p, 0.75), Kt = (0, l.createAnimation)("HashLoader", "0% {width: ".concat(F, "px; box-shadow: ").concat(R, "px ").concat(-O, "px ").concat(q, ", ").concat(-R, "px ").concat(O, "px ").concat(q, `}
    35% {width: `).concat((0, a.cssValue)(P), "; box-shadow: 0 ").concat(-O, "px ").concat(q, ", 0 ").concat(O, "px ").concat(q, `}
    70% {width: `).concat(F, "px; box-shadow: ").concat(-R, "px ").concat(-O, "px ").concat(q, ", ").concat(R, "px ").concat(O, "px ").concat(q, `}
    100% {box-shadow: `).concat(R, "px ").concat(-O, "px ").concat(q, ", ").concat(-R, "px ").concat(O, "px ").concat(q, "}"), "before"), jn = (0, l.createAnimation)("HashLoader", "0% {height: ".concat(F, "px; box-shadow: ").concat(O, "px ").concat(R, "px ").concat(p, ", ").concat(-O, "px ").concat(-R, "px ").concat(p, `}
    35% {height: `).concat((0, a.cssValue)(P), "; box-shadow: ").concat(O, "px 0 ").concat(p, ", ").concat(-O, "px 0 ").concat(p, `}
    70% {height: `).concat(F, "px; box-shadow: ").concat(O, "px ").concat(-R, "px ").concat(p, ", ").concat(-O, "px ").concat(R, "px ").concat(p, `}
    100% {box-shadow: `).concat(O, "px ").concat(R, "px ").concat(p, ", ").concat(-O, "px ").concat(-R, "px ").concat(p, "}"), "after"), me = function(N) {
      return {
        position: "absolute",
        top: "50%",
        left: "50%",
        display: "block",
        width: "".concat(L / 5).concat(T),
        height: "".concat(L / 5).concat(T),
        borderRadius: "".concat(L / 10).concat(T),
        transform: "translate(-50%, -50%)",
        animationFillMode: "none",
        animation: "".concat(N === 1 ? Kt : jn, " ").concat(2 / y, "s infinite")
      };
    };
    return d ? o.createElement(
      "span",
      t({ style: k }, b),
      o.createElement("span", { style: me(1) }),
      o.createElement("span", { style: me(2) })
    ) : null;
  }
  return H.default = c, H;
}
var F0 = /* @__PURE__ */ R0();
const O0 = /* @__PURE__ */ L0(F0), N0 = ({
  size: t = 35,
  ...e
}) => /* @__PURE__ */ w(
  O0,
  {
    size: t,
    className: "text-primary-500 fill-primary-500",
    ...e
  }
), yi = ({
  label: t,
  icon: e,
  isLoading: n,
  ...i
}) => /* @__PURE__ */ w(
  "button",
  {
    ...i,
    className: `cursor-pointer transition-colors duration-500 ${i.disabled ? "!bg-gray-400 !text-gray-700 cursor-not-allowed" : "bg-secondary-500 hover:bg-secondary-600 text-white"} border-none text-sm rounded-sm px-5 flex po items-center outline-none gap-2 ${i.className}`,
    disabled: i.disabled,
    children: n ? /* @__PURE__ */ w(N0, { size: 20 }) : /* @__PURE__ */ _("span", { className: "flex justify-center items-center gap-1", children: [
      /* @__PURE__ */ w("span", { children: e && e }),
      " ",
      /* @__PURE__ */ _("span", { children: [
        " ",
        t
      ] })
    ] })
  }
), j0 = ({ label: t, ...e }) => /* @__PURE__ */ _(
  "button",
  {
    ...e,
    className: `bg-secondary-500 flex text-white items-center justify-center rounded-3xl px-5 ${e.className} ${e.icon && "gap-2"}`,
    children: [
      t,
      e.icon && e.icon
    ]
  }
), fl = ({
  icon: t,
  inputClasses: e,
  label: n,
  ...i
}) => /* @__PURE__ */ _("div", { children: [
  n && /* @__PURE__ */ w("p", { className: "mb-2", children: n }),
  /* @__PURE__ */ _("div", { className: "relative flex items-center justify-start", children: [
    /* @__PURE__ */ w(
      "input",
      {
        ...i,
        type: "text",
        className: `px-2 py-3 bg-white outline-none border focus:border-secondary-300 border-gray-300 rounded-md p-2 ${e}`
      }
    ),
    t && t
  ] })
] }), vi = bt({});
function k0(t) {
  const e = Yt(null);
  return e.current === null && (e.current = t()), e.current;
}
const sn = bt(null), Ci = bt({
  transformPagePoint: (t) => t,
  isStatic: !1,
  reducedMotion: "never"
});
function B0(t = !0) {
  const e = U(sn);
  if (e === null)
    return [!0, null];
  const { isPresent: n, onExitComplete: i, register: s } = e, o = Gs();
  Je(() => {
    t && s(o);
  }, [t]);
  const r = li(() => t && i && i(o), [o, i, t]);
  return !n && i ? [!1, r] : [!0];
}
const rn = typeof window < "u", I0 = rn ? zs : Je, $ = /* @__NO_SIDE_EFFECTS__ */ (t) => t;
let wt = $, it = $;
process.env.NODE_ENV !== "production" && (wt = (t, e) => {
  !t && typeof console < "u" && console.warn(e);
}, it = (t, e) => {
  if (!t)
    throw new Error(e);
});
// @__NO_SIDE_EFFECTS__
function on(t) {
  let e;
  return () => (e === void 0 && (e = t()), e);
}
const vt = /* @__NO_SIDE_EFFECTS__ */ (t, e, n) => {
  const i = e - t;
  return i === 0 ? 1 : (n - t) / i;
}, Y = /* @__NO_SIDE_EFFECTS__ */ (t) => t * 1e3, tt = /* @__NO_SIDE_EFFECTS__ */ (t) => t / 1e3, _0 = {
  useManualTiming: !1
};
function H0(t) {
  let e = /* @__PURE__ */ new Set(), n = /* @__PURE__ */ new Set(), i = !1, s = !1;
  const o = /* @__PURE__ */ new WeakSet();
  let r = {
    delta: 0,
    timestamp: 0,
    isProcessing: !1
  };
  function a(c) {
    o.has(c) && (l.schedule(c), t()), c(r);
  }
  const l = {
    /**
     * Schedule a process to run on the next frame.
     */
    schedule: (c, u = !1, h = !1) => {
      const f = h && i ? e : n;
      return u && o.add(c), f.has(c) || f.add(c), c;
    },
    /**
     * Cancel the provided callback from running on the next frame.
     */
    cancel: (c) => {
      n.delete(c), o.delete(c);
    },
    /**
     * Execute all schedule callbacks.
     */
    process: (c) => {
      if (r = c, i) {
        s = !0;
        return;
      }
      i = !0, [e, n] = [n, e], e.forEach(a), e.clear(), i = !1, s && (s = !1, l.process(c));
    }
  };
  return l;
}
const Gt = [
  "read",
  // Read
  "resolveKeyframes",
  // Write/Read/Write/Read
  "update",
  // Compute
  "preRender",
  // Compute
  "render",
  // Write
  "postRender"
  // Compute
], U0 = 40;
function xi(t, e) {
  let n = !1, i = !0;
  const s = {
    delta: 0,
    timestamp: 0,
    isProcessing: !1
  }, o = () => n = !0, r = Gt.reduce((g, v) => (g[v] = H0(o), g), {}), { read: a, resolveKeyframes: l, update: c, preRender: u, render: h, postRender: d } = r, f = () => {
    const g = performance.now();
    n = !1, s.delta = i ? 1e3 / 60 : Math.max(Math.min(g - s.timestamp, U0), 1), s.timestamp = g, s.isProcessing = !0, a.process(s), l.process(s), c.process(s), u.process(s), h.process(s), d.process(s), s.isProcessing = !1, n && e && (i = !1, t(f));
  }, p = () => {
    n = !0, i = !0, s.isProcessing || t(f);
  };
  return { schedule: Gt.reduce((g, v) => {
    const C = r[v];
    return g[v] = (P, b = !1, V = !1) => (n || p(), C.schedule(P, b, V)), g;
  }, {}), cancel: (g) => {
    for (let v = 0; v < Gt.length; v++)
      r[Gt[v]].cancel(g);
  }, state: s, steps: r };
}
const { schedule: S, cancel: st, state: j, steps: Ce } = xi(typeof requestAnimationFrame < "u" ? requestAnimationFrame : $, !0), bi = bt({ strict: !1 }), Zn = {
  animation: [
    "animate",
    "variants",
    "whileHover",
    "whileTap",
    "exit",
    "whileInView",
    "whileFocus",
    "whileDrag"
  ],
  exit: ["exit"],
  drag: ["drag", "dragControls"],
  focus: ["whileFocus"],
  hover: ["whileHover", "onHoverStart", "onHoverEnd"],
  tap: ["whileTap", "onTap", "onTapStart", "onTapCancel"],
  pan: ["onPan", "onPanStart", "onPanSessionStart", "onPanEnd"],
  inView: ["whileInView", "onViewportEnter", "onViewportLeave"],
  layout: ["layout", "layoutId"]
}, Ct = {};
for (const t in Zn)
  Ct[t] = {
    isEnabled: (e) => Zn[t].some((n) => !!e[n])
  };
function $0(t) {
  for (const e in t)
    Ct[e] = {
      ...Ct[e],
      ...t[e]
    };
}
const Z0 = /* @__PURE__ */ new Set([
  "animate",
  "exit",
  "variants",
  "initial",
  "style",
  "values",
  "variants",
  "transition",
  "transformTemplate",
  "custom",
  "inherit",
  "onBeforeLayoutMeasure",
  "onAnimationStart",
  "onAnimationComplete",
  "onUpdate",
  "onDragStart",
  "onDrag",
  "onDragEnd",
  "onMeasureDragConstraints",
  "onDirectionLock",
  "onDragTransitionEnd",
  "_dragX",
  "_dragY",
  "onHoverStart",
  "onHoverEnd",
  "onViewportEnter",
  "onViewportLeave",
  "globalTapTarget",
  "ignoreStrict",
  "viewport"
]);
function te(t) {
  return t.startsWith("while") || t.startsWith("drag") && t !== "draggable" || t.startsWith("layout") || t.startsWith("onTap") || t.startsWith("onPan") || t.startsWith("onLayout") || Z0.has(t);
}
let wi = (t) => !te(t);
function W0(t) {
  t && (wi = (e) => e.startsWith("on") ? !te(e) : t(e));
}
try {
  W0(require("@emotion/is-prop-valid").default);
} catch {
}
function K0(t, e, n) {
  const i = {};
  for (const s in t)
    s === "values" && typeof t.values == "object" || (wi(s) || n === !0 && te(s) || !e && !te(s) || // If trying to use native HTML drag events, forward drag listeners
    t.draggable && s.startsWith("onDrag")) && (i[s] = t[s]);
  return i;
}
const Wn = /* @__PURE__ */ new Set();
function ce(t, e, n) {
  t || Wn.has(e) || (console.warn(e), Wn.add(e));
}
function G0(t) {
  if (typeof Proxy > "u")
    return t;
  const e = /* @__PURE__ */ new Map(), n = (...i) => (process.env.NODE_ENV !== "production" && ce(!1, "motion() is deprecated. Use motion.create() instead."), t(...i));
  return new Proxy(n, {
    /**
     * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.
     * The prop name is passed through as `key` and we can use that to generate a `motion`
     * DOM component with that name.
     */
    get: (i, s) => s === "create" ? t : (e.has(s) || e.set(s, t(s)), e.get(s))
  });
}
const ue = bt({});
function jt(t) {
  return typeof t == "string" || Array.isArray(t);
}
function he(t) {
  return t !== null && typeof t == "object" && typeof t.start == "function";
}
const an = [
  "animate",
  "whileInView",
  "whileFocus",
  "whileHover",
  "whileTap",
  "whileDrag",
  "exit"
], ln = ["initial", ...an];
function de(t) {
  return he(t.animate) || ln.some((e) => jt(t[e]));
}
function Ti(t) {
  return !!(de(t) || t.variants);
}
function z0(t, e) {
  if (de(t)) {
    const { initial: n, animate: i } = t;
    return {
      initial: n === !1 || jt(n) ? n : void 0,
      animate: jt(i) ? i : void 0
    };
  }
  return t.inherit !== !1 ? e : {};
}
function q0(t) {
  const { initial: e, animate: n } = z0(t, U(ue));
  return ae(() => ({ initial: e, animate: n }), [Kn(e), Kn(n)]);
}
function Kn(t) {
  return Array.isArray(t) ? t.join(" ") : t;
}
const Y0 = Symbol.for("motionComponentSymbol");
function ft(t) {
  return t && typeof t == "object" && Object.prototype.hasOwnProperty.call(t, "current");
}
function X0(t, e, n) {
  return li(
    (i) => {
      i && t.onMount && t.onMount(i), e && (i ? e.mount(i) : e.unmount()), n && (typeof n == "function" ? n(i) : ft(n) && (n.current = i));
    },
    /**
     * Only pass a new ref callback to React if we've received a visual element
     * factory. Otherwise we'll be mounting/remounting every time externalRef
     * or other dependencies change.
     */
    [e]
  );
}
const cn = (t) => t.replace(/([a-z])([A-Z])/gu, "$1-$2").toLowerCase(), J0 = "framerAppearId", Pi = "data-" + cn(J0), { schedule: un } = xi(queueMicrotask, !1), Vi = bt({});
function Q0(t, e, n, i, s) {
  var o, r;
  const { visualElement: a } = U(ue), l = U(bi), c = U(sn), u = U(Ci).reducedMotion, h = Yt(null);
  i = i || l.renderer, !h.current && i && (h.current = i(t, {
    visualState: e,
    parent: a,
    props: n,
    presenceContext: c,
    blockInitialAnimation: c ? c.initial === !1 : !1,
    reducedMotionConfig: u
  }));
  const d = h.current, f = U(Vi);
  d && !d.projection && s && (d.type === "html" || d.type === "svg") && tr(h.current, n, s, f);
  const p = Yt(!1);
  qs(() => {
    d && p.current && d.update(n, c);
  });
  const m = n[Pi], y = Yt(!!m && !(!((o = window.MotionHandoffIsComplete) === null || o === void 0) && o.call(window, m)) && ((r = window.MotionHasOptimisedAnimation) === null || r === void 0 ? void 0 : r.call(window, m)));
  return I0(() => {
    d && (p.current = !0, window.MotionIsMounted = !0, d.updateFeatures(), un.render(d.render), y.current && d.animationState && d.animationState.animateChanges());
  }), Je(() => {
    d && (!y.current && d.animationState && d.animationState.animateChanges(), y.current && (queueMicrotask(() => {
      var g;
      (g = window.MotionHandoffMarkAsComplete) === null || g === void 0 || g.call(window, m);
    }), y.current = !1));
  }), d;
}
function tr(t, e, n, i) {
  const { layoutId: s, layout: o, drag: r, dragConstraints: a, layoutScroll: l, layoutRoot: c } = e;
  t.projection = new n(t.latestValues, e["data-framer-portal-id"] ? void 0 : Si(t.parent)), t.projection.setOptions({
    layoutId: s,
    layout: o,
    alwaysMeasureLayout: !!r || a && ft(a),
    visualElement: t,
    /**
     * TODO: Update options in an effect. This could be tricky as it'll be too late
     * to update by the time layout animations run.
     * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,
     * ensuring it gets called if there's no potential layout animations.
     *
     */
    animationType: typeof o == "string" ? o : "both",
    initialPromotionConfig: i,
    layoutScroll: l,
    layoutRoot: c
  });
}
function Si(t) {
  if (t)
    return t.options.allowProjection !== !1 ? t.projection : Si(t.parent);
}
function er({ preloadedFeatures: t, createVisualElement: e, useRender: n, useVisualState: i, Component: s }) {
  var o, r;
  t && $0(t);
  function a(c, u) {
    let h;
    const d = {
      ...U(Ci),
      ...c,
      layoutId: nr(c)
    }, { isStatic: f } = d, p = q0(c), m = i(c, f);
    if (!f && rn) {
      ir(d, t);
      const y = sr(d);
      h = y.MeasureLayout, p.visualElement = Q0(s, m, d, e, y.ProjectionNode);
    }
    return _(ue.Provider, { value: p, children: [h && p.visualElement ? w(h, { visualElement: p.visualElement, ...d }) : null, n(s, c, X0(m, p.visualElement, u), m, f, p.visualElement)] });
  }
  a.displayName = `motion.${typeof s == "string" ? s : `create(${(r = (o = s.displayName) !== null && o !== void 0 ? o : s.name) !== null && r !== void 0 ? r : ""})`}`;
  const l = Ys(a);
  return l[Y0] = s, l;
}
function nr({ layoutId: t }) {
  const e = U(vi).id;
  return e && t !== void 0 ? e + "-" + t : t;
}
function ir(t, e) {
  const n = U(bi).strict;
  if (process.env.NODE_ENV !== "production" && e && n) {
    const i = "You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.";
    t.ignoreStrict ? wt(!1, i) : it(!1, i);
  }
}
function sr(t) {
  const { drag: e, layout: n } = Ct;
  if (!e && !n)
    return {};
  const i = { ...e, ...n };
  return {
    MeasureLayout: e != null && e.isEnabled(t) || n != null && n.isEnabled(t) ? i.MeasureLayout : void 0,
    ProjectionNode: i.ProjectionNode
  };
}
const rr = [
  "animate",
  "circle",
  "defs",
  "desc",
  "ellipse",
  "g",
  "image",
  "line",
  "filter",
  "marker",
  "mask",
  "metadata",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "rect",
  "stop",
  "switch",
  "symbol",
  "svg",
  "text",
  "tspan",
  "use",
  "view"
];
function hn(t) {
  return (
    /**
     * If it's not a string, it's a custom React component. Currently we only support
     * HTML custom React components.
     */
    typeof t != "string" || /**
     * If it contains a dash, the element is a custom HTML webcomponent.
     */
    t.includes("-") ? !1 : (
      /**
       * If it's in our list of lowercase SVG tags, it's an SVG component
       */
      !!(rr.indexOf(t) > -1 || /**
       * If it contains a capital letter, it's an SVG component
       */
      /[A-Z]/u.test(t))
    )
  );
}
function Gn(t) {
  const e = [{}, {}];
  return t == null || t.values.forEach((n, i) => {
    e[0][i] = n.get(), e[1][i] = n.getVelocity();
  }), e;
}
function dn(t, e, n, i) {
  if (typeof e == "function") {
    const [s, o] = Gn(i);
    e = e(n !== void 0 ? n : t.custom, s, o);
  }
  if (typeof e == "string" && (e = t.variants && t.variants[e]), typeof e == "function") {
    const [s, o] = Gn(i);
    e = e(n !== void 0 ? n : t.custom, s, o);
  }
  return e;
}
const je = (t) => Array.isArray(t), or = (t) => !!(t && typeof t == "object" && t.mix && t.toValue), ar = (t) => je(t) ? t[t.length - 1] || 0 : t, I = (t) => !!(t && t.getVelocity);
function Xt(t) {
  const e = I(t) ? t.get() : t;
  return or(e) ? e.toValue() : e;
}
function lr({ scrapeMotionValuesFromProps: t, createRenderState: e, onUpdate: n }, i, s, o) {
  const r = {
    latestValues: cr(i, s, o, t),
    renderState: e()
  };
  return n && (r.onMount = (a) => n({ props: i, current: a, ...r }), r.onUpdate = (a) => n(a)), r;
}
const Ai = (t) => (e, n) => {
  const i = U(ue), s = U(sn), o = () => lr(t, e, i, s);
  return n ? o() : k0(o);
};
function cr(t, e, n, i) {
  const s = {}, o = i(t, {});
  for (const d in o)
    s[d] = Xt(o[d]);
  let { initial: r, animate: a } = t;
  const l = de(t), c = Ti(t);
  e && c && !l && t.inherit !== !1 && (r === void 0 && (r = e.initial), a === void 0 && (a = e.animate));
  let u = n ? n.initial === !1 : !1;
  u = u || r === !1;
  const h = u ? a : r;
  if (h && typeof h != "boolean" && !he(h)) {
    const d = Array.isArray(h) ? h : [h];
    for (let f = 0; f < d.length; f++) {
      const p = dn(t, d[f]);
      if (p) {
        const { transitionEnd: m, transition: y, ...g } = p;
        for (const v in g) {
          let C = g[v];
          if (Array.isArray(C)) {
            const P = u ? C.length - 1 : 0;
            C = C[P];
          }
          C !== null && (s[v] = C);
        }
        for (const v in m)
          s[v] = m[v];
      }
    }
  }
  return s;
}
const Tt = [
  "transformPerspective",
  "x",
  "y",
  "z",
  "translateX",
  "translateY",
  "translateZ",
  "scale",
  "scaleX",
  "scaleY",
  "rotate",
  "rotateX",
  "rotateY",
  "rotateZ",
  "skew",
  "skewX",
  "skewY"
], dt = new Set(Tt), Li = (t) => (e) => typeof e == "string" && e.startsWith(t), Mi = /* @__PURE__ */ Li("--"), ur = /* @__PURE__ */ Li("var(--"), fn = (t) => ur(t) ? hr.test(t.split("/*")[0].trim()) : !1, hr = /var\(--(?:[\w-]+\s*|[\w-]+\s*,(?:\s*[^)(\s]|\s*\((?:[^)(]|\([^)(]*\))*\))+\s*)\)$/iu, Di = (t, e) => e && typeof t == "number" ? e.transform(t) : t, et = (t, e, n) => n > e ? e : n < t ? t : n, Pt = {
  test: (t) => typeof t == "number",
  parse: parseFloat,
  transform: (t) => t
}, kt = {
  ...Pt,
  transform: (t) => et(0, 1, t)
}, zt = {
  ...Pt,
  default: 1
}, Ut = (t) => ({
  test: (e) => typeof e == "string" && e.endsWith(t) && e.split(" ").length === 1,
  parse: parseFloat,
  transform: (e) => `${e}${t}`
}), nt = /* @__PURE__ */ Ut("deg"), X = /* @__PURE__ */ Ut("%"), x = /* @__PURE__ */ Ut("px"), dr = /* @__PURE__ */ Ut("vh"), fr = /* @__PURE__ */ Ut("vw"), zn = {
  ...X,
  parse: (t) => X.parse(t) / 100,
  transform: (t) => X.transform(t * 100)
}, pr = {
  // Border props
  borderWidth: x,
  borderTopWidth: x,
  borderRightWidth: x,
  borderBottomWidth: x,
  borderLeftWidth: x,
  borderRadius: x,
  radius: x,
  borderTopLeftRadius: x,
  borderTopRightRadius: x,
  borderBottomRightRadius: x,
  borderBottomLeftRadius: x,
  // Positioning props
  width: x,
  maxWidth: x,
  height: x,
  maxHeight: x,
  top: x,
  right: x,
  bottom: x,
  left: x,
  // Spacing props
  padding: x,
  paddingTop: x,
  paddingRight: x,
  paddingBottom: x,
  paddingLeft: x,
  margin: x,
  marginTop: x,
  marginRight: x,
  marginBottom: x,
  marginLeft: x,
  // Misc
  backgroundPositionX: x,
  backgroundPositionY: x
}, mr = {
  rotate: nt,
  rotateX: nt,
  rotateY: nt,
  rotateZ: nt,
  scale: zt,
  scaleX: zt,
  scaleY: zt,
  scaleZ: zt,
  skew: nt,
  skewX: nt,
  skewY: nt,
  distance: x,
  translateX: x,
  translateY: x,
  translateZ: x,
  x,
  y: x,
  z: x,
  perspective: x,
  transformPerspective: x,
  opacity: kt,
  originX: zn,
  originY: zn,
  originZ: x
}, qn = {
  ...Pt,
  transform: Math.round
}, pn = {
  ...pr,
  ...mr,
  zIndex: qn,
  size: x,
  // SVG
  fillOpacity: kt,
  strokeOpacity: kt,
  numOctaves: qn
}, gr = {
  x: "translateX",
  y: "translateY",
  z: "translateZ",
  transformPerspective: "perspective"
}, yr = Tt.length;
function vr(t, e, n) {
  let i = "", s = !0;
  for (let o = 0; o < yr; o++) {
    const r = Tt[o], a = t[r];
    if (a === void 0)
      continue;
    let l = !0;
    if (typeof a == "number" ? l = a === (r.startsWith("scale") ? 1 : 0) : l = parseFloat(a) === 0, !l || n) {
      const c = Di(a, pn[r]);
      if (!l) {
        s = !1;
        const u = gr[r] || r;
        i += `${u}(${c}) `;
      }
      n && (e[r] = c);
    }
  }
  return i = i.trim(), n ? i = n(e, s ? "" : i) : s && (i = "none"), i;
}
function mn(t, e, n) {
  const { style: i, vars: s, transformOrigin: o } = t;
  let r = !1, a = !1;
  for (const l in e) {
    const c = e[l];
    if (dt.has(l)) {
      r = !0;
      continue;
    } else if (Mi(l)) {
      s[l] = c;
      continue;
    } else {
      const u = Di(c, pn[l]);
      l.startsWith("origin") ? (a = !0, o[l] = u) : i[l] = u;
    }
  }
  if (e.transform || (r || n ? i.transform = vr(e, t.transform, n) : i.transform && (i.transform = "none")), a) {
    const { originX: l = "50%", originY: c = "50%", originZ: u = 0 } = o;
    i.transformOrigin = `${l} ${c} ${u}`;
  }
}
const Cr = {
  offset: "stroke-dashoffset",
  array: "stroke-dasharray"
}, xr = {
  offset: "strokeDashoffset",
  array: "strokeDasharray"
};
function br(t, e, n = 1, i = 0, s = !0) {
  t.pathLength = 1;
  const o = s ? Cr : xr;
  t[o.offset] = x.transform(-i);
  const r = x.transform(e), a = x.transform(n);
  t[o.array] = `${r} ${a}`;
}
function Yn(t, e, n) {
  return typeof t == "string" ? t : x.transform(e + n * t);
}
function wr(t, e, n) {
  const i = Yn(e, t.x, t.width), s = Yn(n, t.y, t.height);
  return `${i} ${s}`;
}
function gn(t, {
  attrX: e,
  attrY: n,
  attrScale: i,
  originX: s,
  originY: o,
  pathLength: r,
  pathSpacing: a = 1,
  pathOffset: l = 0,
  // This is object creation, which we try to avoid per-frame.
  ...c
}, u, h) {
  if (mn(t, c, h), u) {
    t.style.viewBox && (t.attrs.viewBox = t.style.viewBox);
    return;
  }
  t.attrs = t.style, t.style = {};
  const { attrs: d, style: f, dimensions: p } = t;
  d.transform && (p && (f.transform = d.transform), delete d.transform), p && (s !== void 0 || o !== void 0 || f.transform) && (f.transformOrigin = wr(p, s !== void 0 ? s : 0.5, o !== void 0 ? o : 0.5)), e !== void 0 && (d.x = e), n !== void 0 && (d.y = n), i !== void 0 && (d.scale = i), r !== void 0 && br(d, r, a, l, !1);
}
const yn = () => ({
  style: {},
  transform: {},
  transformOrigin: {},
  vars: {}
}), Ei = () => ({
  ...yn(),
  attrs: {}
}), vn = (t) => typeof t == "string" && t.toLowerCase() === "svg";
function Ri(t, { style: e, vars: n }, i, s) {
  Object.assign(t.style, e, s && s.getProjectionStyles(i));
  for (const o in n)
    t.style.setProperty(o, n[o]);
}
const Fi = /* @__PURE__ */ new Set([
  "baseFrequency",
  "diffuseConstant",
  "kernelMatrix",
  "kernelUnitLength",
  "keySplines",
  "keyTimes",
  "limitingConeAngle",
  "markerHeight",
  "markerWidth",
  "numOctaves",
  "targetX",
  "targetY",
  "surfaceScale",
  "specularConstant",
  "specularExponent",
  "stdDeviation",
  "tableValues",
  "viewBox",
  "gradientTransform",
  "pathLength",
  "startOffset",
  "textLength",
  "lengthAdjust"
]);
function Oi(t, e, n, i) {
  Ri(t, e, void 0, i);
  for (const s in e.attrs)
    t.setAttribute(Fi.has(s) ? s : cn(s), e.attrs[s]);
}
const ee = {};
function Tr(t) {
  Object.assign(ee, t);
}
function Ni(t, { layout: e, layoutId: n }) {
  return dt.has(t) || t.startsWith("origin") || (e || n !== void 0) && (!!ee[t] || t === "opacity");
}
function Cn(t, e, n) {
  var i;
  const { style: s } = t, o = {};
  for (const r in s)
    (I(s[r]) || e.style && I(e.style[r]) || Ni(r, t) || ((i = n == null ? void 0 : n.getValue(r)) === null || i === void 0 ? void 0 : i.liveStyle) !== void 0) && (o[r] = s[r]);
  return o;
}
function ji(t, e, n) {
  const i = Cn(t, e, n);
  for (const s in t)
    if (I(t[s]) || I(e[s])) {
      const o = Tt.indexOf(s) !== -1 ? "attr" + s.charAt(0).toUpperCase() + s.substring(1) : s;
      i[o] = t[s];
    }
  return i;
}
function Pr(t, e) {
  try {
    e.dimensions = typeof t.getBBox == "function" ? t.getBBox() : t.getBoundingClientRect();
  } catch {
    e.dimensions = {
      x: 0,
      y: 0,
      width: 0,
      height: 0
    };
  }
}
const Xn = ["x", "y", "width", "height", "cx", "cy", "r"], Vr = {
  useVisualState: Ai({
    scrapeMotionValuesFromProps: ji,
    createRenderState: Ei,
    onUpdate: ({ props: t, prevProps: e, current: n, renderState: i, latestValues: s }) => {
      if (!n)
        return;
      let o = !!t.drag;
      if (!o) {
        for (const a in s)
          if (dt.has(a)) {
            o = !0;
            break;
          }
      }
      if (!o)
        return;
      let r = !e;
      if (e)
        for (let a = 0; a < Xn.length; a++) {
          const l = Xn[a];
          t[l] !== e[l] && (r = !0);
        }
      r && S.read(() => {
        Pr(n, i), S.render(() => {
          gn(i, s, vn(n.tagName), t.transformTemplate), Oi(n, i);
        });
      });
    }
  })
}, Sr = {
  useVisualState: Ai({
    scrapeMotionValuesFromProps: Cn,
    createRenderState: yn
  })
};
function ki(t, e, n) {
  for (const i in e)
    !I(e[i]) && !Ni(i, n) && (t[i] = e[i]);
}
function Ar({ transformTemplate: t }, e) {
  return ae(() => {
    const n = yn();
    return mn(n, e, t), Object.assign({}, n.vars, n.style);
  }, [e]);
}
function Lr(t, e) {
  const n = t.style || {}, i = {};
  return ki(i, n, t), Object.assign(i, Ar(t, e)), i;
}
function Mr(t, e) {
  const n = {}, i = Lr(t, e);
  return t.drag && t.dragListener !== !1 && (n.draggable = !1, i.userSelect = i.WebkitUserSelect = i.WebkitTouchCallout = "none", i.touchAction = t.drag === !0 ? "none" : `pan-${t.drag === "x" ? "y" : "x"}`), t.tabIndex === void 0 && (t.onTap || t.onTapStart || t.whileTap) && (n.tabIndex = 0), n.style = i, n;
}
function Dr(t, e, n, i) {
  const s = ae(() => {
    const o = Ei();
    return gn(o, e, vn(i), t.transformTemplate), {
      ...o.attrs,
      style: { ...o.style }
    };
  }, [e]);
  if (t.style) {
    const o = {};
    ki(o, t.style, t), s.style = { ...o, ...s.style };
  }
  return s;
}
function Er(t = !1) {
  return (n, i, s, { latestValues: o }, r) => {
    const l = (hn(n) ? Dr : Mr)(i, o, r, n), c = K0(i, typeof n == "string", t), u = n !== ci ? { ...c, ...l, ref: s } : {}, { children: h } = i, d = ae(() => I(h) ? h.get() : h, [h]);
    return ai(n, {
      ...u,
      children: d
    });
  };
}
function Rr(t, e) {
  return function(i, { forwardMotionProps: s } = { forwardMotionProps: !1 }) {
    const r = {
      ...hn(i) ? Vr : Sr,
      preloadedFeatures: t,
      useRender: Er(s),
      createVisualElement: e,
      Component: i
    };
    return er(r);
  };
}
function Bi(t, e) {
  if (!Array.isArray(e))
    return !1;
  const n = e.length;
  if (n !== t.length)
    return !1;
  for (let i = 0; i < n; i++)
    if (e[i] !== t[i])
      return !1;
  return !0;
}
function fe(t, e, n) {
  const i = t.getProps();
  return dn(i, e, n !== void 0 ? n : i.custom, t);
}
const Fr = /* @__PURE__ */ on(() => window.ScrollTimeline !== void 0);
class Or {
  constructor(e) {
    this.stop = () => this.runAll("stop"), this.animations = e.filter(Boolean);
  }
  get finished() {
    return Promise.all(this.animations.map((e) => "finished" in e ? e.finished : e));
  }
  /**
   * TODO: Filter out cancelled or stopped animations before returning
   */
  getAll(e) {
    return this.animations[0][e];
  }
  setAll(e, n) {
    for (let i = 0; i < this.animations.length; i++)
      this.animations[i][e] = n;
  }
  attachTimeline(e, n) {
    const i = this.animations.map((s) => {
      if (Fr() && s.attachTimeline)
        return s.attachTimeline(e);
      if (typeof n == "function")
        return n(s);
    });
    return () => {
      i.forEach((s, o) => {
        s && s(), this.animations[o].stop();
      });
    };
  }
  get time() {
    return this.getAll("time");
  }
  set time(e) {
    this.setAll("time", e);
  }
  get speed() {
    return this.getAll("speed");
  }
  set speed(e) {
    this.setAll("speed", e);
  }
  get startTime() {
    return this.getAll("startTime");
  }
  get duration() {
    let e = 0;
    for (let n = 0; n < this.animations.length; n++)
      e = Math.max(e, this.animations[n].duration);
    return e;
  }
  runAll(e) {
    this.animations.forEach((n) => n[e]());
  }
  flatten() {
    this.runAll("flatten");
  }
  play() {
    this.runAll("play");
  }
  pause() {
    this.runAll("pause");
  }
  cancel() {
    this.runAll("cancel");
  }
  complete() {
    this.runAll("complete");
  }
}
class Nr extends Or {
  then(e, n) {
    return Promise.all(this.animations).then(e).catch(n);
  }
}
function xn(t, e) {
  return t ? t[e] || t.default || t : void 0;
}
const ke = 2e4;
function Ii(t) {
  let e = 0;
  const n = 50;
  let i = t.next(e);
  for (; !i.done && e < ke; )
    e += n, i = t.next(e);
  return e >= ke ? 1 / 0 : e;
}
function bn(t) {
  return typeof t == "function";
}
function Jn(t, e) {
  t.timeline = e, t.onfinish = null;
}
const wn = (t) => Array.isArray(t) && typeof t[0] == "number", jr = {
  linearEasing: void 0
};
function kr(t, e) {
  const n = /* @__PURE__ */ on(t);
  return () => {
    var i;
    return (i = jr[e]) !== null && i !== void 0 ? i : n();
  };
}
const ne = /* @__PURE__ */ kr(() => {
  try {
    document.createElement("div").animate({ opacity: 0 }, { easing: "linear(0, 1)" });
  } catch {
    return !1;
  }
  return !0;
}, "linearEasing"), _i = (t, e, n = 10) => {
  let i = "";
  const s = Math.max(Math.round(e / n), 2);
  for (let o = 0; o < s; o++)
    i += t(/* @__PURE__ */ vt(0, s - 1, o)) + ", ";
  return `linear(${i.substring(0, i.length - 2)})`;
};
function Hi(t) {
  return !!(typeof t == "function" && ne() || !t || typeof t == "string" && (t in Be || ne()) || wn(t) || Array.isArray(t) && t.every(Hi));
}
const Mt = ([t, e, n, i]) => `cubic-bezier(${t}, ${e}, ${n}, ${i})`, Be = {
  linear: "linear",
  ease: "ease",
  easeIn: "ease-in",
  easeOut: "ease-out",
  easeInOut: "ease-in-out",
  circIn: /* @__PURE__ */ Mt([0, 0.65, 0.55, 1]),
  circOut: /* @__PURE__ */ Mt([0.55, 0, 1, 0.45]),
  backIn: /* @__PURE__ */ Mt([0.31, 0.01, 0.66, -0.59]),
  backOut: /* @__PURE__ */ Mt([0.33, 1.53, 0.69, 0.99])
};
function Ui(t, e) {
  if (t)
    return typeof t == "function" && ne() ? _i(t, e) : wn(t) ? Mt(t) : Array.isArray(t) ? t.map((n) => Ui(n, e) || Be.easeOut) : Be[t];
}
const z = {
  x: !1,
  y: !1
};
function $i() {
  return z.x || z.y;
}
function Br(t, e, n) {
  var i;
  if (t instanceof Element)
    return [t];
  if (typeof t == "string") {
    let s = document;
    const o = (i = void 0) !== null && i !== void 0 ? i : s.querySelectorAll(t);
    return o ? Array.from(o) : [];
  }
  return Array.from(t);
}
function Zi(t, e) {
  const n = Br(t), i = new AbortController(), s = {
    passive: !0,
    ...e,
    signal: i.signal
  };
  return [n, s, () => i.abort()];
}
function Qn(t) {
  return (e) => {
    e.pointerType === "touch" || $i() || t(e);
  };
}
function Ir(t, e, n = {}) {
  const [i, s, o] = Zi(t, n), r = Qn((a) => {
    const { target: l } = a, c = e(a);
    if (typeof c != "function" || !l)
      return;
    const u = Qn((h) => {
      c(h), l.removeEventListener("pointerleave", u);
    });
    l.addEventListener("pointerleave", u, s);
  });
  return i.forEach((a) => {
    a.addEventListener("pointerenter", r, s);
  }), o;
}
const Wi = (t, e) => e ? t === e ? !0 : Wi(t, e.parentElement) : !1, Tn = (t) => t.pointerType === "mouse" ? typeof t.button != "number" || t.button <= 0 : t.isPrimary !== !1, _r = /* @__PURE__ */ new Set([
  "BUTTON",
  "INPUT",
  "SELECT",
  "TEXTAREA",
  "A"
]);
function Hr(t) {
  return _r.has(t.tagName) || t.tabIndex !== -1;
}
const Dt = /* @__PURE__ */ new WeakSet();
function t2(t) {
  return (e) => {
    e.key === "Enter" && t(e);
  };
}
function xe(t, e) {
  t.dispatchEvent(new PointerEvent("pointer" + e, { isPrimary: !0, bubbles: !0 }));
}
const Ur = (t, e) => {
  const n = t.currentTarget;
  if (!n)
    return;
  const i = t2(() => {
    if (Dt.has(n))
      return;
    xe(n, "down");
    const s = t2(() => {
      xe(n, "up");
    }), o = () => xe(n, "cancel");
    n.addEventListener("keyup", s, e), n.addEventListener("blur", o, e);
  });
  n.addEventListener("keydown", i, e), n.addEventListener("blur", () => n.removeEventListener("keydown", i), e);
};
function e2(t) {
  return Tn(t) && !$i();
}
function $r(t, e, n = {}) {
  const [i, s, o] = Zi(t, n), r = (a) => {
    const l = a.currentTarget;
    if (!e2(a) || Dt.has(l))
      return;
    Dt.add(l);
    const c = e(a), u = (f, p) => {
      window.removeEventListener("pointerup", h), window.removeEventListener("pointercancel", d), !(!e2(f) || !Dt.has(l)) && (Dt.delete(l), typeof c == "function" && c(f, { success: p }));
    }, h = (f) => {
      u(f, n.useGlobalTarget || Wi(l, f.target));
    }, d = (f) => {
      u(f, !1);
    };
    window.addEventListener("pointerup", h, s), window.addEventListener("pointercancel", d, s);
  };
  return i.forEach((a) => {
    !Hr(a) && a.getAttribute("tabindex") === null && (a.tabIndex = 0), (n.useGlobalTarget ? window : a).addEventListener("pointerdown", r, s), a.addEventListener("focus", (c) => Ur(c, s), s);
  }), o;
}
function Zr(t) {
  return t === "x" || t === "y" ? z[t] ? null : (z[t] = !0, () => {
    z[t] = !1;
  }) : z.x || z.y ? null : (z.x = z.y = !0, () => {
    z.x = z.y = !1;
  });
}
const Ki = /* @__PURE__ */ new Set([
  "width",
  "height",
  "top",
  "left",
  "right",
  "bottom",
  ...Tt
]);
let Jt;
function Wr() {
  Jt = void 0;
}
const J = {
  now: () => (Jt === void 0 && J.set(j.isProcessing || _0.useManualTiming ? j.timestamp : performance.now()), Jt),
  set: (t) => {
    Jt = t, queueMicrotask(Wr);
  }
};
function Pn(t, e) {
  t.indexOf(e) === -1 && t.push(e);
}
function Vn(t, e) {
  const n = t.indexOf(e);
  n > -1 && t.splice(n, 1);
}
class Sn {
  constructor() {
    this.subscriptions = [];
  }
  add(e) {
    return Pn(this.subscriptions, e), () => Vn(this.subscriptions, e);
  }
  notify(e, n, i) {
    const s = this.subscriptions.length;
    if (s)
      if (s === 1)
        this.subscriptions[0](e, n, i);
      else
        for (let o = 0; o < s; o++) {
          const r = this.subscriptions[o];
          r && r(e, n, i);
        }
  }
  getSize() {
    return this.subscriptions.length;
  }
  clear() {
    this.subscriptions.length = 0;
  }
}
function Gi(t, e) {
  return e ? t * (1e3 / e) : 0;
}
const n2 = 30, Kr = (t) => !isNaN(parseFloat(t));
class Gr {
  /**
   * @param init - The initiating value
   * @param config - Optional configuration options
   *
   * -  `transformer`: A function to transform incoming values with.
   *
   * @internal
   */
  constructor(e, n = {}) {
    this.version = "11.18.2", this.canTrackVelocity = null, this.events = {}, this.updateAndNotify = (i, s = !0) => {
      const o = J.now();
      this.updatedAt !== o && this.setPrevFrameValue(), this.prev = this.current, this.setCurrent(i), this.current !== this.prev && this.events.change && this.events.change.notify(this.current), s && this.events.renderRequest && this.events.renderRequest.notify(this.current);
    }, this.hasAnimated = !1, this.setCurrent(e), this.owner = n.owner;
  }
  setCurrent(e) {
    this.current = e, this.updatedAt = J.now(), this.canTrackVelocity === null && e !== void 0 && (this.canTrackVelocity = Kr(this.current));
  }
  setPrevFrameValue(e = this.current) {
    this.prevFrameValue = e, this.prevUpdatedAt = this.updatedAt;
  }
  /**
   * Adds a function that will be notified when the `MotionValue` is updated.
   *
   * It returns a function that, when called, will cancel the subscription.
   *
   * When calling `onChange` inside a React component, it should be wrapped with the
   * `useEffect` hook. As it returns an unsubscribe function, this should be returned
   * from the `useEffect` function to ensure you don't add duplicate subscribers..
   *
   * ```jsx
   * export const MyComponent = () => {
   *   const x = useMotionValue(0)
   *   const y = useMotionValue(0)
   *   const opacity = useMotionValue(1)
   *
   *   useEffect(() => {
   *     function updateOpacity() {
   *       const maxXY = Math.max(x.get(), y.get())
   *       const newOpacity = transform(maxXY, [0, 100], [1, 0])
   *       opacity.set(newOpacity)
   *     }
   *
   *     const unsubscribeX = x.on("change", updateOpacity)
   *     const unsubscribeY = y.on("change", updateOpacity)
   *
   *     return () => {
   *       unsubscribeX()
   *       unsubscribeY()
   *     }
   *   }, [])
   *
   *   return <motion.div style={{ x }} />
   * }
   * ```
   *
   * @param subscriber - A function that receives the latest value.
   * @returns A function that, when called, will cancel this subscription.
   *
   * @deprecated
   */
  onChange(e) {
    return process.env.NODE_ENV !== "production" && ce(!1, 'value.onChange(callback) is deprecated. Switch to value.on("change", callback).'), this.on("change", e);
  }
  on(e, n) {
    this.events[e] || (this.events[e] = new Sn());
    const i = this.events[e].add(n);
    return e === "change" ? () => {
      i(), S.read(() => {
        this.events.change.getSize() || this.stop();
      });
    } : i;
  }
  clearListeners() {
    for (const e in this.events)
      this.events[e].clear();
  }
  /**
   * Attaches a passive effect to the `MotionValue`.
   *
   * @internal
   */
  attach(e, n) {
    this.passiveEffect = e, this.stopPassiveEffect = n;
  }
  /**
   * Sets the state of the `MotionValue`.
   *
   * @remarks
   *
   * ```jsx
   * const x = useMotionValue(0)
   * x.set(10)
   * ```
   *
   * @param latest - Latest value to set.
   * @param render - Whether to notify render subscribers. Defaults to `true`
   *
   * @public
   */
  set(e, n = !0) {
    !n || !this.passiveEffect ? this.updateAndNotify(e, n) : this.passiveEffect(e, this.updateAndNotify);
  }
  setWithVelocity(e, n, i) {
    this.set(n), this.prev = void 0, this.prevFrameValue = e, this.prevUpdatedAt = this.updatedAt - i;
  }
  /**
   * Set the state of the `MotionValue`, stopping any active animations,
   * effects, and resets velocity to `0`.
   */
  jump(e, n = !0) {
    this.updateAndNotify(e), this.prev = e, this.prevUpdatedAt = this.prevFrameValue = void 0, n && this.stop(), this.stopPassiveEffect && this.stopPassiveEffect();
  }
  /**
   * Returns the latest state of `MotionValue`
   *
   * @returns - The latest state of `MotionValue`
   *
   * @public
   */
  get() {
    return this.current;
  }
  /**
   * @public
   */
  getPrevious() {
    return this.prev;
  }
  /**
   * Returns the latest velocity of `MotionValue`
   *
   * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.
   *
   * @public
   */
  getVelocity() {
    const e = J.now();
    if (!this.canTrackVelocity || this.prevFrameValue === void 0 || e - this.updatedAt > n2)
      return 0;
    const n = Math.min(this.updatedAt - this.prevUpdatedAt, n2);
    return Gi(parseFloat(this.current) - parseFloat(this.prevFrameValue), n);
  }
  /**
   * Registers a new animation to control this `MotionValue`. Only one
   * animation can drive a `MotionValue` at one time.
   *
   * ```jsx
   * value.start()
   * ```
   *
   * @param animation - A function that starts the provided animation
   *
   * @internal
   */
  start(e) {
    return this.stop(), new Promise((n) => {
      this.hasAnimated = !0, this.animation = e(n), this.events.animationStart && this.events.animationStart.notify();
    }).then(() => {
      this.events.animationComplete && this.events.animationComplete.notify(), this.clearAnimation();
    });
  }
  /**
   * Stop the currently active animation.
   *
   * @public
   */
  stop() {
    this.animation && (this.animation.stop(), this.events.animationCancel && this.events.animationCancel.notify()), this.clearAnimation();
  }
  /**
   * Returns `true` if this value is currently animating.
   *
   * @public
   */
  isAnimating() {
    return !!this.animation;
  }
  clearAnimation() {
    delete this.animation;
  }
  /**
   * Destroy and clean up subscribers to this `MotionValue`.
   *
   * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically
   * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually
   * created a `MotionValue` via the `motionValue` function.
   *
   * @public
   */
  destroy() {
    this.clearListeners(), this.stop(), this.stopPassiveEffect && this.stopPassiveEffect();
  }
}
function Bt(t, e) {
  return new Gr(t, e);
}
function zr(t, e, n) {
  t.hasValue(e) ? t.getValue(e).set(n) : t.addValue(e, Bt(n));
}
function qr(t, e) {
  const n = fe(t, e);
  let { transitionEnd: i = {}, transition: s = {}, ...o } = n || {};
  o = { ...o, ...i };
  for (const r in o) {
    const a = ar(o[r]);
    zr(t, r, a);
  }
}
function Yr(t) {
  return !!(I(t) && t.add);
}
function Ie(t, e) {
  const n = t.getValue("willChange");
  if (Yr(n))
    return n.add(e);
}
function zi(t) {
  return t.props[Pi];
}
const qi = (t, e, n) => (((1 - 3 * n + 3 * e) * t + (3 * n - 6 * e)) * t + 3 * e) * t, Xr = 1e-7, Jr = 12;
function Qr(t, e, n, i, s) {
  let o, r, a = 0;
  do
    r = e + (n - e) / 2, o = qi(r, i, s) - t, o > 0 ? n = r : e = r;
  while (Math.abs(o) > Xr && ++a < Jr);
  return r;
}
function $t(t, e, n, i) {
  if (t === e && n === i)
    return $;
  const s = (o) => Qr(o, 0, 1, t, n);
  return (o) => o === 0 || o === 1 ? o : qi(s(o), e, i);
}
const Yi = (t) => (e) => e <= 0.5 ? t(2 * e) / 2 : (2 - t(2 * (1 - e))) / 2, Xi = (t) => (e) => 1 - t(1 - e), Ji = /* @__PURE__ */ $t(0.33, 1.53, 0.69, 0.99), An = /* @__PURE__ */ Xi(Ji), Qi = /* @__PURE__ */ Yi(An), ts = (t) => (t *= 2) < 1 ? 0.5 * An(t) : 0.5 * (2 - Math.pow(2, -10 * (t - 1))), Ln = (t) => 1 - Math.sin(Math.acos(t)), es = Xi(Ln), ns = Yi(Ln), is = (t) => /^0[^.\s]+$/u.test(t);
function to(t) {
  return typeof t == "number" ? t === 0 : t !== null ? t === "none" || t === "0" || is(t) : !0;
}
const Rt = (t) => Math.round(t * 1e5) / 1e5, Mn = /-?(?:\d+(?:\.\d+)?|\.\d+)/gu;
function eo(t) {
  return t == null;
}
const no = /^(?:#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\))$/iu, Dn = (t, e) => (n) => !!(typeof n == "string" && no.test(n) && n.startsWith(t) || e && !eo(n) && Object.prototype.hasOwnProperty.call(n, e)), ss = (t, e, n) => (i) => {
  if (typeof i != "string")
    return i;
  const [s, o, r, a] = i.match(Mn);
  return {
    [t]: parseFloat(s),
    [e]: parseFloat(o),
    [n]: parseFloat(r),
    alpha: a !== void 0 ? parseFloat(a) : 1
  };
}, io = (t) => et(0, 255, t), be = {
  ...Pt,
  transform: (t) => Math.round(io(t))
}, ut = {
  test: /* @__PURE__ */ Dn("rgb", "red"),
  parse: /* @__PURE__ */ ss("red", "green", "blue"),
  transform: ({ red: t, green: e, blue: n, alpha: i = 1 }) => "rgba(" + be.transform(t) + ", " + be.transform(e) + ", " + be.transform(n) + ", " + Rt(kt.transform(i)) + ")"
};
function so(t) {
  let e = "", n = "", i = "", s = "";
  return t.length > 5 ? (e = t.substring(1, 3), n = t.substring(3, 5), i = t.substring(5, 7), s = t.substring(7, 9)) : (e = t.substring(1, 2), n = t.substring(2, 3), i = t.substring(3, 4), s = t.substring(4, 5), e += e, n += n, i += i, s += s), {
    red: parseInt(e, 16),
    green: parseInt(n, 16),
    blue: parseInt(i, 16),
    alpha: s ? parseInt(s, 16) / 255 : 1
  };
}
const _e = {
  test: /* @__PURE__ */ Dn("#"),
  parse: so,
  transform: ut.transform
}, pt = {
  test: /* @__PURE__ */ Dn("hsl", "hue"),
  parse: /* @__PURE__ */ ss("hue", "saturation", "lightness"),
  transform: ({ hue: t, saturation: e, lightness: n, alpha: i = 1 }) => "hsla(" + Math.round(t) + ", " + X.transform(Rt(e)) + ", " + X.transform(Rt(n)) + ", " + Rt(kt.transform(i)) + ")"
}, B = {
  test: (t) => ut.test(t) || _e.test(t) || pt.test(t),
  parse: (t) => ut.test(t) ? ut.parse(t) : pt.test(t) ? pt.parse(t) : _e.parse(t),
  transform: (t) => typeof t == "string" ? t : t.hasOwnProperty("red") ? ut.transform(t) : pt.transform(t)
}, ro = /(?:#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\))/giu;
function oo(t) {
  var e, n;
  return isNaN(t) && typeof t == "string" && (((e = t.match(Mn)) === null || e === void 0 ? void 0 : e.length) || 0) + (((n = t.match(ro)) === null || n === void 0 ? void 0 : n.length) || 0) > 0;
}
const rs = "number", os = "color", ao = "var", lo = "var(", i2 = "${}", co = /var\s*\(\s*--(?:[\w-]+\s*|[\w-]+\s*,(?:\s*[^)(\s]|\s*\((?:[^)(]|\([^)(]*\))*\))+\s*)\)|#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\)|-?(?:\d+(?:\.\d+)?|\.\d+)/giu;
function It(t) {
  const e = t.toString(), n = [], i = {
    color: [],
    number: [],
    var: []
  }, s = [];
  let o = 0;
  const a = e.replace(co, (l) => (B.test(l) ? (i.color.push(o), s.push(os), n.push(B.parse(l))) : l.startsWith(lo) ? (i.var.push(o), s.push(ao), n.push(l)) : (i.number.push(o), s.push(rs), n.push(parseFloat(l))), ++o, i2)).split(i2);
  return { values: n, split: a, indexes: i, types: s };
}
function as(t) {
  return It(t).values;
}
function ls(t) {
  const { split: e, types: n } = It(t), i = e.length;
  return (s) => {
    let o = "";
    for (let r = 0; r < i; r++)
      if (o += e[r], s[r] !== void 0) {
        const a = n[r];
        a === rs ? o += Rt(s[r]) : a === os ? o += B.transform(s[r]) : o += s[r];
      }
    return o;
  };
}
const uo = (t) => typeof t == "number" ? 0 : t;
function ho(t) {
  const e = as(t);
  return ls(t)(e.map(uo));
}
const rt = {
  test: oo,
  parse: as,
  createTransformer: ls,
  getAnimatableNone: ho
}, fo = /* @__PURE__ */ new Set(["brightness", "contrast", "saturate", "opacity"]);
function po(t) {
  const [e, n] = t.slice(0, -1).split("(");
  if (e === "drop-shadow")
    return t;
  const [i] = n.match(Mn) || [];
  if (!i)
    return t;
  const s = n.replace(i, "");
  let o = fo.has(e) ? 1 : 0;
  return i !== n && (o *= 100), e + "(" + o + s + ")";
}
const mo = /\b([a-z-]*)\(.*?\)/gu, He = {
  ...rt,
  getAnimatableNone: (t) => {
    const e = t.match(mo);
    return e ? e.map(po).join(" ") : t;
  }
}, go = {
  ...pn,
  // Color props
  color: B,
  backgroundColor: B,
  outlineColor: B,
  fill: B,
  stroke: B,
  // Border props
  borderColor: B,
  borderTopColor: B,
  borderRightColor: B,
  borderBottomColor: B,
  borderLeftColor: B,
  filter: He,
  WebkitFilter: He
}, En = (t) => go[t];
function cs(t, e) {
  let n = En(t);
  return n !== He && (n = rt), n.getAnimatableNone ? n.getAnimatableNone(e) : void 0;
}
const yo = /* @__PURE__ */ new Set(["auto", "none", "0"]);
function vo(t, e, n) {
  let i = 0, s;
  for (; i < t.length && !s; ) {
    const o = t[i];
    typeof o == "string" && !yo.has(o) && It(o).values.length && (s = t[i]), i++;
  }
  if (s && n)
    for (const o of e)
      t[o] = cs(n, s);
}
const s2 = (t) => t === Pt || t === x, r2 = (t, e) => parseFloat(t.split(", ")[e]), o2 = (t, e) => (n, { transform: i }) => {
  if (i === "none" || !i)
    return 0;
  const s = i.match(/^matrix3d\((.+)\)$/u);
  if (s)
    return r2(s[1], e);
  {
    const o = i.match(/^matrix\((.+)\)$/u);
    return o ? r2(o[1], t) : 0;
  }
}, Co = /* @__PURE__ */ new Set(["x", "y", "z"]), xo = Tt.filter((t) => !Co.has(t));
function bo(t) {
  const e = [];
  return xo.forEach((n) => {
    const i = t.getValue(n);
    i !== void 0 && (e.push([n, i.get()]), i.set(n.startsWith("scale") ? 1 : 0));
  }), e;
}
const xt = {
  // Dimensions
  width: ({ x: t }, { paddingLeft: e = "0", paddingRight: n = "0" }) => t.max - t.min - parseFloat(e) - parseFloat(n),
  height: ({ y: t }, { paddingTop: e = "0", paddingBottom: n = "0" }) => t.max - t.min - parseFloat(e) - parseFloat(n),
  top: (t, { top: e }) => parseFloat(e),
  left: (t, { left: e }) => parseFloat(e),
  bottom: ({ y: t }, { top: e }) => parseFloat(e) + (t.max - t.min),
  right: ({ x: t }, { left: e }) => parseFloat(e) + (t.max - t.min),
  // Transform
  x: o2(4, 13),
  y: o2(5, 14)
};
xt.translateX = xt.x;
xt.translateY = xt.y;
const ht = /* @__PURE__ */ new Set();
let Ue = !1, $e = !1;
function us() {
  if ($e) {
    const t = Array.from(ht).filter((i) => i.needsMeasurement), e = new Set(t.map((i) => i.element)), n = /* @__PURE__ */ new Map();
    e.forEach((i) => {
      const s = bo(i);
      s.length && (n.set(i, s), i.render());
    }), t.forEach((i) => i.measureInitialState()), e.forEach((i) => {
      i.render();
      const s = n.get(i);
      s && s.forEach(([o, r]) => {
        var a;
        (a = i.getValue(o)) === null || a === void 0 || a.set(r);
      });
    }), t.forEach((i) => i.measureEndState()), t.forEach((i) => {
      i.suspendedScrollY !== void 0 && window.scrollTo(0, i.suspendedScrollY);
    });
  }
  $e = !1, Ue = !1, ht.forEach((t) => t.complete()), ht.clear();
}
function hs() {
  ht.forEach((t) => {
    t.readKeyframes(), t.needsMeasurement && ($e = !0);
  });
}
function wo() {
  hs(), us();
}
class Rn {
  constructor(e, n, i, s, o, r = !1) {
    this.isComplete = !1, this.isAsync = !1, this.needsMeasurement = !1, this.isScheduled = !1, this.unresolvedKeyframes = [...e], this.onComplete = n, this.name = i, this.motionValue = s, this.element = o, this.isAsync = r;
  }
  scheduleResolve() {
    this.isScheduled = !0, this.isAsync ? (ht.add(this), Ue || (Ue = !0, S.read(hs), S.resolveKeyframes(us))) : (this.readKeyframes(), this.complete());
  }
  readKeyframes() {
    const { unresolvedKeyframes: e, name: n, element: i, motionValue: s } = this;
    for (let o = 0; o < e.length; o++)
      if (e[o] === null)
        if (o === 0) {
          const r = s == null ? void 0 : s.get(), a = e[e.length - 1];
          if (r !== void 0)
            e[0] = r;
          else if (i && n) {
            const l = i.readValue(n, a);
            l != null && (e[0] = l);
          }
          e[0] === void 0 && (e[0] = a), s && r === void 0 && s.set(e[0]);
        } else
          e[o] = e[o - 1];
  }
  setFinalKeyframe() {
  }
  measureInitialState() {
  }
  renderEndStyles() {
  }
  measureEndState() {
  }
  complete() {
    this.isComplete = !0, this.onComplete(this.unresolvedKeyframes, this.finalKeyframe), ht.delete(this);
  }
  cancel() {
    this.isComplete || (this.isScheduled = !1, ht.delete(this));
  }
  resume() {
    this.isComplete || this.scheduleResolve();
  }
}
const ds = (t) => /^-?(?:\d+(?:\.\d+)?|\.\d+)$/u.test(t), To = (
  // eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words
  /^var\(--(?:([\w-]+)|([\w-]+), ?([a-zA-Z\d ()%#.,-]+))\)/u
);
function Po(t) {
  const e = To.exec(t);
  if (!e)
    return [,];
  const [, n, i, s] = e;
  return [`--${n ?? i}`, s];
}
const Vo = 4;
function fs(t, e, n = 1) {
  it(n <= Vo, `Max CSS variable fallback depth detected in property "${t}". This may indicate a circular fallback dependency.`);
  const [i, s] = Po(t);
  if (!i)
    return;
  const o = window.getComputedStyle(e).getPropertyValue(i);
  if (o) {
    const r = o.trim();
    return ds(r) ? parseFloat(r) : r;
  }
  return fn(s) ? fs(s, e, n + 1) : s;
}
const ps = (t) => (e) => e.test(t), So = {
  test: (t) => t === "auto",
  parse: (t) => t
}, ms = [Pt, x, X, nt, fr, dr, So], a2 = (t) => ms.find(ps(t));
class gs extends Rn {
  constructor(e, n, i, s, o) {
    super(e, n, i, s, o, !0);
  }
  readKeyframes() {
    const { unresolvedKeyframes: e, element: n, name: i } = this;
    if (!n || !n.current)
      return;
    super.readKeyframes();
    for (let l = 0; l < e.length; l++) {
      let c = e[l];
      if (typeof c == "string" && (c = c.trim(), fn(c))) {
        const u = fs(c, n.current);
        u !== void 0 && (e[l] = u), l === e.length - 1 && (this.finalKeyframe = c);
      }
    }
    if (this.resolveNoneKeyframes(), !Ki.has(i) || e.length !== 2)
      return;
    const [s, o] = e, r = a2(s), a = a2(o);
    if (r !== a)
      if (s2(r) && s2(a))
        for (let l = 0; l < e.length; l++) {
          const c = e[l];
          typeof c == "string" && (e[l] = parseFloat(c));
        }
      else
        this.needsMeasurement = !0;
  }
  resolveNoneKeyframes() {
    const { unresolvedKeyframes: e, name: n } = this, i = [];
    for (let s = 0; s < e.length; s++)
      to(e[s]) && i.push(s);
    i.length && vo(e, i, n);
  }
  measureInitialState() {
    const { element: e, unresolvedKeyframes: n, name: i } = this;
    if (!e || !e.current)
      return;
    i === "height" && (this.suspendedScrollY = window.pageYOffset), this.measuredOrigin = xt[i](e.measureViewportBox(), window.getComputedStyle(e.current)), n[0] = this.measuredOrigin;
    const s = n[n.length - 1];
    s !== void 0 && e.getValue(i, s).jump(s, !1);
  }
  measureEndState() {
    var e;
    const { element: n, name: i, unresolvedKeyframes: s } = this;
    if (!n || !n.current)
      return;
    const o = n.getValue(i);
    o && o.jump(this.measuredOrigin, !1);
    const r = s.length - 1, a = s[r];
    s[r] = xt[i](n.measureViewportBox(), window.getComputedStyle(n.current)), a !== null && this.finalKeyframe === void 0 && (this.finalKeyframe = a), !((e = this.removedTransforms) === null || e === void 0) && e.length && this.removedTransforms.forEach(([l, c]) => {
      n.getValue(l).set(c);
    }), this.resolveNoneKeyframes();
  }
}
const l2 = (t, e) => e === "zIndex" ? !1 : !!(typeof t == "number" || Array.isArray(t) || typeof t == "string" && // It's animatable if we have a string
(rt.test(t) || t === "0") && // And it contains numbers and/or colors
!t.startsWith("url("));
function Ao(t) {
  const e = t[0];
  if (t.length === 1)
    return !0;
  for (let n = 0; n < t.length; n++)
    if (t[n] !== e)
      return !0;
}
function Lo(t, e, n, i) {
  const s = t[0];
  if (s === null)
    return !1;
  if (e === "display" || e === "visibility")
    return !0;
  const o = t[t.length - 1], r = l2(s, e), a = l2(o, e);
  return wt(r === a, `You are trying to animate ${e} from "${s}" to "${o}". ${s} is not an animatable value - to enable this animation set ${s} to a value animatable to ${o} via the \`style\` property.`), !r || !a ? !1 : Ao(t) || (n === "spring" || bn(n)) && i;
}
const Mo = (t) => t !== null;
function pe(t, { repeat: e, repeatType: n = "loop" }, i) {
  const s = t.filter(Mo), o = e && n !== "loop" && e % 2 === 1 ? 0 : s.length - 1;
  return !o || i === void 0 ? s[o] : i;
}
const Do = 40;
class ys {
  constructor({ autoplay: e = !0, delay: n = 0, type: i = "keyframes", repeat: s = 0, repeatDelay: o = 0, repeatType: r = "loop", ...a }) {
    this.isStopped = !1, this.hasAttemptedResolve = !1, this.createdAt = J.now(), this.options = {
      autoplay: e,
      delay: n,
      type: i,
      repeat: s,
      repeatDelay: o,
      repeatType: r,
      ...a
    }, this.updateFinishedPromise();
  }
  /**
   * This method uses the createdAt and resolvedAt to calculate the
   * animation startTime. *Ideally*, we would use the createdAt time as t=0
   * as the following frame would then be the first frame of the animation in
   * progress, which would feel snappier.
   *
   * However, if there's a delay (main thread work) between the creation of
   * the animation and the first commited frame, we prefer to use resolvedAt
   * to avoid a sudden jump into the animation.
   */
  calcStartTime() {
    return this.resolvedAt ? this.resolvedAt - this.createdAt > Do ? this.resolvedAt : this.createdAt : this.createdAt;
  }
  /**
   * A getter for resolved data. If keyframes are not yet resolved, accessing
   * this.resolved will synchronously flush all pending keyframe resolvers.
   * This is a deoptimisation, but at its worst still batches read/writes.
   */
  get resolved() {
    return !this._resolved && !this.hasAttemptedResolve && wo(), this._resolved;
  }
  /**
   * A method to be called when the keyframes resolver completes. This method
   * will check if its possible to run the animation and, if not, skip it.
   * Otherwise, it will call initPlayback on the implementing class.
   */
  onKeyframesResolved(e, n) {
    this.resolvedAt = J.now(), this.hasAttemptedResolve = !0;
    const { name: i, type: s, velocity: o, delay: r, onComplete: a, onUpdate: l, isGenerator: c } = this.options;
    if (!c && !Lo(e, i, s, o))
      if (r)
        this.options.duration = 0;
      else {
        l && l(pe(e, this.options, n)), a && a(), this.resolveFinishedPromise();
        return;
      }
    const u = this.initPlayback(e, n);
    u !== !1 && (this._resolved = {
      keyframes: e,
      finalKeyframe: n,
      ...u
    }, this.onPostResolved());
  }
  onPostResolved() {
  }
  /**
   * Allows the returned animation to be awaited or promise-chained. Currently
   * resolves when the animation finishes at all but in a future update could/should
   * reject if its cancels.
   */
  then(e, n) {
    return this.currentFinishedPromise.then(e, n);
  }
  flatten() {
    this.options.type = "keyframes", this.options.ease = "linear";
  }
  updateFinishedPromise() {
    this.currentFinishedPromise = new Promise((e) => {
      this.resolveFinishedPromise = e;
    });
  }
}
const D = (t, e, n) => t + (e - t) * n;
function we(t, e, n) {
  return n < 0 && (n += 1), n > 1 && (n -= 1), n < 1 / 6 ? t + (e - t) * 6 * n : n < 1 / 2 ? e : n < 2 / 3 ? t + (e - t) * (2 / 3 - n) * 6 : t;
}
function Eo({ hue: t, saturation: e, lightness: n, alpha: i }) {
  t /= 360, e /= 100, n /= 100;
  let s = 0, o = 0, r = 0;
  if (!e)
    s = o = r = n;
  else {
    const a = n < 0.5 ? n * (1 + e) : n + e - n * e, l = 2 * n - a;
    s = we(l, a, t + 1 / 3), o = we(l, a, t), r = we(l, a, t - 1 / 3);
  }
  return {
    red: Math.round(s * 255),
    green: Math.round(o * 255),
    blue: Math.round(r * 255),
    alpha: i
  };
}
function ie(t, e) {
  return (n) => n > 0 ? e : t;
}
const Te = (t, e, n) => {
  const i = t * t, s = n * (e * e - i) + i;
  return s < 0 ? 0 : Math.sqrt(s);
}, Ro = [_e, ut, pt], Fo = (t) => Ro.find((e) => e.test(t));
function c2(t) {
  const e = Fo(t);
  if (wt(!!e, `'${t}' is not an animatable color. Use the equivalent color code instead.`), !e)
    return !1;
  let n = e.parse(t);
  return e === pt && (n = Eo(n)), n;
}
const u2 = (t, e) => {
  const n = c2(t), i = c2(e);
  if (!n || !i)
    return ie(t, e);
  const s = { ...n };
  return (o) => (s.red = Te(n.red, i.red, o), s.green = Te(n.green, i.green, o), s.blue = Te(n.blue, i.blue, o), s.alpha = D(n.alpha, i.alpha, o), ut.transform(s));
}, Oo = (t, e) => (n) => e(t(n)), Zt = (...t) => t.reduce(Oo), Ze = /* @__PURE__ */ new Set(["none", "hidden"]);
function No(t, e) {
  return Ze.has(t) ? (n) => n <= 0 ? t : e : (n) => n >= 1 ? e : t;
}
function jo(t, e) {
  return (n) => D(t, e, n);
}
function Fn(t) {
  return typeof t == "number" ? jo : typeof t == "string" ? fn(t) ? ie : B.test(t) ? u2 : Io : Array.isArray(t) ? vs : typeof t == "object" ? B.test(t) ? u2 : ko : ie;
}
function vs(t, e) {
  const n = [...t], i = n.length, s = t.map((o, r) => Fn(o)(o, e[r]));
  return (o) => {
    for (let r = 0; r < i; r++)
      n[r] = s[r](o);
    return n;
  };
}
function ko(t, e) {
  const n = { ...t, ...e }, i = {};
  for (const s in n)
    t[s] !== void 0 && e[s] !== void 0 && (i[s] = Fn(t[s])(t[s], e[s]));
  return (s) => {
    for (const o in i)
      n[o] = i[o](s);
    return n;
  };
}
function Bo(t, e) {
  var n;
  const i = [], s = { color: 0, var: 0, number: 0 };
  for (let o = 0; o < e.values.length; o++) {
    const r = e.types[o], a = t.indexes[r][s[r]], l = (n = t.values[a]) !== null && n !== void 0 ? n : 0;
    i[o] = l, s[r]++;
  }
  return i;
}
const Io = (t, e) => {
  const n = rt.createTransformer(e), i = It(t), s = It(e);
  return i.indexes.var.length === s.indexes.var.length && i.indexes.color.length === s.indexes.color.length && i.indexes.number.length >= s.indexes.number.length ? Ze.has(t) && !s.values.length || Ze.has(e) && !i.values.length ? No(t, e) : Zt(vs(Bo(i, s), s.values), n) : (wt(!0, `Complex values '${t}' and '${e}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`), ie(t, e));
};
function Cs(t, e, n) {
  return typeof t == "number" && typeof e == "number" && typeof n == "number" ? D(t, e, n) : Fn(t)(t, e);
}
const _o = 5;
function xs(t, e, n) {
  const i = Math.max(e - _o, 0);
  return Gi(n - t(i), e - i);
}
const M = {
  // Default spring physics
  stiffness: 100,
  damping: 10,
  mass: 1,
  velocity: 0,
  // Default duration/bounce-based options
  duration: 800,
  // in ms
  bounce: 0.3,
  visualDuration: 0.3,
  // in seconds
  // Rest thresholds
  restSpeed: {
    granular: 0.01,
    default: 2
  },
  restDelta: {
    granular: 5e-3,
    default: 0.5
  },
  // Limits
  minDuration: 0.01,
  // in seconds
  maxDuration: 10,
  // in seconds
  minDamping: 0.05,
  maxDamping: 1
}, h2 = 1e-3;
function Ho({ duration: t = M.duration, bounce: e = M.bounce, velocity: n = M.velocity, mass: i = M.mass }) {
  let s, o;
  wt(t <= /* @__PURE__ */ Y(M.maxDuration), "Spring duration must be 10 seconds or less");
  let r = 1 - e;
  r = et(M.minDamping, M.maxDamping, r), t = et(M.minDuration, M.maxDuration, /* @__PURE__ */ tt(t)), r < 1 ? (s = (c) => {
    const u = c * r, h = u * t, d = u - n, f = We(c, r), p = Math.exp(-h);
    return h2 - d / f * p;
  }, o = (c) => {
    const h = c * r * t, d = h * n + n, f = Math.pow(r, 2) * Math.pow(c, 2) * t, p = Math.exp(-h), m = We(Math.pow(c, 2), r);
    return (-s(c) + h2 > 0 ? -1 : 1) * ((d - f) * p) / m;
  }) : (s = (c) => {
    const u = Math.exp(-c * t), h = (c - n) * t + 1;
    return -1e-3 + u * h;
  }, o = (c) => {
    const u = Math.exp(-c * t), h = (n - c) * (t * t);
    return u * h;
  });
  const a = 5 / t, l = $o(s, o, a);
  if (t = /* @__PURE__ */ Y(t), isNaN(l))
    return {
      stiffness: M.stiffness,
      damping: M.damping,
      duration: t
    };
  {
    const c = Math.pow(l, 2) * i;
    return {
      stiffness: c,
      damping: r * 2 * Math.sqrt(i * c),
      duration: t
    };
  }
}
const Uo = 12;
function $o(t, e, n) {
  let i = n;
  for (let s = 1; s < Uo; s++)
    i = i - t(i) / e(i);
  return i;
}
function We(t, e) {
  return t * Math.sqrt(1 - e * e);
}
const Zo = ["duration", "bounce"], Wo = ["stiffness", "damping", "mass"];
function d2(t, e) {
  return e.some((n) => t[n] !== void 0);
}
function Ko(t) {
  let e = {
    velocity: M.velocity,
    stiffness: M.stiffness,
    damping: M.damping,
    mass: M.mass,
    isResolvedFromDuration: !1,
    ...t
  };
  if (!d2(t, Wo) && d2(t, Zo))
    if (t.visualDuration) {
      const n = t.visualDuration, i = 2 * Math.PI / (n * 1.2), s = i * i, o = 2 * et(0.05, 1, 1 - (t.bounce || 0)) * Math.sqrt(s);
      e = {
        ...e,
        mass: M.mass,
        stiffness: s,
        damping: o
      };
    } else {
      const n = Ho(t);
      e = {
        ...e,
        ...n,
        mass: M.mass
      }, e.isResolvedFromDuration = !0;
    }
  return e;
}
function bs(t = M.visualDuration, e = M.bounce) {
  const n = typeof t != "object" ? {
    visualDuration: t,
    keyframes: [0, 1],
    bounce: e
  } : t;
  let { restSpeed: i, restDelta: s } = n;
  const o = n.keyframes[0], r = n.keyframes[n.keyframes.length - 1], a = { done: !1, value: o }, { stiffness: l, damping: c, mass: u, duration: h, velocity: d, isResolvedFromDuration: f } = Ko({
    ...n,
    velocity: -/* @__PURE__ */ tt(n.velocity || 0)
  }), p = d || 0, m = c / (2 * Math.sqrt(l * u)), y = r - o, g = /* @__PURE__ */ tt(Math.sqrt(l / u)), v = Math.abs(y) < 5;
  i || (i = v ? M.restSpeed.granular : M.restSpeed.default), s || (s = v ? M.restDelta.granular : M.restDelta.default);
  let C;
  if (m < 1) {
    const b = We(g, m);
    C = (V) => {
      const L = Math.exp(-m * g * V);
      return r - L * ((p + m * g * y) / b * Math.sin(b * V) + y * Math.cos(b * V));
    };
  } else if (m === 1)
    C = (b) => r - Math.exp(-g * b) * (y + (p + g * y) * b);
  else {
    const b = g * Math.sqrt(m * m - 1);
    C = (V) => {
      const L = Math.exp(-m * g * V), T = Math.min(b * V, 300);
      return r - L * ((p + m * g * y) * Math.sinh(T) + b * y * Math.cosh(T)) / b;
    };
  }
  const P = {
    calculatedDuration: f && h || null,
    next: (b) => {
      const V = C(b);
      if (f)
        a.done = b >= h;
      else {
        let L = 0;
        m < 1 && (L = b === 0 ? /* @__PURE__ */ Y(p) : xs(C, b, V));
        const T = Math.abs(L) <= i, k = Math.abs(r - V) <= s;
        a.done = T && k;
      }
      return a.value = a.done ? r : V, a;
    },
    toString: () => {
      const b = Math.min(Ii(P), ke), V = _i((L) => P.next(b * L).value, b, 30);
      return b + "ms " + V;
    }
  };
  return P;
}
function f2({ keyframes: t, velocity: e = 0, power: n = 0.8, timeConstant: i = 325, bounceDamping: s = 10, bounceStiffness: o = 500, modifyTarget: r, min: a, max: l, restDelta: c = 0.5, restSpeed: u }) {
  const h = t[0], d = {
    done: !1,
    value: h
  }, f = (T) => a !== void 0 && T < a || l !== void 0 && T > l, p = (T) => a === void 0 ? l : l === void 0 || Math.abs(a - T) < Math.abs(l - T) ? a : l;
  let m = n * e;
  const y = h + m, g = r === void 0 ? y : r(y);
  g !== y && (m = g - h);
  const v = (T) => -m * Math.exp(-T / i), C = (T) => g + v(T), P = (T) => {
    const k = v(T), F = C(T);
    d.done = Math.abs(k) <= c, d.value = d.done ? g : F;
  };
  let b, V;
  const L = (T) => {
    f(d.value) && (b = T, V = bs({
      keyframes: [d.value, p(d.value)],
      velocity: xs(C, T, d.value),
      // TODO: This should be passing * 1000
      damping: s,
      stiffness: o,
      restDelta: c,
      restSpeed: u
    }));
  };
  return L(0), {
    calculatedDuration: null,
    next: (T) => {
      let k = !1;
      return !V && b === void 0 && (k = !0, P(T), L(T)), b !== void 0 && T >= b ? V.next(T - b) : (!k && P(T), d);
    }
  };
}
const Go = /* @__PURE__ */ $t(0.42, 0, 1, 1), zo = /* @__PURE__ */ $t(0, 0, 0.58, 1), ws = /* @__PURE__ */ $t(0.42, 0, 0.58, 1), qo = (t) => Array.isArray(t) && typeof t[0] != "number", p2 = {
  linear: $,
  easeIn: Go,
  easeInOut: ws,
  easeOut: zo,
  circIn: Ln,
  circInOut: ns,
  circOut: es,
  backIn: An,
  backInOut: Qi,
  backOut: Ji,
  anticipate: ts
}, m2 = (t) => {
  if (wn(t)) {
    it(t.length === 4, "Cubic bezier arrays must contain four numerical values.");
    const [e, n, i, s] = t;
    return $t(e, n, i, s);
  } else if (typeof t == "string")
    return it(p2[t] !== void 0, `Invalid easing type '${t}'`), p2[t];
  return t;
};
function Yo(t, e, n) {
  const i = [], s = n || Cs, o = t.length - 1;
  for (let r = 0; r < o; r++) {
    let a = s(t[r], t[r + 1]);
    if (e) {
      const l = Array.isArray(e) ? e[r] || $ : e;
      a = Zt(l, a);
    }
    i.push(a);
  }
  return i;
}
function Xo(t, e, { clamp: n = !0, ease: i, mixer: s } = {}) {
  const o = t.length;
  if (it(o === e.length, "Both input and output ranges must be the same length"), o === 1)
    return () => e[0];
  if (o === 2 && e[0] === e[1])
    return () => e[1];
  const r = t[0] === t[1];
  t[0] > t[o - 1] && (t = [...t].reverse(), e = [...e].reverse());
  const a = Yo(e, i, s), l = a.length, c = (u) => {
    if (r && u < t[0])
      return e[0];
    let h = 0;
    if (l > 1)
      for (; h < t.length - 2 && !(u < t[h + 1]); h++)
        ;
    const d = /* @__PURE__ */ vt(t[h], t[h + 1], u);
    return a[h](d);
  };
  return n ? (u) => c(et(t[0], t[o - 1], u)) : c;
}
function Jo(t, e) {
  const n = t[t.length - 1];
  for (let i = 1; i <= e; i++) {
    const s = /* @__PURE__ */ vt(0, e, i);
    t.push(D(n, 1, s));
  }
}
function Qo(t) {
  const e = [0];
  return Jo(e, t.length - 1), e;
}
function ta(t, e) {
  return t.map((n) => n * e);
}
function ea(t, e) {
  return t.map(() => e || ws).splice(0, t.length - 1);
}
function se({ duration: t = 300, keyframes: e, times: n, ease: i = "easeInOut" }) {
  const s = qo(i) ? i.map(m2) : m2(i), o = {
    done: !1,
    value: e[0]
  }, r = ta(
    // Only use the provided offsets if they're the correct length
    // TODO Maybe we should warn here if there's a length mismatch
    n && n.length === e.length ? n : Qo(e),
    t
  ), a = Xo(r, e, {
    ease: Array.isArray(s) ? s : ea(e, s)
  });
  return {
    calculatedDuration: t,
    next: (l) => (o.value = a(l), o.done = l >= t, o)
  };
}
const na = (t) => {
  const e = ({ timestamp: n }) => t(n);
  return {
    start: () => S.update(e, !0),
    stop: () => st(e),
    /**
     * If we're processing this frame we can use the
     * framelocked timestamp to keep things in sync.
     */
    now: () => j.isProcessing ? j.timestamp : J.now()
  };
}, ia = {
  decay: f2,
  inertia: f2,
  tween: se,
  keyframes: se,
  spring: bs
}, sa = (t) => t / 100;
class On extends ys {
  constructor(e) {
    super(e), this.holdTime = null, this.cancelTime = null, this.currentTime = 0, this.playbackSpeed = 1, this.pendingPlayState = "running", this.startTime = null, this.state = "idle", this.stop = () => {
      if (this.resolver.cancel(), this.isStopped = !0, this.state === "idle")
        return;
      this.teardown();
      const { onStop: l } = this.options;
      l && l();
    };
    const { name: n, motionValue: i, element: s, keyframes: o } = this.options, r = (s == null ? void 0 : s.KeyframeResolver) || Rn, a = (l, c) => this.onKeyframesResolved(l, c);
    this.resolver = new r(o, a, n, i, s), this.resolver.scheduleResolve();
  }
  flatten() {
    super.flatten(), this._resolved && Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));
  }
  initPlayback(e) {
    const { type: n = "keyframes", repeat: i = 0, repeatDelay: s = 0, repeatType: o, velocity: r = 0 } = this.options, a = bn(n) ? n : ia[n] || se;
    let l, c;
    a !== se && typeof e[0] != "number" && (process.env.NODE_ENV !== "production" && it(e.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${e}`), l = Zt(sa, Cs(e[0], e[1])), e = [0, 100]);
    const u = a({ ...this.options, keyframes: e });
    o === "mirror" && (c = a({
      ...this.options,
      keyframes: [...e].reverse(),
      velocity: -r
    })), u.calculatedDuration === null && (u.calculatedDuration = Ii(u));
    const { calculatedDuration: h } = u, d = h + s, f = d * (i + 1) - s;
    return {
      generator: u,
      mirroredGenerator: c,
      mapPercentToKeyframes: l,
      calculatedDuration: h,
      resolvedDuration: d,
      totalDuration: f
    };
  }
  onPostResolved() {
    const { autoplay: e = !0 } = this.options;
    this.play(), this.pendingPlayState === "paused" || !e ? this.pause() : this.state = this.pendingPlayState;
  }
  tick(e, n = !1) {
    const { resolved: i } = this;
    if (!i) {
      const { keyframes: T } = this.options;
      return { done: !0, value: T[T.length - 1] };
    }
    const { finalKeyframe: s, generator: o, mirroredGenerator: r, mapPercentToKeyframes: a, keyframes: l, calculatedDuration: c, totalDuration: u, resolvedDuration: h } = i;
    if (this.startTime === null)
      return o.next(0);
    const { delay: d, repeat: f, repeatType: p, repeatDelay: m, onUpdate: y } = this.options;
    this.speed > 0 ? this.startTime = Math.min(this.startTime, e) : this.speed < 0 && (this.startTime = Math.min(e - u / this.speed, this.startTime)), n ? this.currentTime = e : this.holdTime !== null ? this.currentTime = this.holdTime : this.currentTime = Math.round(e - this.startTime) * this.speed;
    const g = this.currentTime - d * (this.speed >= 0 ? 1 : -1), v = this.speed >= 0 ? g < 0 : g > u;
    this.currentTime = Math.max(g, 0), this.state === "finished" && this.holdTime === null && (this.currentTime = u);
    let C = this.currentTime, P = o;
    if (f) {
      const T = Math.min(this.currentTime, u) / h;
      let k = Math.floor(T), F = T % 1;
      !F && T >= 1 && (F = 1), F === 1 && k--, k = Math.min(k, f + 1), !!(k % 2) && (p === "reverse" ? (F = 1 - F, m && (F -= m / h)) : p === "mirror" && (P = r)), C = et(0, 1, F) * h;
    }
    const b = v ? { done: !1, value: l[0] } : P.next(C);
    a && (b.value = a(b.value));
    let { done: V } = b;
    !v && c !== null && (V = this.speed >= 0 ? this.currentTime >= u : this.currentTime <= 0);
    const L = this.holdTime === null && (this.state === "finished" || this.state === "running" && V);
    return L && s !== void 0 && (b.value = pe(l, this.options, s)), y && y(b.value), L && this.finish(), b;
  }
  get duration() {
    const { resolved: e } = this;
    return e ? /* @__PURE__ */ tt(e.calculatedDuration) : 0;
  }
  get time() {
    return /* @__PURE__ */ tt(this.currentTime);
  }
  set time(e) {
    e = /* @__PURE__ */ Y(e), this.currentTime = e, this.holdTime !== null || this.speed === 0 ? this.holdTime = e : this.driver && (this.startTime = this.driver.now() - e / this.speed);
  }
  get speed() {
    return this.playbackSpeed;
  }
  set speed(e) {
    const n = this.playbackSpeed !== e;
    this.playbackSpeed = e, n && (this.time = /* @__PURE__ */ tt(this.currentTime));
  }
  play() {
    if (this.resolver.isScheduled || this.resolver.resume(), !this._resolved) {
      this.pendingPlayState = "running";
      return;
    }
    if (this.isStopped)
      return;
    const { driver: e = na, onPlay: n, startTime: i } = this.options;
    this.driver || (this.driver = e((o) => this.tick(o))), n && n();
    const s = this.driver.now();
    this.holdTime !== null ? this.startTime = s - this.holdTime : this.startTime ? this.state === "finished" && (this.startTime = s) : this.startTime = i ?? this.calcStartTime(), this.state === "finished" && this.updateFinishedPromise(), this.cancelTime = this.startTime, this.holdTime = null, this.state = "running", this.driver.start();
  }
  pause() {
    var e;
    if (!this._resolved) {
      this.pendingPlayState = "paused";
      return;
    }
    this.state = "paused", this.holdTime = (e = this.currentTime) !== null && e !== void 0 ? e : 0;
  }
  complete() {
    this.state !== "running" && this.play(), this.pendingPlayState = this.state = "finished", this.holdTime = null;
  }
  finish() {
    this.teardown(), this.state = "finished";
    const { onComplete: e } = this.options;
    e && e();
  }
  cancel() {
    this.cancelTime !== null && this.tick(this.cancelTime), this.teardown(), this.updateFinishedPromise();
  }
  teardown() {
    this.state = "idle", this.stopDriver(), this.resolveFinishedPromise(), this.updateFinishedPromise(), this.startTime = this.cancelTime = null, this.resolver.cancel();
  }
  stopDriver() {
    this.driver && (this.driver.stop(), this.driver = void 0);
  }
  sample(e) {
    return this.startTime = 0, this.tick(e, !0);
  }
}
const ra = /* @__PURE__ */ new Set([
  "opacity",
  "clipPath",
  "filter",
  "transform"
  // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved
  // or until we implement support for linear() easing.
  // "background-color"
]);
function oa(t, e, n, { delay: i = 0, duration: s = 300, repeat: o = 0, repeatType: r = "loop", ease: a = "easeInOut", times: l } = {}) {
  const c = { [e]: n };
  l && (c.offset = l);
  const u = Ui(a, s);
  return Array.isArray(u) && (c.easing = u), t.animate(c, {
    delay: i,
    duration: s,
    easing: Array.isArray(u) ? "linear" : u,
    fill: "both",
    iterations: o + 1,
    direction: r === "reverse" ? "alternate" : "normal"
  });
}
const aa = /* @__PURE__ */ on(() => Object.hasOwnProperty.call(Element.prototype, "animate")), re = 10, la = 2e4;
function ca(t) {
  return bn(t.type) || t.type === "spring" || !Hi(t.ease);
}
function ua(t, e) {
  const n = new On({
    ...e,
    keyframes: t,
    repeat: 0,
    delay: 0,
    isGenerator: !0
  });
  let i = { done: !1, value: t[0] };
  const s = [];
  let o = 0;
  for (; !i.done && o < la; )
    i = n.sample(o), s.push(i.value), o += re;
  return {
    times: void 0,
    keyframes: s,
    duration: o - re,
    ease: "linear"
  };
}
const Ts = {
  anticipate: ts,
  backInOut: Qi,
  circInOut: ns
};
function ha(t) {
  return t in Ts;
}
class g2 extends ys {
  constructor(e) {
    super(e);
    const { name: n, motionValue: i, element: s, keyframes: o } = this.options;
    this.resolver = new gs(o, (r, a) => this.onKeyframesResolved(r, a), n, i, s), this.resolver.scheduleResolve();
  }
  initPlayback(e, n) {
    let { duration: i = 300, times: s, ease: o, type: r, motionValue: a, name: l, startTime: c } = this.options;
    if (!a.owner || !a.owner.current)
      return !1;
    if (typeof o == "string" && ne() && ha(o) && (o = Ts[o]), ca(this.options)) {
      const { onComplete: h, onUpdate: d, motionValue: f, element: p, ...m } = this.options, y = ua(e, m);
      e = y.keyframes, e.length === 1 && (e[1] = e[0]), i = y.duration, s = y.times, o = y.ease, r = "keyframes";
    }
    const u = oa(a.owner.current, l, e, { ...this.options, duration: i, times: s, ease: o });
    return u.startTime = c ?? this.calcStartTime(), this.pendingTimeline ? (Jn(u, this.pendingTimeline), this.pendingTimeline = void 0) : u.onfinish = () => {
      const { onComplete: h } = this.options;
      a.set(pe(e, this.options, n)), h && h(), this.cancel(), this.resolveFinishedPromise();
    }, {
      animation: u,
      duration: i,
      times: s,
      type: r,
      ease: o,
      keyframes: e
    };
  }
  get duration() {
    const { resolved: e } = this;
    if (!e)
      return 0;
    const { duration: n } = e;
    return /* @__PURE__ */ tt(n);
  }
  get time() {
    const { resolved: e } = this;
    if (!e)
      return 0;
    const { animation: n } = e;
    return /* @__PURE__ */ tt(n.currentTime || 0);
  }
  set time(e) {
    const { resolved: n } = this;
    if (!n)
      return;
    const { animation: i } = n;
    i.currentTime = /* @__PURE__ */ Y(e);
  }
  get speed() {
    const { resolved: e } = this;
    if (!e)
      return 1;
    const { animation: n } = e;
    return n.playbackRate;
  }
  set speed(e) {
    const { resolved: n } = this;
    if (!n)
      return;
    const { animation: i } = n;
    i.playbackRate = e;
  }
  get state() {
    const { resolved: e } = this;
    if (!e)
      return "idle";
    const { animation: n } = e;
    return n.playState;
  }
  get startTime() {
    const { resolved: e } = this;
    if (!e)
      return null;
    const { animation: n } = e;
    return n.startTime;
  }
  /**
   * Replace the default DocumentTimeline with another AnimationTimeline.
   * Currently used for scroll animations.
   */
  attachTimeline(e) {
    if (!this._resolved)
      this.pendingTimeline = e;
    else {
      const { resolved: n } = this;
      if (!n)
        return $;
      const { animation: i } = n;
      Jn(i, e);
    }
    return $;
  }
  play() {
    if (this.isStopped)
      return;
    const { resolved: e } = this;
    if (!e)
      return;
    const { animation: n } = e;
    n.playState === "finished" && this.updateFinishedPromise(), n.play();
  }
  pause() {
    const { resolved: e } = this;
    if (!e)
      return;
    const { animation: n } = e;
    n.pause();
  }
  stop() {
    if (this.resolver.cancel(), this.isStopped = !0, this.state === "idle")
      return;
    this.resolveFinishedPromise(), this.updateFinishedPromise();
    const { resolved: e } = this;
    if (!e)
      return;
    const { animation: n, keyframes: i, duration: s, type: o, ease: r, times: a } = e;
    if (n.playState === "idle" || n.playState === "finished")
      return;
    if (this.time) {
      const { motionValue: c, onUpdate: u, onComplete: h, element: d, ...f } = this.options, p = new On({
        ...f,
        keyframes: i,
        duration: s,
        type: o,
        ease: r,
        times: a,
        isGenerator: !0
      }), m = /* @__PURE__ */ Y(this.time);
      c.setWithVelocity(p.sample(m - re).value, p.sample(m).value, re);
    }
    const { onStop: l } = this.options;
    l && l(), this.cancel();
  }
  complete() {
    const { resolved: e } = this;
    e && e.animation.finish();
  }
  cancel() {
    const { resolved: e } = this;
    e && e.animation.cancel();
  }
  static supports(e) {
    const { motionValue: n, name: i, repeatDelay: s, repeatType: o, damping: r, type: a } = e;
    if (!n || !n.owner || !(n.owner.current instanceof HTMLElement))
      return !1;
    const { onUpdate: l, transformTemplate: c } = n.owner.getProps();
    return aa() && i && ra.has(i) && /**
     * If we're outputting values to onUpdate then we can't use WAAPI as there's
     * no way to read the value from WAAPI every frame.
     */
    !l && !c && !s && o !== "mirror" && r !== 0 && a !== "inertia";
  }
}
const da = {
  type: "spring",
  stiffness: 500,
  damping: 25,
  restSpeed: 10
}, fa = (t) => ({
  type: "spring",
  stiffness: 550,
  damping: t === 0 ? 2 * Math.sqrt(550) : 30,
  restSpeed: 10
}), pa = {
  type: "keyframes",
  duration: 0.8
}, ma = {
  type: "keyframes",
  ease: [0.25, 0.1, 0.35, 1],
  duration: 0.3
}, ga = (t, { keyframes: e }) => e.length > 2 ? pa : dt.has(t) ? t.startsWith("scale") ? fa(e[1]) : da : ma;
function ya({ when: t, delay: e, delayChildren: n, staggerChildren: i, staggerDirection: s, repeat: o, repeatType: r, repeatDelay: a, from: l, elapsed: c, ...u }) {
  return !!Object.keys(u).length;
}
const Nn = (t, e, n, i = {}, s, o) => (r) => {
  const a = xn(i, t) || {}, l = a.delay || i.delay || 0;
  let { elapsed: c = 0 } = i;
  c = c - /* @__PURE__ */ Y(l);
  let u = {
    keyframes: Array.isArray(n) ? n : [null, n],
    ease: "easeOut",
    velocity: e.getVelocity(),
    ...a,
    delay: -c,
    onUpdate: (d) => {
      e.set(d), a.onUpdate && a.onUpdate(d);
    },
    onComplete: () => {
      r(), a.onComplete && a.onComplete();
    },
    name: t,
    motionValue: e,
    element: o ? void 0 : s
  };
  ya(a) || (u = {
    ...u,
    ...ga(t, u)
  }), u.duration && (u.duration = /* @__PURE__ */ Y(u.duration)), u.repeatDelay && (u.repeatDelay = /* @__PURE__ */ Y(u.repeatDelay)), u.from !== void 0 && (u.keyframes[0] = u.from);
  let h = !1;
  if ((u.type === !1 || u.duration === 0 && !u.repeatDelay) && (u.duration = 0, u.delay === 0 && (h = !0)), h && !o && e.get() !== void 0) {
    const d = pe(u.keyframes, a);
    if (d !== void 0)
      return S.update(() => {
        u.onUpdate(d), u.onComplete();
      }), new Nr([]);
  }
  return !o && g2.supports(u) ? new g2(u) : new On(u);
};
function va({ protectedKeys: t, needsAnimating: e }, n) {
  const i = t.hasOwnProperty(n) && e[n] !== !0;
  return e[n] = !1, i;
}
function Ps(t, e, { delay: n = 0, transitionOverride: i, type: s } = {}) {
  var o;
  let { transition: r = t.getDefaultTransition(), transitionEnd: a, ...l } = e;
  i && (r = i);
  const c = [], u = s && t.animationState && t.animationState.getState()[s];
  for (const h in l) {
    const d = t.getValue(h, (o = t.latestValues[h]) !== null && o !== void 0 ? o : null), f = l[h];
    if (f === void 0 || u && va(u, h))
      continue;
    const p = {
      delay: n,
      ...xn(r || {}, h)
    };
    let m = !1;
    if (window.MotionHandoffAnimation) {
      const g = zi(t);
      if (g) {
        const v = window.MotionHandoffAnimation(g, h, S);
        v !== null && (p.startTime = v, m = !0);
      }
    }
    Ie(t, h), d.start(Nn(h, d, f, t.shouldReduceMotion && Ki.has(h) ? { type: !1 } : p, t, m));
    const y = d.animation;
    y && c.push(y);
  }
  return a && Promise.all(c).then(() => {
    S.update(() => {
      a && qr(t, a);
    });
  }), c;
}
function Ke(t, e, n = {}) {
  var i;
  const s = fe(t, e, n.type === "exit" ? (i = t.presenceContext) === null || i === void 0 ? void 0 : i.custom : void 0);
  let { transition: o = t.getDefaultTransition() || {} } = s || {};
  n.transitionOverride && (o = n.transitionOverride);
  const r = s ? () => Promise.all(Ps(t, s, n)) : () => Promise.resolve(), a = t.variantChildren && t.variantChildren.size ? (c = 0) => {
    const { delayChildren: u = 0, staggerChildren: h, staggerDirection: d } = o;
    return Ca(t, e, u + c, h, d, n);
  } : () => Promise.resolve(), { when: l } = o;
  if (l) {
    const [c, u] = l === "beforeChildren" ? [r, a] : [a, r];
    return c().then(() => u());
  } else
    return Promise.all([r(), a(n.delay)]);
}
function Ca(t, e, n = 0, i = 0, s = 1, o) {
  const r = [], a = (t.variantChildren.size - 1) * i, l = s === 1 ? (c = 0) => c * i : (c = 0) => a - c * i;
  return Array.from(t.variantChildren).sort(xa).forEach((c, u) => {
    c.notify("AnimationStart", e), r.push(Ke(c, e, {
      ...o,
      delay: n + l(u)
    }).then(() => c.notify("AnimationComplete", e)));
  }), Promise.all(r);
}
function xa(t, e) {
  return t.sortNodePosition(e);
}
function ba(t, e, n = {}) {
  t.notify("AnimationStart", e);
  let i;
  if (Array.isArray(e)) {
    const s = e.map((o) => Ke(t, o, n));
    i = Promise.all(s);
  } else if (typeof e == "string")
    i = Ke(t, e, n);
  else {
    const s = typeof e == "function" ? fe(t, e, n.custom) : e;
    i = Promise.all(Ps(t, s, n));
  }
  return i.then(() => {
    t.notify("AnimationComplete", e);
  });
}
const wa = ln.length;
function Vs(t) {
  if (!t)
    return;
  if (!t.isControllingVariants) {
    const n = t.parent ? Vs(t.parent) || {} : {};
    return t.props.initial !== void 0 && (n.initial = t.props.initial), n;
  }
  const e = {};
  for (let n = 0; n < wa; n++) {
    const i = ln[n], s = t.props[i];
    (jt(s) || s === !1) && (e[i] = s);
  }
  return e;
}
const Ta = [...an].reverse(), Pa = an.length;
function Va(t) {
  return (e) => Promise.all(e.map(({ animation: n, options: i }) => ba(t, n, i)));
}
function Sa(t) {
  let e = Va(t), n = y2(), i = !0;
  const s = (l) => (c, u) => {
    var h;
    const d = fe(t, u, l === "exit" ? (h = t.presenceContext) === null || h === void 0 ? void 0 : h.custom : void 0);
    if (d) {
      const { transition: f, transitionEnd: p, ...m } = d;
      c = { ...c, ...m, ...p };
    }
    return c;
  };
  function o(l) {
    e = l(t);
  }
  function r(l) {
    const { props: c } = t, u = Vs(t.parent) || {}, h = [], d = /* @__PURE__ */ new Set();
    let f = {}, p = 1 / 0;
    for (let y = 0; y < Pa; y++) {
      const g = Ta[y], v = n[g], C = c[g] !== void 0 ? c[g] : u[g], P = jt(C), b = g === l ? v.isActive : null;
      b === !1 && (p = y);
      let V = C === u[g] && C !== c[g] && P;
      if (V && i && t.manuallyAnimateOnMount && (V = !1), v.protectedKeys = { ...f }, // If it isn't active and hasn't *just* been set as inactive
      !v.isActive && b === null || // If we didn't and don't have any defined prop for this animation type
      !C && !v.prevProp || // Or if the prop doesn't define an animation
      he(C) || typeof C == "boolean")
        continue;
      const L = Aa(v.prevProp, C);
      let T = L || // If we're making this variant active, we want to always make it active
      g === l && v.isActive && !V && P || // If we removed a higher-priority variant (i is in reverse order)
      y > p && P, k = !1;
      const F = Array.isArray(C) ? C : [C];
      let R = F.reduce(s(g), {});
      b === !1 && (R = {});
      const { prevResolvedValues: O = {} } = v, q = {
        ...O,
        ...R
      }, Kt = (N) => {
        T = !0, d.has(N) && (k = !0, d.delete(N)), v.needsAnimating[N] = !0;
        const Q = t.getValue(N);
        Q && (Q.liveStyle = !1);
      };
      for (const N in q) {
        const Q = R[N], ge = O[N];
        if (f.hasOwnProperty(N))
          continue;
        let ye = !1;
        je(Q) && je(ge) ? ye = !Bi(Q, ge) : ye = Q !== ge, ye ? Q != null ? Kt(N) : d.add(N) : Q !== void 0 && d.has(N) ? Kt(N) : v.protectedKeys[N] = !0;
      }
      v.prevProp = C, v.prevResolvedValues = R, v.isActive && (f = { ...f, ...R }), i && t.blockInitialAnimation && (T = !1), T && (!(V && L) || k) && h.push(...F.map((N) => ({
        animation: N,
        options: { type: g }
      })));
    }
    if (d.size) {
      const y = {};
      d.forEach((g) => {
        const v = t.getBaseTarget(g), C = t.getValue(g);
        C && (C.liveStyle = !0), y[g] = v ?? null;
      }), h.push({ animation: y });
    }
    let m = !!h.length;
    return i && (c.initial === !1 || c.initial === c.animate) && !t.manuallyAnimateOnMount && (m = !1), i = !1, m ? e(h) : Promise.resolve();
  }
  function a(l, c) {
    var u;
    if (n[l].isActive === c)
      return Promise.resolve();
    (u = t.variantChildren) === null || u === void 0 || u.forEach((d) => {
      var f;
      return (f = d.animationState) === null || f === void 0 ? void 0 : f.setActive(l, c);
    }), n[l].isActive = c;
    const h = r(l);
    for (const d in n)
      n[d].protectedKeys = {};
    return h;
  }
  return {
    animateChanges: r,
    setActive: a,
    setAnimateFunction: o,
    getState: () => n,
    reset: () => {
      n = y2(), i = !0;
    }
  };
}
function Aa(t, e) {
  return typeof e == "string" ? e !== t : Array.isArray(e) ? !Bi(e, t) : !1;
}
function at(t = !1) {
  return {
    isActive: t,
    protectedKeys: {},
    needsAnimating: {},
    prevResolvedValues: {}
  };
}
function y2() {
  return {
    animate: at(!0),
    whileInView: at(),
    whileHover: at(),
    whileTap: at(),
    whileDrag: at(),
    whileFocus: at(),
    exit: at()
  };
}
class ot {
  constructor(e) {
    this.isMounted = !1, this.node = e;
  }
  update() {
  }
}
class La extends ot {
  /**
   * We dynamically generate the AnimationState manager as it contains a reference
   * to the underlying animation library. We only want to load that if we load this,
   * so people can optionally code split it out using the `m` component.
   */
  constructor(e) {
    super(e), e.animationState || (e.animationState = Sa(e));
  }
  updateAnimationControlsSubscription() {
    const { animate: e } = this.node.getProps();
    he(e) && (this.unmountControls = e.subscribe(this.node));
  }
  /**
   * Subscribe any provided AnimationControls to the component's VisualElement
   */
  mount() {
    this.updateAnimationControlsSubscription();
  }
  update() {
    const { animate: e } = this.node.getProps(), { animate: n } = this.node.prevProps || {};
    e !== n && this.updateAnimationControlsSubscription();
  }
  unmount() {
    var e;
    this.node.animationState.reset(), (e = this.unmountControls) === null || e === void 0 || e.call(this);
  }
}
let Ma = 0;
class Da extends ot {
  constructor() {
    super(...arguments), this.id = Ma++;
  }
  update() {
    if (!this.node.presenceContext)
      return;
    const { isPresent: e, onExitComplete: n } = this.node.presenceContext, { isPresent: i } = this.node.prevPresenceContext || {};
    if (!this.node.animationState || e === i)
      return;
    const s = this.node.animationState.setActive("exit", !e);
    n && !e && s.then(() => n(this.id));
  }
  mount() {
    const { register: e } = this.node.presenceContext || {};
    e && (this.unmount = e(this.id));
  }
  unmount() {
  }
}
const Ea = {
  animation: {
    Feature: La
  },
  exit: {
    Feature: Da
  }
};
function _t(t, e, n, i = { passive: !0 }) {
  return t.addEventListener(e, n, i), () => t.removeEventListener(e, n);
}
function Wt(t) {
  return {
    point: {
      x: t.pageX,
      y: t.pageY
    }
  };
}
const Ra = (t) => (e) => Tn(e) && t(e, Wt(e));
function Ft(t, e, n, i) {
  return _t(t, e, Ra(n), i);
}
const v2 = (t, e) => Math.abs(t - e);
function Fa(t, e) {
  const n = v2(t.x, e.x), i = v2(t.y, e.y);
  return Math.sqrt(n ** 2 + i ** 2);
}
class Ss {
  constructor(e, n, { transformPagePoint: i, contextWindow: s, dragSnapToOrigin: o = !1 } = {}) {
    if (this.startEvent = null, this.lastMoveEvent = null, this.lastMoveEventInfo = null, this.handlers = {}, this.contextWindow = window, this.updatePoint = () => {
      if (!(this.lastMoveEvent && this.lastMoveEventInfo))
        return;
      const h = Ve(this.lastMoveEventInfo, this.history), d = this.startEvent !== null, f = Fa(h.offset, { x: 0, y: 0 }) >= 3;
      if (!d && !f)
        return;
      const { point: p } = h, { timestamp: m } = j;
      this.history.push({ ...p, timestamp: m });
      const { onStart: y, onMove: g } = this.handlers;
      d || (y && y(this.lastMoveEvent, h), this.startEvent = this.lastMoveEvent), g && g(this.lastMoveEvent, h);
    }, this.handlePointerMove = (h, d) => {
      this.lastMoveEvent = h, this.lastMoveEventInfo = Pe(d, this.transformPagePoint), S.update(this.updatePoint, !0);
    }, this.handlePointerUp = (h, d) => {
      this.end();
      const { onEnd: f, onSessionEnd: p, resumeAnimation: m } = this.handlers;
      if (this.dragSnapToOrigin && m && m(), !(this.lastMoveEvent && this.lastMoveEventInfo))
        return;
      const y = Ve(h.type === "pointercancel" ? this.lastMoveEventInfo : Pe(d, this.transformPagePoint), this.history);
      this.startEvent && f && f(h, y), p && p(h, y);
    }, !Tn(e))
      return;
    this.dragSnapToOrigin = o, this.handlers = n, this.transformPagePoint = i, this.contextWindow = s || window;
    const r = Wt(e), a = Pe(r, this.transformPagePoint), { point: l } = a, { timestamp: c } = j;
    this.history = [{ ...l, timestamp: c }];
    const { onSessionStart: u } = n;
    u && u(e, Ve(a, this.history)), this.removeListeners = Zt(Ft(this.contextWindow, "pointermove", this.handlePointerMove), Ft(this.contextWindow, "pointerup", this.handlePointerUp), Ft(this.contextWindow, "pointercancel", this.handlePointerUp));
  }
  updateHandlers(e) {
    this.handlers = e;
  }
  end() {
    this.removeListeners && this.removeListeners(), st(this.updatePoint);
  }
}
function Pe(t, e) {
  return e ? { point: e(t.point) } : t;
}
function C2(t, e) {
  return { x: t.x - e.x, y: t.y - e.y };
}
function Ve({ point: t }, e) {
  return {
    point: t,
    delta: C2(t, As(e)),
    offset: C2(t, Oa(e)),
    velocity: Na(e, 0.1)
  };
}
function Oa(t) {
  return t[0];
}
function As(t) {
  return t[t.length - 1];
}
function Na(t, e) {
  if (t.length < 2)
    return { x: 0, y: 0 };
  let n = t.length - 1, i = null;
  const s = As(t);
  for (; n >= 0 && (i = t[n], !(s.timestamp - i.timestamp > /* @__PURE__ */ Y(e))); )
    n--;
  if (!i)
    return { x: 0, y: 0 };
  const o = /* @__PURE__ */ tt(s.timestamp - i.timestamp);
  if (o === 0)
    return { x: 0, y: 0 };
  const r = {
    x: (s.x - i.x) / o,
    y: (s.y - i.y) / o
  };
  return r.x === 1 / 0 && (r.x = 0), r.y === 1 / 0 && (r.y = 0), r;
}
const Ls = 1e-4, ja = 1 - Ls, ka = 1 + Ls, Ms = 0.01, Ba = 0 - Ms, Ia = 0 + Ms;
function W(t) {
  return t.max - t.min;
}
function _a(t, e, n) {
  return Math.abs(t - e) <= n;
}
function x2(t, e, n, i = 0.5) {
  t.origin = i, t.originPoint = D(e.min, e.max, t.origin), t.scale = W(n) / W(e), t.translate = D(n.min, n.max, t.origin) - t.originPoint, (t.scale >= ja && t.scale <= ka || isNaN(t.scale)) && (t.scale = 1), (t.translate >= Ba && t.translate <= Ia || isNaN(t.translate)) && (t.translate = 0);
}
function Ot(t, e, n, i) {
  x2(t.x, e.x, n.x, i ? i.originX : void 0), x2(t.y, e.y, n.y, i ? i.originY : void 0);
}
function b2(t, e, n) {
  t.min = n.min + e.min, t.max = t.min + W(e);
}
function Ha(t, e, n) {
  b2(t.x, e.x, n.x), b2(t.y, e.y, n.y);
}
function w2(t, e, n) {
  t.min = e.min - n.min, t.max = t.min + W(e);
}
function Nt(t, e, n) {
  w2(t.x, e.x, n.x), w2(t.y, e.y, n.y);
}
function Ua(t, { min: e, max: n }, i) {
  return e !== void 0 && t < e ? t = i ? D(e, t, i.min) : Math.max(t, e) : n !== void 0 && t > n && (t = i ? D(n, t, i.max) : Math.min(t, n)), t;
}
function T2(t, e, n) {
  return {
    min: e !== void 0 ? t.min + e : void 0,
    max: n !== void 0 ? t.max + n - (t.max - t.min) : void 0
  };
}
function $a(t, { top: e, left: n, bottom: i, right: s }) {
  return {
    x: T2(t.x, n, s),
    y: T2(t.y, e, i)
  };
}
function P2(t, e) {
  let n = e.min - t.min, i = e.max - t.max;
  return e.max - e.min < t.max - t.min && ([n, i] = [i, n]), { min: n, max: i };
}
function Za(t, e) {
  return {
    x: P2(t.x, e.x),
    y: P2(t.y, e.y)
  };
}
function Wa(t, e) {
  let n = 0.5;
  const i = W(t), s = W(e);
  return s > i ? n = /* @__PURE__ */ vt(e.min, e.max - i, t.min) : i > s && (n = /* @__PURE__ */ vt(t.min, t.max - s, e.min)), et(0, 1, n);
}
function Ka(t, e) {
  const n = {};
  return e.min !== void 0 && (n.min = e.min - t.min), e.max !== void 0 && (n.max = e.max - t.min), n;
}
const Ge = 0.35;
function Ga(t = Ge) {
  return t === !1 ? t = 0 : t === !0 && (t = Ge), {
    x: V2(t, "left", "right"),
    y: V2(t, "top", "bottom")
  };
}
function V2(t, e, n) {
  return {
    min: S2(t, e),
    max: S2(t, n)
  };
}
function S2(t, e) {
  return typeof t == "number" ? t : t[e] || 0;
}
const A2 = () => ({
  translate: 0,
  scale: 1,
  origin: 0,
  originPoint: 0
}), mt = () => ({
  x: A2(),
  y: A2()
}), L2 = () => ({ min: 0, max: 0 }), E = () => ({
  x: L2(),
  y: L2()
});
function G(t) {
  return [t("x"), t("y")];
}
function Ds({ top: t, left: e, right: n, bottom: i }) {
  return {
    x: { min: e, max: n },
    y: { min: t, max: i }
  };
}
function za({ x: t, y: e }) {
  return { top: e.min, right: t.max, bottom: e.max, left: t.min };
}
function qa(t, e) {
  if (!e)
    return t;
  const n = e({ x: t.left, y: t.top }), i = e({ x: t.right, y: t.bottom });
  return {
    top: n.y,
    left: n.x,
    bottom: i.y,
    right: i.x
  };
}
function Se(t) {
  return t === void 0 || t === 1;
}
function ze({ scale: t, scaleX: e, scaleY: n }) {
  return !Se(t) || !Se(e) || !Se(n);
}
function lt(t) {
  return ze(t) || Es(t) || t.z || t.rotate || t.rotateX || t.rotateY || t.skewX || t.skewY;
}
function Es(t) {
  return M2(t.x) || M2(t.y);
}
function M2(t) {
  return t && t !== "0%";
}
function oe(t, e, n) {
  const i = t - n, s = e * i;
  return n + s;
}
function D2(t, e, n, i, s) {
  return s !== void 0 && (t = oe(t, s, i)), oe(t, n, i) + e;
}
function qe(t, e = 0, n = 1, i, s) {
  t.min = D2(t.min, e, n, i, s), t.max = D2(t.max, e, n, i, s);
}
function Rs(t, { x: e, y: n }) {
  qe(t.x, e.translate, e.scale, e.originPoint), qe(t.y, n.translate, n.scale, n.originPoint);
}
const E2 = 0.999999999999, R2 = 1.0000000000001;
function Ya(t, e, n, i = !1) {
  const s = n.length;
  if (!s)
    return;
  e.x = e.y = 1;
  let o, r;
  for (let a = 0; a < s; a++) {
    o = n[a], r = o.projectionDelta;
    const { visualElement: l } = o.options;
    l && l.props.style && l.props.style.display === "contents" || (i && o.options.layoutScroll && o.scroll && o !== o.root && yt(t, {
      x: -o.scroll.offset.x,
      y: -o.scroll.offset.y
    }), r && (e.x *= r.x.scale, e.y *= r.y.scale, Rs(t, r)), i && lt(o.latestValues) && yt(t, o.latestValues));
  }
  e.x < R2 && e.x > E2 && (e.x = 1), e.y < R2 && e.y > E2 && (e.y = 1);
}
function gt(t, e) {
  t.min = t.min + e, t.max = t.max + e;
}
function F2(t, e, n, i, s = 0.5) {
  const o = D(t.min, t.max, s);
  qe(t, e, n, o, i);
}
function yt(t, e) {
  F2(t.x, e.x, e.scaleX, e.scale, e.originX), F2(t.y, e.y, e.scaleY, e.scale, e.originY);
}
function Fs(t, e) {
  return Ds(qa(t.getBoundingClientRect(), e));
}
function Xa(t, e, n) {
  const i = Fs(t, n), { scroll: s } = e;
  return s && (gt(i.x, s.offset.x), gt(i.y, s.offset.y)), i;
}
const Os = ({ current: t }) => t ? t.ownerDocument.defaultView : null, Ja = /* @__PURE__ */ new WeakMap();
class Qa {
  constructor(e) {
    this.openDragLock = null, this.isDragging = !1, this.currentDirection = null, this.originPoint = { x: 0, y: 0 }, this.constraints = !1, this.hasMutatedConstraints = !1, this.elastic = E(), this.visualElement = e;
  }
  start(e, { snapToCursor: n = !1 } = {}) {
    const { presenceContext: i } = this.visualElement;
    if (i && i.isPresent === !1)
      return;
    const s = (u) => {
      const { dragSnapToOrigin: h } = this.getProps();
      h ? this.pauseAnimation() : this.stopAnimation(), n && this.snapToCursor(Wt(u).point);
    }, o = (u, h) => {
      const { drag: d, dragPropagation: f, onDragStart: p } = this.getProps();
      if (d && !f && (this.openDragLock && this.openDragLock(), this.openDragLock = Zr(d), !this.openDragLock))
        return;
      this.isDragging = !0, this.currentDirection = null, this.resolveConstraints(), this.visualElement.projection && (this.visualElement.projection.isAnimationBlocked = !0, this.visualElement.projection.target = void 0), G((y) => {
        let g = this.getAxisMotionValue(y).get() || 0;
        if (X.test(g)) {
          const { projection: v } = this.visualElement;
          if (v && v.layout) {
            const C = v.layout.layoutBox[y];
            C && (g = W(C) * (parseFloat(g) / 100));
          }
        }
        this.originPoint[y] = g;
      }), p && S.postRender(() => p(u, h)), Ie(this.visualElement, "transform");
      const { animationState: m } = this.visualElement;
      m && m.setActive("whileDrag", !0);
    }, r = (u, h) => {
      const { dragPropagation: d, dragDirectionLock: f, onDirectionLock: p, onDrag: m } = this.getProps();
      if (!d && !this.openDragLock)
        return;
      const { offset: y } = h;
      if (f && this.currentDirection === null) {
        this.currentDirection = t1(y), this.currentDirection !== null && p && p(this.currentDirection);
        return;
      }
      this.updateAxis("x", h.point, y), this.updateAxis("y", h.point, y), this.visualElement.render(), m && m(u, h);
    }, a = (u, h) => this.stop(u, h), l = () => G((u) => {
      var h;
      return this.getAnimationState(u) === "paused" && ((h = this.getAxisMotionValue(u).animation) === null || h === void 0 ? void 0 : h.play());
    }), { dragSnapToOrigin: c } = this.getProps();
    this.panSession = new Ss(e, {
      onSessionStart: s,
      onStart: o,
      onMove: r,
      onSessionEnd: a,
      resumeAnimation: l
    }, {
      transformPagePoint: this.visualElement.getTransformPagePoint(),
      dragSnapToOrigin: c,
      contextWindow: Os(this.visualElement)
    });
  }
  stop(e, n) {
    const i = this.isDragging;
    if (this.cancel(), !i)
      return;
    const { velocity: s } = n;
    this.startAnimation(s);
    const { onDragEnd: o } = this.getProps();
    o && S.postRender(() => o(e, n));
  }
  cancel() {
    this.isDragging = !1;
    const { projection: e, animationState: n } = this.visualElement;
    e && (e.isAnimationBlocked = !1), this.panSession && this.panSession.end(), this.panSession = void 0;
    const { dragPropagation: i } = this.getProps();
    !i && this.openDragLock && (this.openDragLock(), this.openDragLock = null), n && n.setActive("whileDrag", !1);
  }
  updateAxis(e, n, i) {
    const { drag: s } = this.getProps();
    if (!i || !qt(e, s, this.currentDirection))
      return;
    const o = this.getAxisMotionValue(e);
    let r = this.originPoint[e] + i[e];
    this.constraints && this.constraints[e] && (r = Ua(r, this.constraints[e], this.elastic[e])), o.set(r);
  }
  resolveConstraints() {
    var e;
    const { dragConstraints: n, dragElastic: i } = this.getProps(), s = this.visualElement.projection && !this.visualElement.projection.layout ? this.visualElement.projection.measure(!1) : (e = this.visualElement.projection) === null || e === void 0 ? void 0 : e.layout, o = this.constraints;
    n && ft(n) ? this.constraints || (this.constraints = this.resolveRefConstraints()) : n && s ? this.constraints = $a(s.layoutBox, n) : this.constraints = !1, this.elastic = Ga(i), o !== this.constraints && s && this.constraints && !this.hasMutatedConstraints && G((r) => {
      this.constraints !== !1 && this.getAxisMotionValue(r) && (this.constraints[r] = Ka(s.layoutBox[r], this.constraints[r]));
    });
  }
  resolveRefConstraints() {
    const { dragConstraints: e, onMeasureDragConstraints: n } = this.getProps();
    if (!e || !ft(e))
      return !1;
    const i = e.current;
    it(i !== null, "If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.");
    const { projection: s } = this.visualElement;
    if (!s || !s.layout)
      return !1;
    const o = Xa(i, s.root, this.visualElement.getTransformPagePoint());
    let r = Za(s.layout.layoutBox, o);
    if (n) {
      const a = n(za(r));
      this.hasMutatedConstraints = !!a, a && (r = Ds(a));
    }
    return r;
  }
  startAnimation(e) {
    const { drag: n, dragMomentum: i, dragElastic: s, dragTransition: o, dragSnapToOrigin: r, onDragTransitionEnd: a } = this.getProps(), l = this.constraints || {}, c = G((u) => {
      if (!qt(u, n, this.currentDirection))
        return;
      let h = l && l[u] || {};
      r && (h = { min: 0, max: 0 });
      const d = s ? 200 : 1e6, f = s ? 40 : 1e7, p = {
        type: "inertia",
        velocity: i ? e[u] : 0,
        bounceStiffness: d,
        bounceDamping: f,
        timeConstant: 750,
        restDelta: 1,
        restSpeed: 10,
        ...o,
        ...h
      };
      return this.startAxisValueAnimation(u, p);
    });
    return Promise.all(c).then(a);
  }
  startAxisValueAnimation(e, n) {
    const i = this.getAxisMotionValue(e);
    return Ie(this.visualElement, e), i.start(Nn(e, i, 0, n, this.visualElement, !1));
  }
  stopAnimation() {
    G((e) => this.getAxisMotionValue(e).stop());
  }
  pauseAnimation() {
    G((e) => {
      var n;
      return (n = this.getAxisMotionValue(e).animation) === null || n === void 0 ? void 0 : n.pause();
    });
  }
  getAnimationState(e) {
    var n;
    return (n = this.getAxisMotionValue(e).animation) === null || n === void 0 ? void 0 : n.state;
  }
  /**
   * Drag works differently depending on which props are provided.
   *
   * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.
   * - Otherwise, we apply the delta to the x/y motion values.
   */
  getAxisMotionValue(e) {
    const n = `_drag${e.toUpperCase()}`, i = this.visualElement.getProps(), s = i[n];
    return s || this.visualElement.getValue(e, (i.initial ? i.initial[e] : void 0) || 0);
  }
  snapToCursor(e) {
    G((n) => {
      const { drag: i } = this.getProps();
      if (!qt(n, i, this.currentDirection))
        return;
      const { projection: s } = this.visualElement, o = this.getAxisMotionValue(n);
      if (s && s.layout) {
        const { min: r, max: a } = s.layout.layoutBox[n];
        o.set(e[n] - D(r, a, 0.5));
      }
    });
  }
  /**
   * When the viewport resizes we want to check if the measured constraints
   * have changed and, if so, reposition the element within those new constraints
   * relative to where it was before the resize.
   */
  scalePositionWithinConstraints() {
    if (!this.visualElement.current)
      return;
    const { drag: e, dragConstraints: n } = this.getProps(), { projection: i } = this.visualElement;
    if (!ft(n) || !i || !this.constraints)
      return;
    this.stopAnimation();
    const s = { x: 0, y: 0 };
    G((r) => {
      const a = this.getAxisMotionValue(r);
      if (a && this.constraints !== !1) {
        const l = a.get();
        s[r] = Wa({ min: l, max: l }, this.constraints[r]);
      }
    });
    const { transformTemplate: o } = this.visualElement.getProps();
    this.visualElement.current.style.transform = o ? o({}, "") : "none", i.root && i.root.updateScroll(), i.updateLayout(), this.resolveConstraints(), G((r) => {
      if (!qt(r, e, null))
        return;
      const a = this.getAxisMotionValue(r), { min: l, max: c } = this.constraints[r];
      a.set(D(l, c, s[r]));
    });
  }
  addListeners() {
    if (!this.visualElement.current)
      return;
    Ja.set(this.visualElement, this);
    const e = this.visualElement.current, n = Ft(e, "pointerdown", (l) => {
      const { drag: c, dragListener: u = !0 } = this.getProps();
      c && u && this.start(l);
    }), i = () => {
      const { dragConstraints: l } = this.getProps();
      ft(l) && l.current && (this.constraints = this.resolveRefConstraints());
    }, { projection: s } = this.visualElement, o = s.addEventListener("measure", i);
    s && !s.layout && (s.root && s.root.updateScroll(), s.updateLayout()), S.read(i);
    const r = _t(window, "resize", () => this.scalePositionWithinConstraints()), a = s.addEventListener("didUpdate", ({ delta: l, hasLayoutChanged: c }) => {
      this.isDragging && c && (G((u) => {
        const h = this.getAxisMotionValue(u);
        h && (this.originPoint[u] += l[u].translate, h.set(h.get() + l[u].translate));
      }), this.visualElement.render());
    });
    return () => {
      r(), n(), o(), a && a();
    };
  }
  getProps() {
    const e = this.visualElement.getProps(), { drag: n = !1, dragDirectionLock: i = !1, dragPropagation: s = !1, dragConstraints: o = !1, dragElastic: r = Ge, dragMomentum: a = !0 } = e;
    return {
      ...e,
      drag: n,
      dragDirectionLock: i,
      dragPropagation: s,
      dragConstraints: o,
      dragElastic: r,
      dragMomentum: a
    };
  }
}
function qt(t, e, n) {
  return (e === !0 || e === t) && (n === null || n === t);
}
function t1(t, e = 10) {
  let n = null;
  return Math.abs(t.y) > e ? n = "y" : Math.abs(t.x) > e && (n = "x"), n;
}
class e1 extends ot {
  constructor(e) {
    super(e), this.removeGroupControls = $, this.removeListeners = $, this.controls = new Qa(e);
  }
  mount() {
    const { dragControls: e } = this.node.getProps();
    e && (this.removeGroupControls = e.subscribe(this.controls)), this.removeListeners = this.controls.addListeners() || $;
  }
  unmount() {
    this.removeGroupControls(), this.removeListeners();
  }
}
const O2 = (t) => (e, n) => {
  t && S.postRender(() => t(e, n));
};
class n1 extends ot {
  constructor() {
    super(...arguments), this.removePointerDownListener = $;
  }
  onPointerDown(e) {
    this.session = new Ss(e, this.createPanHandlers(), {
      transformPagePoint: this.node.getTransformPagePoint(),
      contextWindow: Os(this.node)
    });
  }
  createPanHandlers() {
    const { onPanSessionStart: e, onPanStart: n, onPan: i, onPanEnd: s } = this.node.getProps();
    return {
      onSessionStart: O2(e),
      onStart: O2(n),
      onMove: i,
      onEnd: (o, r) => {
        delete this.session, s && S.postRender(() => s(o, r));
      }
    };
  }
  mount() {
    this.removePointerDownListener = Ft(this.node.current, "pointerdown", (e) => this.onPointerDown(e));
  }
  update() {
    this.session && this.session.updateHandlers(this.createPanHandlers());
  }
  unmount() {
    this.removePointerDownListener(), this.session && this.session.end();
  }
}
const Qt = {
  /**
   * Global flag as to whether the tree has animated since the last time
   * we resized the window
   */
  hasAnimatedSinceResize: !0,
  /**
   * We set this to true once, on the first update. Any nodes added to the tree beyond that
   * update will be given a `data-projection-id` attribute.
   */
  hasEverUpdated: !1
};
function N2(t, e) {
  return e.max === e.min ? 0 : t / (e.max - e.min) * 100;
}
const Lt = {
  correct: (t, e) => {
    if (!e.target)
      return t;
    if (typeof t == "string")
      if (x.test(t))
        t = parseFloat(t);
      else
        return t;
    const n = N2(t, e.target.x), i = N2(t, e.target.y);
    return `${n}% ${i}%`;
  }
}, i1 = {
  correct: (t, { treeScale: e, projectionDelta: n }) => {
    const i = t, s = rt.parse(t);
    if (s.length > 5)
      return i;
    const o = rt.createTransformer(t), r = typeof s[0] != "number" ? 1 : 0, a = n.x.scale * e.x, l = n.y.scale * e.y;
    s[0 + r] /= a, s[1 + r] /= l;
    const c = D(a, l, 0.5);
    return typeof s[2 + r] == "number" && (s[2 + r] /= c), typeof s[3 + r] == "number" && (s[3 + r] /= c), o(s);
  }
};
class s1 extends Xs {
  /**
   * This only mounts projection nodes for components that
   * need measuring, we might want to do it for all components
   * in order to incorporate transforms
   */
  componentDidMount() {
    const { visualElement: e, layoutGroup: n, switchLayoutGroup: i, layoutId: s } = this.props, { projection: o } = e;
    Tr(r1), o && (n.group && n.group.add(o), i && i.register && s && i.register(o), o.root.didUpdate(), o.addEventListener("animationComplete", () => {
      this.safeToRemove();
    }), o.setOptions({
      ...o.options,
      onExitComplete: () => this.safeToRemove()
    })), Qt.hasEverUpdated = !0;
  }
  getSnapshotBeforeUpdate(e) {
    const { layoutDependency: n, visualElement: i, drag: s, isPresent: o } = this.props, r = i.projection;
    return r && (r.isPresent = o, s || e.layoutDependency !== n || n === void 0 ? r.willUpdate() : this.safeToRemove(), e.isPresent !== o && (o ? r.promote() : r.relegate() || S.postRender(() => {
      const a = r.getStack();
      (!a || !a.members.length) && this.safeToRemove();
    }))), null;
  }
  componentDidUpdate() {
    const { projection: e } = this.props.visualElement;
    e && (e.root.didUpdate(), un.postRender(() => {
      !e.currentAnimation && e.isLead() && this.safeToRemove();
    }));
  }
  componentWillUnmount() {
    const { visualElement: e, layoutGroup: n, switchLayoutGroup: i } = this.props, { projection: s } = e;
    s && (s.scheduleCheckAfterUnmount(), n && n.group && n.group.remove(s), i && i.deregister && i.deregister(s));
  }
  safeToRemove() {
    const { safeToRemove: e } = this.props;
    e && e();
  }
  render() {
    return null;
  }
}
function Ns(t) {
  const [e, n] = B0(), i = U(vi);
  return w(s1, { ...t, layoutGroup: i, switchLayoutGroup: U(Vi), isPresent: e, safeToRemove: n });
}
const r1 = {
  borderRadius: {
    ...Lt,
    applyTo: [
      "borderTopLeftRadius",
      "borderTopRightRadius",
      "borderBottomLeftRadius",
      "borderBottomRightRadius"
    ]
  },
  borderTopLeftRadius: Lt,
  borderTopRightRadius: Lt,
  borderBottomLeftRadius: Lt,
  borderBottomRightRadius: Lt,
  boxShadow: i1
};
function o1(t, e, n) {
  const i = I(t) ? t : Bt(t);
  return i.start(Nn("", i, e, n)), i.animation;
}
function a1(t) {
  return t instanceof SVGElement && t.tagName !== "svg";
}
const l1 = (t, e) => t.depth - e.depth;
class c1 {
  constructor() {
    this.children = [], this.isDirty = !1;
  }
  add(e) {
    Pn(this.children, e), this.isDirty = !0;
  }
  remove(e) {
    Vn(this.children, e), this.isDirty = !0;
  }
  forEach(e) {
    this.isDirty && this.children.sort(l1), this.isDirty = !1, this.children.forEach(e);
  }
}
function u1(t, e) {
  const n = J.now(), i = ({ timestamp: s }) => {
    const o = s - n;
    o >= e && (st(i), t(o - e));
  };
  return S.read(i, !0), () => st(i);
}
const js = ["TopLeft", "TopRight", "BottomLeft", "BottomRight"], h1 = js.length, j2 = (t) => typeof t == "string" ? parseFloat(t) : t, k2 = (t) => typeof t == "number" || x.test(t);
function d1(t, e, n, i, s, o) {
  s ? (t.opacity = D(
    0,
    // TODO Reinstate this if only child
    n.opacity !== void 0 ? n.opacity : 1,
    f1(i)
  ), t.opacityExit = D(e.opacity !== void 0 ? e.opacity : 1, 0, p1(i))) : o && (t.opacity = D(e.opacity !== void 0 ? e.opacity : 1, n.opacity !== void 0 ? n.opacity : 1, i));
  for (let r = 0; r < h1; r++) {
    const a = `border${js[r]}Radius`;
    let l = B2(e, a), c = B2(n, a);
    if (l === void 0 && c === void 0)
      continue;
    l || (l = 0), c || (c = 0), l === 0 || c === 0 || k2(l) === k2(c) ? (t[a] = Math.max(D(j2(l), j2(c), i), 0), (X.test(c) || X.test(l)) && (t[a] += "%")) : t[a] = c;
  }
  (e.rotate || n.rotate) && (t.rotate = D(e.rotate || 0, n.rotate || 0, i));
}
function B2(t, e) {
  return t[e] !== void 0 ? t[e] : t.borderRadius;
}
const f1 = /* @__PURE__ */ ks(0, 0.5, es), p1 = /* @__PURE__ */ ks(0.5, 0.95, $);
function ks(t, e, n) {
  return (i) => i < t ? 0 : i > e ? 1 : n(/* @__PURE__ */ vt(t, e, i));
}
function I2(t, e) {
  t.min = e.min, t.max = e.max;
}
function K(t, e) {
  I2(t.x, e.x), I2(t.y, e.y);
}
function _2(t, e) {
  t.translate = e.translate, t.scale = e.scale, t.originPoint = e.originPoint, t.origin = e.origin;
}
function H2(t, e, n, i, s) {
  return t -= e, t = oe(t, 1 / n, i), s !== void 0 && (t = oe(t, 1 / s, i)), t;
}
function m1(t, e = 0, n = 1, i = 0.5, s, o = t, r = t) {
  if (X.test(e) && (e = parseFloat(e), e = D(r.min, r.max, e / 100) - r.min), typeof e != "number")
    return;
  let a = D(o.min, o.max, i);
  t === o && (a -= e), t.min = H2(t.min, e, n, a, s), t.max = H2(t.max, e, n, a, s);
}
function U2(t, e, [n, i, s], o, r) {
  m1(t, e[n], e[i], e[s], e.scale, o, r);
}
const g1 = ["x", "scaleX", "originX"], y1 = ["y", "scaleY", "originY"];
function $2(t, e, n, i) {
  U2(t.x, e, g1, n ? n.x : void 0, i ? i.x : void 0), U2(t.y, e, y1, n ? n.y : void 0, i ? i.y : void 0);
}
function Z2(t) {
  return t.translate === 0 && t.scale === 1;
}
function Bs(t) {
  return Z2(t.x) && Z2(t.y);
}
function W2(t, e) {
  return t.min === e.min && t.max === e.max;
}
function v1(t, e) {
  return W2(t.x, e.x) && W2(t.y, e.y);
}
function K2(t, e) {
  return Math.round(t.min) === Math.round(e.min) && Math.round(t.max) === Math.round(e.max);
}
function Is(t, e) {
  return K2(t.x, e.x) && K2(t.y, e.y);
}
function G2(t) {
  return W(t.x) / W(t.y);
}
function z2(t, e) {
  return t.translate === e.translate && t.scale === e.scale && t.originPoint === e.originPoint;
}
class C1 {
  constructor() {
    this.members = [];
  }
  add(e) {
    Pn(this.members, e), e.scheduleRender();
  }
  remove(e) {
    if (Vn(this.members, e), e === this.prevLead && (this.prevLead = void 0), e === this.lead) {
      const n = this.members[this.members.length - 1];
      n && this.promote(n);
    }
  }
  relegate(e) {
    const n = this.members.findIndex((s) => e === s);
    if (n === 0)
      return !1;
    let i;
    for (let s = n; s >= 0; s--) {
      const o = this.members[s];
      if (o.isPresent !== !1) {
        i = o;
        break;
      }
    }
    return i ? (this.promote(i), !0) : !1;
  }
  promote(e, n) {
    const i = this.lead;
    if (e !== i && (this.prevLead = i, this.lead = e, e.show(), i)) {
      i.instance && i.scheduleRender(), e.scheduleRender(), e.resumeFrom = i, n && (e.resumeFrom.preserveOpacity = !0), i.snapshot && (e.snapshot = i.snapshot, e.snapshot.latestValues = i.animationValues || i.latestValues), e.root && e.root.isUpdating && (e.isLayoutDirty = !0);
      const { crossfade: s } = e.options;
      s === !1 && i.hide();
    }
  }
  exitAnimationComplete() {
    this.members.forEach((e) => {
      const { options: n, resumingFrom: i } = e;
      n.onExitComplete && n.onExitComplete(), i && i.options.onExitComplete && i.options.onExitComplete();
    });
  }
  scheduleRender() {
    this.members.forEach((e) => {
      e.instance && e.scheduleRender(!1);
    });
  }
  /**
   * Clear any leads that have been removed this render to prevent them from being
   * used in future animations and to prevent memory leaks
   */
  removeLeadSnapshot() {
    this.lead && this.lead.snapshot && (this.lead.snapshot = void 0);
  }
}
function x1(t, e, n) {
  let i = "";
  const s = t.x.translate / e.x, o = t.y.translate / e.y, r = (n == null ? void 0 : n.z) || 0;
  if ((s || o || r) && (i = `translate3d(${s}px, ${o}px, ${r}px) `), (e.x !== 1 || e.y !== 1) && (i += `scale(${1 / e.x}, ${1 / e.y}) `), n) {
    const { transformPerspective: c, rotate: u, rotateX: h, rotateY: d, skewX: f, skewY: p } = n;
    c && (i = `perspective(${c}px) ${i}`), u && (i += `rotate(${u}deg) `), h && (i += `rotateX(${h}deg) `), d && (i += `rotateY(${d}deg) `), f && (i += `skewX(${f}deg) `), p && (i += `skewY(${p}deg) `);
  }
  const a = t.x.scale * e.x, l = t.y.scale * e.y;
  return (a !== 1 || l !== 1) && (i += `scale(${a}, ${l})`), i || "none";
}
const ct = {
  type: "projectionFrame",
  totalNodes: 0,
  resolvedTargetDeltas: 0,
  recalculatedProjection: 0
}, Et = typeof window < "u" && window.MotionDebug !== void 0, Ae = ["", "X", "Y", "Z"], b1 = { visibility: "hidden" }, q2 = 1e3;
let w1 = 0;
function Le(t, e, n, i) {
  const { latestValues: s } = e;
  s[t] && (n[t] = s[t], e.setStaticValue(t, 0), i && (i[t] = 0));
}
function _s(t) {
  if (t.hasCheckedOptimisedAppear = !0, t.root === t)
    return;
  const { visualElement: e } = t.options;
  if (!e)
    return;
  const n = zi(e);
  if (window.MotionHasOptimisedAnimation(n, "transform")) {
    const { layout: s, layoutId: o } = t.options;
    window.MotionCancelOptimisedAnimation(n, "transform", S, !(s || o));
  }
  const { parent: i } = t;
  i && !i.hasCheckedOptimisedAppear && _s(i);
}
function Hs({ attachResizeListener: t, defaultParent: e, measureScroll: n, checkIsScrollRoot: i, resetTransform: s }) {
  return class {
    constructor(r = {}, a = e == null ? void 0 : e()) {
      this.id = w1++, this.animationId = 0, this.children = /* @__PURE__ */ new Set(), this.options = {}, this.isTreeAnimating = !1, this.isAnimationBlocked = !1, this.isLayoutDirty = !1, this.isProjectionDirty = !1, this.isSharedProjectionDirty = !1, this.isTransformDirty = !1, this.updateManuallyBlocked = !1, this.updateBlockedByResize = !1, this.isUpdating = !1, this.isSVG = !1, this.needsReset = !1, this.shouldResetTransform = !1, this.hasCheckedOptimisedAppear = !1, this.treeScale = { x: 1, y: 1 }, this.eventHandlers = /* @__PURE__ */ new Map(), this.hasTreeAnimated = !1, this.updateScheduled = !1, this.scheduleUpdate = () => this.update(), this.projectionUpdateScheduled = !1, this.checkUpdateFailed = () => {
        this.isUpdating && (this.isUpdating = !1, this.clearAllSnapshots());
      }, this.updateProjection = () => {
        this.projectionUpdateScheduled = !1, Et && (ct.totalNodes = ct.resolvedTargetDeltas = ct.recalculatedProjection = 0), this.nodes.forEach(V1), this.nodes.forEach(D1), this.nodes.forEach(E1), this.nodes.forEach(S1), Et && window.MotionDebug.record(ct);
      }, this.resolvedRelativeTargetAt = 0, this.hasProjected = !1, this.isVisible = !0, this.animationProgress = 0, this.sharedNodes = /* @__PURE__ */ new Map(), this.latestValues = r, this.root = a ? a.root || a : this, this.path = a ? [...a.path, a] : [], this.parent = a, this.depth = a ? a.depth + 1 : 0;
      for (let l = 0; l < this.path.length; l++)
        this.path[l].shouldResetTransform = !0;
      this.root === this && (this.nodes = new c1());
    }
    addEventListener(r, a) {
      return this.eventHandlers.has(r) || this.eventHandlers.set(r, new Sn()), this.eventHandlers.get(r).add(a);
    }
    notifyListeners(r, ...a) {
      const l = this.eventHandlers.get(r);
      l && l.notify(...a);
    }
    hasListeners(r) {
      return this.eventHandlers.has(r);
    }
    /**
     * Lifecycles
     */
    mount(r, a = this.root.hasTreeAnimated) {
      if (this.instance)
        return;
      this.isSVG = a1(r), this.instance = r;
      const { layoutId: l, layout: c, visualElement: u } = this.options;
      if (u && !u.current && u.mount(r), this.root.nodes.add(this), this.parent && this.parent.children.add(this), a && (c || l) && (this.isLayoutDirty = !0), t) {
        let h;
        const d = () => this.root.updateBlockedByResize = !1;
        t(r, () => {
          this.root.updateBlockedByResize = !0, h && h(), h = u1(d, 250), Qt.hasAnimatedSinceResize && (Qt.hasAnimatedSinceResize = !1, this.nodes.forEach(X2));
        });
      }
      l && this.root.registerSharedNode(l, this), this.options.animate !== !1 && u && (l || c) && this.addEventListener("didUpdate", ({ delta: h, hasLayoutChanged: d, hasRelativeTargetChanged: f, layout: p }) => {
        if (this.isTreeAnimationBlocked()) {
          this.target = void 0, this.relativeTarget = void 0;
          return;
        }
        const m = this.options.transition || u.getDefaultTransition() || j1, { onLayoutAnimationStart: y, onLayoutAnimationComplete: g } = u.getProps(), v = !this.targetLayout || !Is(this.targetLayout, p) || f, C = !d && f;
        if (this.options.layoutRoot || this.resumeFrom && this.resumeFrom.instance || C || d && (v || !this.currentAnimation)) {
          this.resumeFrom && (this.resumingFrom = this.resumeFrom, this.resumingFrom.resumingFrom = void 0), this.setAnimationOrigin(h, C);
          const P = {
            ...xn(m, "layout"),
            onPlay: y,
            onComplete: g
          };
          (u.shouldReduceMotion || this.options.layoutRoot) && (P.delay = 0, P.type = !1), this.startAnimation(P);
        } else
          d || X2(this), this.isLead() && this.options.onExitComplete && this.options.onExitComplete();
        this.targetLayout = p;
      });
    }
    unmount() {
      this.options.layoutId && this.willUpdate(), this.root.nodes.remove(this);
      const r = this.getStack();
      r && r.remove(this), this.parent && this.parent.children.delete(this), this.instance = void 0, st(this.updateProjection);
    }
    // only on the root
    blockUpdate() {
      this.updateManuallyBlocked = !0;
    }
    unblockUpdate() {
      this.updateManuallyBlocked = !1;
    }
    isUpdateBlocked() {
      return this.updateManuallyBlocked || this.updateBlockedByResize;
    }
    isTreeAnimationBlocked() {
      return this.isAnimationBlocked || this.parent && this.parent.isTreeAnimationBlocked() || !1;
    }
    // Note: currently only running on root node
    startUpdate() {
      this.isUpdateBlocked() || (this.isUpdating = !0, this.nodes && this.nodes.forEach(R1), this.animationId++);
    }
    getTransformTemplate() {
      const { visualElement: r } = this.options;
      return r && r.getProps().transformTemplate;
    }
    willUpdate(r = !0) {
      if (this.root.hasTreeAnimated = !0, this.root.isUpdateBlocked()) {
        this.options.onExitComplete && this.options.onExitComplete();
        return;
      }
      if (window.MotionCancelOptimisedAnimation && !this.hasCheckedOptimisedAppear && _s(this), !this.root.isUpdating && this.root.startUpdate(), this.isLayoutDirty)
        return;
      this.isLayoutDirty = !0;
      for (let u = 0; u < this.path.length; u++) {
        const h = this.path[u];
        h.shouldResetTransform = !0, h.updateScroll("snapshot"), h.options.layoutRoot && h.willUpdate(!1);
      }
      const { layoutId: a, layout: l } = this.options;
      if (a === void 0 && !l)
        return;
      const c = this.getTransformTemplate();
      this.prevTransformTemplateValue = c ? c(this.latestValues, "") : void 0, this.updateSnapshot(), r && this.notifyListeners("willUpdate");
    }
    update() {
      if (this.updateScheduled = !1, this.isUpdateBlocked()) {
        this.unblockUpdate(), this.clearAllSnapshots(), this.nodes.forEach(Y2);
        return;
      }
      this.isUpdating || this.nodes.forEach(L1), this.isUpdating = !1, this.nodes.forEach(M1), this.nodes.forEach(T1), this.nodes.forEach(P1), this.clearAllSnapshots();
      const a = J.now();
      j.delta = et(0, 1e3 / 60, a - j.timestamp), j.timestamp = a, j.isProcessing = !0, Ce.update.process(j), Ce.preRender.process(j), Ce.render.process(j), j.isProcessing = !1;
    }
    didUpdate() {
      this.updateScheduled || (this.updateScheduled = !0, un.read(this.scheduleUpdate));
    }
    clearAllSnapshots() {
      this.nodes.forEach(A1), this.sharedNodes.forEach(F1);
    }
    scheduleUpdateProjection() {
      this.projectionUpdateScheduled || (this.projectionUpdateScheduled = !0, S.preRender(this.updateProjection, !1, !0));
    }
    scheduleCheckAfterUnmount() {
      S.postRender(() => {
        this.isLayoutDirty ? this.root.didUpdate() : this.root.checkUpdateFailed();
      });
    }
    /**
     * Update measurements
     */
    updateSnapshot() {
      this.snapshot || !this.instance || (this.snapshot = this.measure());
    }
    updateLayout() {
      if (!this.instance || (this.updateScroll(), !(this.options.alwaysMeasureLayout && this.isLead()) && !this.isLayoutDirty))
        return;
      if (this.resumeFrom && !this.resumeFrom.instance)
        for (let l = 0; l < this.path.length; l++)
          this.path[l].updateScroll();
      const r = this.layout;
      this.layout = this.measure(!1), this.layoutCorrected = E(), this.isLayoutDirty = !1, this.projectionDelta = void 0, this.notifyListeners("measure", this.layout.layoutBox);
      const { visualElement: a } = this.options;
      a && a.notify("LayoutMeasure", this.layout.layoutBox, r ? r.layoutBox : void 0);
    }
    updateScroll(r = "measure") {
      let a = !!(this.options.layoutScroll && this.instance);
      if (this.scroll && this.scroll.animationId === this.root.animationId && this.scroll.phase === r && (a = !1), a) {
        const l = i(this.instance);
        this.scroll = {
          animationId: this.root.animationId,
          phase: r,
          isRoot: l,
          offset: n(this.instance),
          wasRoot: this.scroll ? this.scroll.isRoot : l
        };
      }
    }
    resetTransform() {
      if (!s)
        return;
      const r = this.isLayoutDirty || this.shouldResetTransform || this.options.alwaysMeasureLayout, a = this.projectionDelta && !Bs(this.projectionDelta), l = this.getTransformTemplate(), c = l ? l(this.latestValues, "") : void 0, u = c !== this.prevTransformTemplateValue;
      r && (a || lt(this.latestValues) || u) && (s(this.instance, c), this.shouldResetTransform = !1, this.scheduleRender());
    }
    measure(r = !0) {
      const a = this.measurePageBox();
      let l = this.removeElementScroll(a);
      return r && (l = this.removeTransform(l)), k1(l), {
        animationId: this.root.animationId,
        measuredBox: a,
        layoutBox: l,
        latestValues: {},
        source: this.id
      };
    }
    measurePageBox() {
      var r;
      const { visualElement: a } = this.options;
      if (!a)
        return E();
      const l = a.measureViewportBox();
      if (!(((r = this.scroll) === null || r === void 0 ? void 0 : r.wasRoot) || this.path.some(B1))) {
        const { scroll: u } = this.root;
        u && (gt(l.x, u.offset.x), gt(l.y, u.offset.y));
      }
      return l;
    }
    removeElementScroll(r) {
      var a;
      const l = E();
      if (K(l, r), !((a = this.scroll) === null || a === void 0) && a.wasRoot)
        return l;
      for (let c = 0; c < this.path.length; c++) {
        const u = this.path[c], { scroll: h, options: d } = u;
        u !== this.root && h && d.layoutScroll && (h.wasRoot && K(l, r), gt(l.x, h.offset.x), gt(l.y, h.offset.y));
      }
      return l;
    }
    applyTransform(r, a = !1) {
      const l = E();
      K(l, r);
      for (let c = 0; c < this.path.length; c++) {
        const u = this.path[c];
        !a && u.options.layoutScroll && u.scroll && u !== u.root && yt(l, {
          x: -u.scroll.offset.x,
          y: -u.scroll.offset.y
        }), lt(u.latestValues) && yt(l, u.latestValues);
      }
      return lt(this.latestValues) && yt(l, this.latestValues), l;
    }
    removeTransform(r) {
      const a = E();
      K(a, r);
      for (let l = 0; l < this.path.length; l++) {
        const c = this.path[l];
        if (!c.instance || !lt(c.latestValues))
          continue;
        ze(c.latestValues) && c.updateSnapshot();
        const u = E(), h = c.measurePageBox();
        K(u, h), $2(a, c.latestValues, c.snapshot ? c.snapshot.layoutBox : void 0, u);
      }
      return lt(this.latestValues) && $2(a, this.latestValues), a;
    }
    setTargetDelta(r) {
      this.targetDelta = r, this.root.scheduleUpdateProjection(), this.isProjectionDirty = !0;
    }
    setOptions(r) {
      this.options = {
        ...this.options,
        ...r,
        crossfade: r.crossfade !== void 0 ? r.crossfade : !0
      };
    }
    clearMeasurements() {
      this.scroll = void 0, this.layout = void 0, this.snapshot = void 0, this.prevTransformTemplateValue = void 0, this.targetDelta = void 0, this.target = void 0, this.isLayoutDirty = !1;
    }
    forceRelativeParentToResolveTarget() {
      this.relativeParent && this.relativeParent.resolvedRelativeTargetAt !== j.timestamp && this.relativeParent.resolveTargetDelta(!0);
    }
    resolveTargetDelta(r = !1) {
      var a;
      const l = this.getLead();
      this.isProjectionDirty || (this.isProjectionDirty = l.isProjectionDirty), this.isTransformDirty || (this.isTransformDirty = l.isTransformDirty), this.isSharedProjectionDirty || (this.isSharedProjectionDirty = l.isSharedProjectionDirty);
      const c = !!this.resumingFrom || this !== l;
      if (!(r || c && this.isSharedProjectionDirty || this.isProjectionDirty || !((a = this.parent) === null || a === void 0) && a.isProjectionDirty || this.attemptToResolveRelativeTarget || this.root.updateBlockedByResize))
        return;
      const { layout: h, layoutId: d } = this.options;
      if (!(!this.layout || !(h || d))) {
        if (this.resolvedRelativeTargetAt = j.timestamp, !this.targetDelta && !this.relativeTarget) {
          const f = this.getClosestProjectingParent();
          f && f.layout && this.animationProgress !== 1 ? (this.relativeParent = f, this.forceRelativeParentToResolveTarget(), this.relativeTarget = E(), this.relativeTargetOrigin = E(), Nt(this.relativeTargetOrigin, this.layout.layoutBox, f.layout.layoutBox), K(this.relativeTarget, this.relativeTargetOrigin)) : this.relativeParent = this.relativeTarget = void 0;
        }
        if (!(!this.relativeTarget && !this.targetDelta)) {
          if (this.target || (this.target = E(), this.targetWithTransforms = E()), this.relativeTarget && this.relativeTargetOrigin && this.relativeParent && this.relativeParent.target ? (this.forceRelativeParentToResolveTarget(), Ha(this.target, this.relativeTarget, this.relativeParent.target)) : this.targetDelta ? (this.resumingFrom ? this.target = this.applyTransform(this.layout.layoutBox) : K(this.target, this.layout.layoutBox), Rs(this.target, this.targetDelta)) : K(this.target, this.layout.layoutBox), this.attemptToResolveRelativeTarget) {
            this.attemptToResolveRelativeTarget = !1;
            const f = this.getClosestProjectingParent();
            f && !!f.resumingFrom == !!this.resumingFrom && !f.options.layoutScroll && f.target && this.animationProgress !== 1 ? (this.relativeParent = f, this.forceRelativeParentToResolveTarget(), this.relativeTarget = E(), this.relativeTargetOrigin = E(), Nt(this.relativeTargetOrigin, this.target, f.target), K(this.relativeTarget, this.relativeTargetOrigin)) : this.relativeParent = this.relativeTarget = void 0;
          }
          Et && ct.resolvedTargetDeltas++;
        }
      }
    }
    getClosestProjectingParent() {
      if (!(!this.parent || ze(this.parent.latestValues) || Es(this.parent.latestValues)))
        return this.parent.isProjecting() ? this.parent : this.parent.getClosestProjectingParent();
    }
    isProjecting() {
      return !!((this.relativeTarget || this.targetDelta || this.options.layoutRoot) && this.layout);
    }
    calcProjection() {
      var r;
      const a = this.getLead(), l = !!this.resumingFrom || this !== a;
      let c = !0;
      if ((this.isProjectionDirty || !((r = this.parent) === null || r === void 0) && r.isProjectionDirty) && (c = !1), l && (this.isSharedProjectionDirty || this.isTransformDirty) && (c = !1), this.resolvedRelativeTargetAt === j.timestamp && (c = !1), c)
        return;
      const { layout: u, layoutId: h } = this.options;
      if (this.isTreeAnimating = !!(this.parent && this.parent.isTreeAnimating || this.currentAnimation || this.pendingAnimation), this.isTreeAnimating || (this.targetDelta = this.relativeTarget = void 0), !this.layout || !(u || h))
        return;
      K(this.layoutCorrected, this.layout.layoutBox);
      const d = this.treeScale.x, f = this.treeScale.y;
      Ya(this.layoutCorrected, this.treeScale, this.path, l), a.layout && !a.target && (this.treeScale.x !== 1 || this.treeScale.y !== 1) && (a.target = a.layout.layoutBox, a.targetWithTransforms = E());
      const { target: p } = a;
      if (!p) {
        this.prevProjectionDelta && (this.createProjectionDeltas(), this.scheduleRender());
        return;
      }
      !this.projectionDelta || !this.prevProjectionDelta ? this.createProjectionDeltas() : (_2(this.prevProjectionDelta.x, this.projectionDelta.x), _2(this.prevProjectionDelta.y, this.projectionDelta.y)), Ot(this.projectionDelta, this.layoutCorrected, p, this.latestValues), (this.treeScale.x !== d || this.treeScale.y !== f || !z2(this.projectionDelta.x, this.prevProjectionDelta.x) || !z2(this.projectionDelta.y, this.prevProjectionDelta.y)) && (this.hasProjected = !0, this.scheduleRender(), this.notifyListeners("projectionUpdate", p)), Et && ct.recalculatedProjection++;
    }
    hide() {
      this.isVisible = !1;
    }
    show() {
      this.isVisible = !0;
    }
    scheduleRender(r = !0) {
      var a;
      if ((a = this.options.visualElement) === null || a === void 0 || a.scheduleRender(), r) {
        const l = this.getStack();
        l && l.scheduleRender();
      }
      this.resumingFrom && !this.resumingFrom.instance && (this.resumingFrom = void 0);
    }
    createProjectionDeltas() {
      this.prevProjectionDelta = mt(), this.projectionDelta = mt(), this.projectionDeltaWithTransform = mt();
    }
    setAnimationOrigin(r, a = !1) {
      const l = this.snapshot, c = l ? l.latestValues : {}, u = { ...this.latestValues }, h = mt();
      (!this.relativeParent || !this.relativeParent.options.layoutRoot) && (this.relativeTarget = this.relativeTargetOrigin = void 0), this.attemptToResolveRelativeTarget = !a;
      const d = E(), f = l ? l.source : void 0, p = this.layout ? this.layout.source : void 0, m = f !== p, y = this.getStack(), g = !y || y.members.length <= 1, v = !!(m && !g && this.options.crossfade === !0 && !this.path.some(N1));
      this.animationProgress = 0;
      let C;
      this.mixTargetDelta = (P) => {
        const b = P / 1e3;
        J2(h.x, r.x, b), J2(h.y, r.y, b), this.setTargetDelta(h), this.relativeTarget && this.relativeTargetOrigin && this.layout && this.relativeParent && this.relativeParent.layout && (Nt(d, this.layout.layoutBox, this.relativeParent.layout.layoutBox), O1(this.relativeTarget, this.relativeTargetOrigin, d, b), C && v1(this.relativeTarget, C) && (this.isProjectionDirty = !1), C || (C = E()), K(C, this.relativeTarget)), m && (this.animationValues = u, d1(u, c, this.latestValues, b, v, g)), this.root.scheduleUpdateProjection(), this.scheduleRender(), this.animationProgress = b;
      }, this.mixTargetDelta(this.options.layoutRoot ? 1e3 : 0);
    }
    startAnimation(r) {
      this.notifyListeners("animationStart"), this.currentAnimation && this.currentAnimation.stop(), this.resumingFrom && this.resumingFrom.currentAnimation && this.resumingFrom.currentAnimation.stop(), this.pendingAnimation && (st(this.pendingAnimation), this.pendingAnimation = void 0), this.pendingAnimation = S.update(() => {
        Qt.hasAnimatedSinceResize = !0, this.currentAnimation = o1(0, q2, {
          ...r,
          onUpdate: (a) => {
            this.mixTargetDelta(a), r.onUpdate && r.onUpdate(a);
          },
          onComplete: () => {
            r.onComplete && r.onComplete(), this.completeAnimation();
          }
        }), this.resumingFrom && (this.resumingFrom.currentAnimation = this.currentAnimation), this.pendingAnimation = void 0;
      });
    }
    completeAnimation() {
      this.resumingFrom && (this.resumingFrom.currentAnimation = void 0, this.resumingFrom.preserveOpacity = void 0);
      const r = this.getStack();
      r && r.exitAnimationComplete(), this.resumingFrom = this.currentAnimation = this.animationValues = void 0, this.notifyListeners("animationComplete");
    }
    finishAnimation() {
      this.currentAnimation && (this.mixTargetDelta && this.mixTargetDelta(q2), this.currentAnimation.stop()), this.completeAnimation();
    }
    applyTransformsToTarget() {
      const r = this.getLead();
      let { targetWithTransforms: a, target: l, layout: c, latestValues: u } = r;
      if (!(!a || !l || !c)) {
        if (this !== r && this.layout && c && Us(this.options.animationType, this.layout.layoutBox, c.layoutBox)) {
          l = this.target || E();
          const h = W(this.layout.layoutBox.x);
          l.x.min = r.target.x.min, l.x.max = l.x.min + h;
          const d = W(this.layout.layoutBox.y);
          l.y.min = r.target.y.min, l.y.max = l.y.min + d;
        }
        K(a, l), yt(a, u), Ot(this.projectionDeltaWithTransform, this.layoutCorrected, a, u);
      }
    }
    registerSharedNode(r, a) {
      this.sharedNodes.has(r) || this.sharedNodes.set(r, new C1()), this.sharedNodes.get(r).add(a);
      const c = a.options.initialPromotionConfig;
      a.promote({
        transition: c ? c.transition : void 0,
        preserveFollowOpacity: c && c.shouldPreserveFollowOpacity ? c.shouldPreserveFollowOpacity(a) : void 0
      });
    }
    isLead() {
      const r = this.getStack();
      return r ? r.lead === this : !0;
    }
    getLead() {
      var r;
      const { layoutId: a } = this.options;
      return a ? ((r = this.getStack()) === null || r === void 0 ? void 0 : r.lead) || this : this;
    }
    getPrevLead() {
      var r;
      const { layoutId: a } = this.options;
      return a ? (r = this.getStack()) === null || r === void 0 ? void 0 : r.prevLead : void 0;
    }
    getStack() {
      const { layoutId: r } = this.options;
      if (r)
        return this.root.sharedNodes.get(r);
    }
    promote({ needsReset: r, transition: a, preserveFollowOpacity: l } = {}) {
      const c = this.getStack();
      c && c.promote(this, l), r && (this.projectionDelta = void 0, this.needsReset = !0), a && this.setOptions({ transition: a });
    }
    relegate() {
      const r = this.getStack();
      return r ? r.relegate(this) : !1;
    }
    resetSkewAndRotation() {
      const { visualElement: r } = this.options;
      if (!r)
        return;
      let a = !1;
      const { latestValues: l } = r;
      if ((l.z || l.rotate || l.rotateX || l.rotateY || l.rotateZ || l.skewX || l.skewY) && (a = !0), !a)
        return;
      const c = {};
      l.z && Le("z", r, c, this.animationValues);
      for (let u = 0; u < Ae.length; u++)
        Le(`rotate${Ae[u]}`, r, c, this.animationValues), Le(`skew${Ae[u]}`, r, c, this.animationValues);
      r.render();
      for (const u in c)
        r.setStaticValue(u, c[u]), this.animationValues && (this.animationValues[u] = c[u]);
      r.scheduleRender();
    }
    getProjectionStyles(r) {
      var a, l;
      if (!this.instance || this.isSVG)
        return;
      if (!this.isVisible)
        return b1;
      const c = {
        visibility: ""
      }, u = this.getTransformTemplate();
      if (this.needsReset)
        return this.needsReset = !1, c.opacity = "", c.pointerEvents = Xt(r == null ? void 0 : r.pointerEvents) || "", c.transform = u ? u(this.latestValues, "") : "none", c;
      const h = this.getLead();
      if (!this.projectionDelta || !this.layout || !h.target) {
        const m = {};
        return this.options.layoutId && (m.opacity = this.latestValues.opacity !== void 0 ? this.latestValues.opacity : 1, m.pointerEvents = Xt(r == null ? void 0 : r.pointerEvents) || ""), this.hasProjected && !lt(this.latestValues) && (m.transform = u ? u({}, "") : "none", this.hasProjected = !1), m;
      }
      const d = h.animationValues || h.latestValues;
      this.applyTransformsToTarget(), c.transform = x1(this.projectionDeltaWithTransform, this.treeScale, d), u && (c.transform = u(d, c.transform));
      const { x: f, y: p } = this.projectionDelta;
      c.transformOrigin = `${f.origin * 100}% ${p.origin * 100}% 0`, h.animationValues ? c.opacity = h === this ? (l = (a = d.opacity) !== null && a !== void 0 ? a : this.latestValues.opacity) !== null && l !== void 0 ? l : 1 : this.preserveOpacity ? this.latestValues.opacity : d.opacityExit : c.opacity = h === this ? d.opacity !== void 0 ? d.opacity : "" : d.opacityExit !== void 0 ? d.opacityExit : 0;
      for (const m in ee) {
        if (d[m] === void 0)
          continue;
        const { correct: y, applyTo: g } = ee[m], v = c.transform === "none" ? d[m] : y(d[m], h);
        if (g) {
          const C = g.length;
          for (let P = 0; P < C; P++)
            c[g[P]] = v;
        } else
          c[m] = v;
      }
      return this.options.layoutId && (c.pointerEvents = h === this ? Xt(r == null ? void 0 : r.pointerEvents) || "" : "none"), c;
    }
    clearSnapshot() {
      this.resumeFrom = this.snapshot = void 0;
    }
    // Only run on root
    resetTree() {
      this.root.nodes.forEach((r) => {
        var a;
        return (a = r.currentAnimation) === null || a === void 0 ? void 0 : a.stop();
      }), this.root.nodes.forEach(Y2), this.root.sharedNodes.clear();
    }
  };
}
function T1(t) {
  t.updateLayout();
}
function P1(t) {
  var e;
  const n = ((e = t.resumeFrom) === null || e === void 0 ? void 0 : e.snapshot) || t.snapshot;
  if (t.isLead() && t.layout && n && t.hasListeners("didUpdate")) {
    const { layoutBox: i, measuredBox: s } = t.layout, { animationType: o } = t.options, r = n.source !== t.layout.source;
    o === "size" ? G((h) => {
      const d = r ? n.measuredBox[h] : n.layoutBox[h], f = W(d);
      d.min = i[h].min, d.max = d.min + f;
    }) : Us(o, n.layoutBox, i) && G((h) => {
      const d = r ? n.measuredBox[h] : n.layoutBox[h], f = W(i[h]);
      d.max = d.min + f, t.relativeTarget && !t.currentAnimation && (t.isProjectionDirty = !0, t.relativeTarget[h].max = t.relativeTarget[h].min + f);
    });
    const a = mt();
    Ot(a, i, n.layoutBox);
    const l = mt();
    r ? Ot(l, t.applyTransform(s, !0), n.measuredBox) : Ot(l, i, n.layoutBox);
    const c = !Bs(a);
    let u = !1;
    if (!t.resumeFrom) {
      const h = t.getClosestProjectingParent();
      if (h && !h.resumeFrom) {
        const { snapshot: d, layout: f } = h;
        if (d && f) {
          const p = E();
          Nt(p, n.layoutBox, d.layoutBox);
          const m = E();
          Nt(m, i, f.layoutBox), Is(p, m) || (u = !0), h.options.layoutRoot && (t.relativeTarget = m, t.relativeTargetOrigin = p, t.relativeParent = h);
        }
      }
    }
    t.notifyListeners("didUpdate", {
      layout: i,
      snapshot: n,
      delta: l,
      layoutDelta: a,
      hasLayoutChanged: c,
      hasRelativeTargetChanged: u
    });
  } else if (t.isLead()) {
    const { onExitComplete: i } = t.options;
    i && i();
  }
  t.options.transition = void 0;
}
function V1(t) {
  Et && ct.totalNodes++, t.parent && (t.isProjecting() || (t.isProjectionDirty = t.parent.isProjectionDirty), t.isSharedProjectionDirty || (t.isSharedProjectionDirty = !!(t.isProjectionDirty || t.parent.isProjectionDirty || t.parent.isSharedProjectionDirty)), t.isTransformDirty || (t.isTransformDirty = t.parent.isTransformDirty));
}
function S1(t) {
  t.isProjectionDirty = t.isSharedProjectionDirty = t.isTransformDirty = !1;
}
function A1(t) {
  t.clearSnapshot();
}
function Y2(t) {
  t.clearMeasurements();
}
function L1(t) {
  t.isLayoutDirty = !1;
}
function M1(t) {
  const { visualElement: e } = t.options;
  e && e.getProps().onBeforeLayoutMeasure && e.notify("BeforeLayoutMeasure"), t.resetTransform();
}
function X2(t) {
  t.finishAnimation(), t.targetDelta = t.relativeTarget = t.target = void 0, t.isProjectionDirty = !0;
}
function D1(t) {
  t.resolveTargetDelta();
}
function E1(t) {
  t.calcProjection();
}
function R1(t) {
  t.resetSkewAndRotation();
}
function F1(t) {
  t.removeLeadSnapshot();
}
function J2(t, e, n) {
  t.translate = D(e.translate, 0, n), t.scale = D(e.scale, 1, n), t.origin = e.origin, t.originPoint = e.originPoint;
}
function Q2(t, e, n, i) {
  t.min = D(e.min, n.min, i), t.max = D(e.max, n.max, i);
}
function O1(t, e, n, i) {
  Q2(t.x, e.x, n.x, i), Q2(t.y, e.y, n.y, i);
}
function N1(t) {
  return t.animationValues && t.animationValues.opacityExit !== void 0;
}
const j1 = {
  duration: 0.45,
  ease: [0.4, 0, 0.1, 1]
}, ti = (t) => typeof navigator < "u" && navigator.userAgent && navigator.userAgent.toLowerCase().includes(t), ei = ti("applewebkit/") && !ti("chrome/") ? Math.round : $;
function ni(t) {
  t.min = ei(t.min), t.max = ei(t.max);
}
function k1(t) {
  ni(t.x), ni(t.y);
}
function Us(t, e, n) {
  return t === "position" || t === "preserve-aspect" && !_a(G2(e), G2(n), 0.2);
}
function B1(t) {
  var e;
  return t !== t.root && ((e = t.scroll) === null || e === void 0 ? void 0 : e.wasRoot);
}
const I1 = Hs({
  attachResizeListener: (t, e) => _t(t, "resize", e),
  measureScroll: () => ({
    x: document.documentElement.scrollLeft || document.body.scrollLeft,
    y: document.documentElement.scrollTop || document.body.scrollTop
  }),
  checkIsScrollRoot: () => !0
}), Me = {
  current: void 0
}, $s = Hs({
  measureScroll: (t) => ({
    x: t.scrollLeft,
    y: t.scrollTop
  }),
  defaultParent: () => {
    if (!Me.current) {
      const t = new I1({});
      t.mount(window), t.setOptions({ layoutScroll: !0 }), Me.current = t;
    }
    return Me.current;
  },
  resetTransform: (t, e) => {
    t.style.transform = e !== void 0 ? e : "none";
  },
  checkIsScrollRoot: (t) => window.getComputedStyle(t).position === "fixed"
}), _1 = {
  pan: {
    Feature: n1
  },
  drag: {
    Feature: e1,
    ProjectionNode: $s,
    MeasureLayout: Ns
  }
};
function ii(t, e, n) {
  const { props: i } = t;
  t.animationState && i.whileHover && t.animationState.setActive("whileHover", n === "Start");
  const s = "onHover" + n, o = i[s];
  o && S.postRender(() => o(e, Wt(e)));
}
class H1 extends ot {
  mount() {
    const { current: e } = this.node;
    e && (this.unmount = Ir(e, (n) => (ii(this.node, n, "Start"), (i) => ii(this.node, i, "End"))));
  }
  unmount() {
  }
}
class U1 extends ot {
  constructor() {
    super(...arguments), this.isActive = !1;
  }
  onFocus() {
    let e = !1;
    try {
      e = this.node.current.matches(":focus-visible");
    } catch {
      e = !0;
    }
    !e || !this.node.animationState || (this.node.animationState.setActive("whileFocus", !0), this.isActive = !0);
  }
  onBlur() {
    !this.isActive || !this.node.animationState || (this.node.animationState.setActive("whileFocus", !1), this.isActive = !1);
  }
  mount() {
    this.unmount = Zt(_t(this.node.current, "focus", () => this.onFocus()), _t(this.node.current, "blur", () => this.onBlur()));
  }
  unmount() {
  }
}
function si(t, e, n) {
  const { props: i } = t;
  t.animationState && i.whileTap && t.animationState.setActive("whileTap", n === "Start");
  const s = "onTap" + (n === "End" ? "" : n), o = i[s];
  o && S.postRender(() => o(e, Wt(e)));
}
class $1 extends ot {
  mount() {
    const { current: e } = this.node;
    e && (this.unmount = $r(e, (n) => (si(this.node, n, "Start"), (i, { success: s }) => si(this.node, i, s ? "End" : "Cancel")), { useGlobalTarget: this.node.props.globalTapTarget }));
  }
  unmount() {
  }
}
const Ye = /* @__PURE__ */ new WeakMap(), De = /* @__PURE__ */ new WeakMap(), Z1 = (t) => {
  const e = Ye.get(t.target);
  e && e(t);
}, W1 = (t) => {
  t.forEach(Z1);
};
function K1({ root: t, ...e }) {
  const n = t || document;
  De.has(n) || De.set(n, {});
  const i = De.get(n), s = JSON.stringify(e);
  return i[s] || (i[s] = new IntersectionObserver(W1, { root: t, ...e })), i[s];
}
function G1(t, e, n) {
  const i = K1(e);
  return Ye.set(t, n), i.observe(t), () => {
    Ye.delete(t), i.unobserve(t);
  };
}
const z1 = {
  some: 0,
  all: 1
};
class q1 extends ot {
  constructor() {
    super(...arguments), this.hasEnteredView = !1, this.isInView = !1;
  }
  startObserver() {
    this.unmount();
    const { viewport: e = {} } = this.node.getProps(), { root: n, margin: i, amount: s = "some", once: o } = e, r = {
      root: n ? n.current : void 0,
      rootMargin: i,
      threshold: typeof s == "number" ? s : z1[s]
    }, a = (l) => {
      const { isIntersecting: c } = l;
      if (this.isInView === c || (this.isInView = c, o && !c && this.hasEnteredView))
        return;
      c && (this.hasEnteredView = !0), this.node.animationState && this.node.animationState.setActive("whileInView", c);
      const { onViewportEnter: u, onViewportLeave: h } = this.node.getProps(), d = c ? u : h;
      d && d(l);
    };
    return G1(this.node.current, r, a);
  }
  mount() {
    this.startObserver();
  }
  update() {
    if (typeof IntersectionObserver > "u")
      return;
    const { props: e, prevProps: n } = this.node;
    ["amount", "margin", "root"].some(Y1(e, n)) && this.startObserver();
  }
  unmount() {
  }
}
function Y1({ viewport: t = {} }, { viewport: e = {} } = {}) {
  return (n) => t[n] !== e[n];
}
const X1 = {
  inView: {
    Feature: q1
  },
  tap: {
    Feature: $1
  },
  focus: {
    Feature: U1
  },
  hover: {
    Feature: H1
  }
}, J1 = {
  layout: {
    ProjectionNode: $s,
    MeasureLayout: Ns
  }
}, Xe = { current: null }, Zs = { current: !1 };
function Q1() {
  if (Zs.current = !0, !!rn)
    if (window.matchMedia) {
      const t = window.matchMedia("(prefers-reduced-motion)"), e = () => Xe.current = t.matches;
      t.addListener(e), e();
    } else
      Xe.current = !1;
}
const tl = [...ms, B, rt], el = (t) => tl.find(ps(t)), ri = /* @__PURE__ */ new WeakMap();
function nl(t, e, n) {
  for (const i in e) {
    const s = e[i], o = n[i];
    if (I(s))
      t.addValue(i, s), process.env.NODE_ENV === "development" && ce(s.version === "11.18.2", `Attempting to mix Motion versions ${s.version} with 11.18.2 may not work as expected.`);
    else if (I(o))
      t.addValue(i, Bt(s, { owner: t }));
    else if (o !== s)
      if (t.hasValue(i)) {
        const r = t.getValue(i);
        r.liveStyle === !0 ? r.jump(s) : r.hasAnimated || r.set(s);
      } else {
        const r = t.getStaticValue(i);
        t.addValue(i, Bt(r !== void 0 ? r : s, { owner: t }));
      }
  }
  for (const i in n)
    e[i] === void 0 && t.removeValue(i);
  return e;
}
const oi = [
  "AnimationStart",
  "AnimationComplete",
  "Update",
  "BeforeLayoutMeasure",
  "LayoutMeasure",
  "LayoutAnimationStart",
  "LayoutAnimationComplete"
];
class il {
  /**
   * This method takes React props and returns found MotionValues. For example, HTML
   * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.
   *
   * This isn't an abstract method as it needs calling in the constructor, but it is
   * intended to be one.
   */
  scrapeMotionValuesFromProps(e, n, i) {
    return {};
  }
  constructor({ parent: e, props: n, presenceContext: i, reducedMotionConfig: s, blockInitialAnimation: o, visualState: r }, a = {}) {
    this.current = null, this.children = /* @__PURE__ */ new Set(), this.isVariantNode = !1, this.isControllingVariants = !1, this.shouldReduceMotion = null, this.values = /* @__PURE__ */ new Map(), this.KeyframeResolver = Rn, this.features = {}, this.valueSubscriptions = /* @__PURE__ */ new Map(), this.prevMotionValues = {}, this.events = {}, this.propEventSubscriptions = {}, this.notifyUpdate = () => this.notify("Update", this.latestValues), this.render = () => {
      this.current && (this.triggerBuild(), this.renderInstance(this.current, this.renderState, this.props.style, this.projection));
    }, this.renderScheduledAt = 0, this.scheduleRender = () => {
      const f = J.now();
      this.renderScheduledAt < f && (this.renderScheduledAt = f, S.render(this.render, !1, !0));
    };
    const { latestValues: l, renderState: c, onUpdate: u } = r;
    this.onUpdate = u, this.latestValues = l, this.baseTarget = { ...l }, this.initialValues = n.initial ? { ...l } : {}, this.renderState = c, this.parent = e, this.props = n, this.presenceContext = i, this.depth = e ? e.depth + 1 : 0, this.reducedMotionConfig = s, this.options = a, this.blockInitialAnimation = !!o, this.isControllingVariants = de(n), this.isVariantNode = Ti(n), this.isVariantNode && (this.variantChildren = /* @__PURE__ */ new Set()), this.manuallyAnimateOnMount = !!(e && e.current);
    const { willChange: h, ...d } = this.scrapeMotionValuesFromProps(n, {}, this);
    for (const f in d) {
      const p = d[f];
      l[f] !== void 0 && I(p) && p.set(l[f], !1);
    }
  }
  mount(e) {
    this.current = e, ri.set(e, this), this.projection && !this.projection.instance && this.projection.mount(e), this.parent && this.isVariantNode && !this.isControllingVariants && (this.removeFromVariantTree = this.parent.addVariantChild(this)), this.values.forEach((n, i) => this.bindToMotionValue(i, n)), Zs.current || Q1(), this.shouldReduceMotion = this.reducedMotionConfig === "never" ? !1 : this.reducedMotionConfig === "always" ? !0 : Xe.current, process.env.NODE_ENV !== "production" && ce(this.shouldReduceMotion !== !0, "You have Reduced Motion enabled on your device. Animations may not appear as expected."), this.parent && this.parent.children.add(this), this.update(this.props, this.presenceContext);
  }
  unmount() {
    ri.delete(this.current), this.projection && this.projection.unmount(), st(this.notifyUpdate), st(this.render), this.valueSubscriptions.forEach((e) => e()), this.valueSubscriptions.clear(), this.removeFromVariantTree && this.removeFromVariantTree(), this.parent && this.parent.children.delete(this);
    for (const e in this.events)
      this.events[e].clear();
    for (const e in this.features) {
      const n = this.features[e];
      n && (n.unmount(), n.isMounted = !1);
    }
    this.current = null;
  }
  bindToMotionValue(e, n) {
    this.valueSubscriptions.has(e) && this.valueSubscriptions.get(e)();
    const i = dt.has(e), s = n.on("change", (a) => {
      this.latestValues[e] = a, this.props.onUpdate && S.preRender(this.notifyUpdate), i && this.projection && (this.projection.isTransformDirty = !0);
    }), o = n.on("renderRequest", this.scheduleRender);
    let r;
    window.MotionCheckAppearSync && (r = window.MotionCheckAppearSync(this, e, n)), this.valueSubscriptions.set(e, () => {
      s(), o(), r && r(), n.owner && n.stop();
    });
  }
  sortNodePosition(e) {
    return !this.current || !this.sortInstanceNodePosition || this.type !== e.type ? 0 : this.sortInstanceNodePosition(this.current, e.current);
  }
  updateFeatures() {
    let e = "animation";
    for (e in Ct) {
      const n = Ct[e];
      if (!n)
        continue;
      const { isEnabled: i, Feature: s } = n;
      if (!this.features[e] && s && i(this.props) && (this.features[e] = new s(this)), this.features[e]) {
        const o = this.features[e];
        o.isMounted ? o.update() : (o.mount(), o.isMounted = !0);
      }
    }
  }
  triggerBuild() {
    this.build(this.renderState, this.latestValues, this.props);
  }
  /**
   * Measure the current viewport box with or without transforms.
   * Only measures axis-aligned boxes, rotate and skew must be manually
   * removed with a re-render to work.
   */
  measureViewportBox() {
    return this.current ? this.measureInstanceViewportBox(this.current, this.props) : E();
  }
  getStaticValue(e) {
    return this.latestValues[e];
  }
  setStaticValue(e, n) {
    this.latestValues[e] = n;
  }
  /**
   * Update the provided props. Ensure any newly-added motion values are
   * added to our map, old ones removed, and listeners updated.
   */
  update(e, n) {
    (e.transformTemplate || this.props.transformTemplate) && this.scheduleRender(), this.prevProps = this.props, this.props = e, this.prevPresenceContext = this.presenceContext, this.presenceContext = n;
    for (let i = 0; i < oi.length; i++) {
      const s = oi[i];
      this.propEventSubscriptions[s] && (this.propEventSubscriptions[s](), delete this.propEventSubscriptions[s]);
      const o = "on" + s, r = e[o];
      r && (this.propEventSubscriptions[s] = this.on(s, r));
    }
    this.prevMotionValues = nl(this, this.scrapeMotionValuesFromProps(e, this.prevProps, this), this.prevMotionValues), this.handleChildMotionValue && this.handleChildMotionValue(), this.onUpdate && this.onUpdate(this);
  }
  getProps() {
    return this.props;
  }
  /**
   * Returns the variant definition with a given name.
   */
  getVariant(e) {
    return this.props.variants ? this.props.variants[e] : void 0;
  }
  /**
   * Returns the defined default transition on this component.
   */
  getDefaultTransition() {
    return this.props.transition;
  }
  getTransformPagePoint() {
    return this.props.transformPagePoint;
  }
  getClosestVariantNode() {
    return this.isVariantNode ? this : this.parent ? this.parent.getClosestVariantNode() : void 0;
  }
  /**
   * Add a child visual element to our set of children.
   */
  addVariantChild(e) {
    const n = this.getClosestVariantNode();
    if (n)
      return n.variantChildren && n.variantChildren.add(e), () => n.variantChildren.delete(e);
  }
  /**
   * Add a motion value and bind it to this visual element.
   */
  addValue(e, n) {
    const i = this.values.get(e);
    n !== i && (i && this.removeValue(e), this.bindToMotionValue(e, n), this.values.set(e, n), this.latestValues[e] = n.get());
  }
  /**
   * Remove a motion value and unbind any active subscriptions.
   */
  removeValue(e) {
    this.values.delete(e);
    const n = this.valueSubscriptions.get(e);
    n && (n(), this.valueSubscriptions.delete(e)), delete this.latestValues[e], this.removeValueFromRenderState(e, this.renderState);
  }
  /**
   * Check whether we have a motion value for this key
   */
  hasValue(e) {
    return this.values.has(e);
  }
  getValue(e, n) {
    if (this.props.values && this.props.values[e])
      return this.props.values[e];
    let i = this.values.get(e);
    return i === void 0 && n !== void 0 && (i = Bt(n === null ? void 0 : n, { owner: this }), this.addValue(e, i)), i;
  }
  /**
   * If we're trying to animate to a previously unencountered value,
   * we need to check for it in our state and as a last resort read it
   * directly from the instance (which might have performance implications).
   */
  readValue(e, n) {
    var i;
    let s = this.latestValues[e] !== void 0 || !this.current ? this.latestValues[e] : (i = this.getBaseTargetFromProps(this.props, e)) !== null && i !== void 0 ? i : this.readValueFromInstance(this.current, e, this.options);
    return s != null && (typeof s == "string" && (ds(s) || is(s)) ? s = parseFloat(s) : !el(s) && rt.test(n) && (s = cs(e, n)), this.setBaseTarget(e, I(s) ? s.get() : s)), I(s) ? s.get() : s;
  }
  /**
   * Set the base target to later animate back to. This is currently
   * only hydrated on creation and when we first read a value.
   */
  setBaseTarget(e, n) {
    this.baseTarget[e] = n;
  }
  /**
   * Find the base target for a value thats been removed from all animation
   * props.
   */
  getBaseTarget(e) {
    var n;
    const { initial: i } = this.props;
    let s;
    if (typeof i == "string" || typeof i == "object") {
      const r = dn(this.props, i, (n = this.presenceContext) === null || n === void 0 ? void 0 : n.custom);
      r && (s = r[e]);
    }
    if (i && s !== void 0)
      return s;
    const o = this.getBaseTargetFromProps(this.props, e);
    return o !== void 0 && !I(o) ? o : this.initialValues[e] !== void 0 && s === void 0 ? void 0 : this.baseTarget[e];
  }
  on(e, n) {
    return this.events[e] || (this.events[e] = new Sn()), this.events[e].add(n);
  }
  notify(e, ...n) {
    this.events[e] && this.events[e].notify(...n);
  }
}
class Ws extends il {
  constructor() {
    super(...arguments), this.KeyframeResolver = gs;
  }
  sortInstanceNodePosition(e, n) {
    return e.compareDocumentPosition(n) & 2 ? 1 : -1;
  }
  getBaseTargetFromProps(e, n) {
    return e.style ? e.style[n] : void 0;
  }
  removeValueFromRenderState(e, { vars: n, style: i }) {
    delete n[e], delete i[e];
  }
  handleChildMotionValue() {
    this.childSubscription && (this.childSubscription(), delete this.childSubscription);
    const { children: e } = this.props;
    I(e) && (this.childSubscription = e.on("change", (n) => {
      this.current && (this.current.textContent = `${n}`);
    }));
  }
}
function sl(t) {
  return window.getComputedStyle(t);
}
class rl extends Ws {
  constructor() {
    super(...arguments), this.type = "html", this.renderInstance = Ri;
  }
  readValueFromInstance(e, n) {
    if (dt.has(n)) {
      const i = En(n);
      return i && i.default || 0;
    } else {
      const i = sl(e), s = (Mi(n) ? i.getPropertyValue(n) : i[n]) || 0;
      return typeof s == "string" ? s.trim() : s;
    }
  }
  measureInstanceViewportBox(e, { transformPagePoint: n }) {
    return Fs(e, n);
  }
  build(e, n, i) {
    mn(e, n, i.transformTemplate);
  }
  scrapeMotionValuesFromProps(e, n, i) {
    return Cn(e, n, i);
  }
}
class ol extends Ws {
  constructor() {
    super(...arguments), this.type = "svg", this.isSVGTag = !1, this.measureInstanceViewportBox = E;
  }
  getBaseTargetFromProps(e, n) {
    return e[n];
  }
  readValueFromInstance(e, n) {
    if (dt.has(n)) {
      const i = En(n);
      return i && i.default || 0;
    }
    return n = Fi.has(n) ? n : cn(n), e.getAttribute(n);
  }
  scrapeMotionValuesFromProps(e, n, i) {
    return ji(e, n, i);
  }
  build(e, n, i) {
    gn(e, n, this.isSVGTag, i.transformTemplate);
  }
  renderInstance(e, n, i, s) {
    Oi(e, n, i, s);
  }
  mount(e) {
    this.isSVGTag = vn(e.tagName), super.mount(e);
  }
}
const al = (t, e) => hn(t) ? new ol(e) : new rl(e, {
  allowProjection: t !== ci
}), ll = /* @__PURE__ */ Rr({
  ...Ea,
  ...X1,
  ..._1,
  ...J1
}, al), cl = /* @__PURE__ */ G0(ll), ml = ({
  children: t
}) => /* @__PURE__ */ w(
  cl.div,
  {
    initial: { opacity: 0 },
    animate: { opacity: 1 },
    exit: { opacity: 0 },
    transition: { duration: 0.5 },
    children: t
  }
), gl = ({
  isOpen: t,
  onClose: e,
  title: n,
  children: i
}) => t ? /* @__PURE__ */ w(
  "div",
  {
    className: "fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50",
    onClick: e,
    children: /* @__PURE__ */ _(
      "div",
      {
        className: "bg-white rounded-lg shadow-lg w-full max-w-md p-6 relative transition-all duration-500 ease-linear max-h-[80vh] overflow-y-auto",
        onClick: (s) => s.stopPropagation(),
        children: [
          n && /* @__PURE__ */ w("h2", { className: "text-xl font-semibold mb-4", children: n }),
          /* @__PURE__ */ w("div", { className: "mb-4", children: i }),
          /* @__PURE__ */ w(
            "button",
            {
              className: "absolute top-2 right-2 text-gray-500 hover:text-gray-700",
              onClick: e,
              children: "✕"
            }
          )
        ]
      }
    )
  }
) : null, yl = ({ count: t, ...e }) => /* @__PURE__ */ w("div", { ...e, children: /* @__PURE__ */ w("div", { className: "w-full flex items-center flex-col animate-pulse", children: Array.from({ length: t }).map((n, i) => /* @__PURE__ */ w(
  "div",
  {
    className: "w-full h-5 rounded-sm bg-gray-300 mt-2"
  },
  i
)) }) }), vl = () => {
  const t = nn();
  return /* @__PURE__ */ _("div", { className: "w-screen flex flex-col items-center justify-center h-screen", children: [
    /* @__PURE__ */ _("div", { className: "mb-5 text-center", children: [
      /* @__PURE__ */ w("h2", { children: "Page not found!" }),
      /* @__PURE__ */ w("p", { children: "We're sorry, the page you requested could not be found. Please go back" })
    ] }),
    /* @__PURE__ */ w(yi, { label: "Back Home", onClick: () => t("/") })
  ] });
}, Cl = ({ title: t, message: e, ...n }) => /* @__PURE__ */ _(
  "div",
  {
    ...n,
    className: `item-center w-full flex flex-col gap-y-2 justify-center h-[50vh] bg-red-100 items-center ${n.className || ""}`,
    children: [
      /* @__PURE__ */ w("p", { className: "text-md font-medium", children: t }),
      /* @__PURE__ */ w("p", { children: e }),
      n.callback && /* @__PURE__ */ w(
        yi,
        {
          className: "mt-2 px-4 py-2",
          onClick: n.callback,
          label: n.btnText ?? "Retry"
        }
      )
    ]
  }
);
export {
  yi as AppButton,
  j0 as AppChip,
  A0 as AppHeader,
  N0 as AppLoader,
  gl as AppModalDialog,
  fl as AppUIInput,
  vl as DashboardNotFound,
  Cl as ErrorCard,
  dl as Layout,
  ml as PageTransition,
  P0 as Sidebar,
  yl as SkeletonBar
};
